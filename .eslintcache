[{"/home/project/photobook/photobook_front/src/index.tsx":"1","/home/project/photobook/photobook_front/src/reportWebVitals.ts":"2","/home/project/photobook/photobook_front/src/config.ts":"3","/home/project/photobook/photobook_front/src/app/index.tsx":"4","/home/project/photobook/photobook_front/src/redux/store.ts":"5","/home/project/photobook/photobook_front/src/redux/actions/auth.ts":"6","/home/project/photobook/photobook_front/src/redux/actions/types.ts":"7","/home/project/photobook/photobook_front/src/language/index.tsx":"8","/home/project/photobook/photobook_front/src/route/index.tsx":"9","/home/project/photobook/photobook_front/src/redux/reducers/index.ts":"10","/home/project/photobook/photobook_front/src/api/index.tsx":"11","/home/project/photobook/photobook_front/src/redux/reducers/settings.ts":"12","/home/project/photobook/photobook_front/src/pages/editor/frame.tsx":"13","/home/project/photobook/photobook_front/src/pages/editor/canvas.tsx":"14","/home/project/photobook/photobook_front/src/pages/editor/editor.tsx":"15","/home/project/photobook/photobook_front/src/pages/redirect/index.tsx":"16","/home/project/photobook/photobook_front/src/pages/auth/change-password/index.tsx":"17","/home/project/photobook/photobook_front/src/pages/auth/forgot-password/index.tsx":"18","/home/project/photobook/photobook_front/src/pages/auth/signup/index.tsx":"19","/home/project/photobook/photobook_front/src/pages/auth/login/index.tsx":"20","/home/project/photobook/photobook_front/src/pages/landing/index.tsx":"21","/home/project/photobook/photobook_front/src/pages/product/photobook/index.tsx":"22","/home/project/photobook/photobook_front/src/pages/product/frame/index.tsx":"23","/home/project/photobook/photobook_front/src/pages/product/canvas/index.tsx":"24","/home/project/photobook/photobook_front/src/pages/product/frame/template/index.tsx":"25","/home/project/photobook/photobook_front/src/pages/product/canvas/template/index.tsx":"26","/home/project/photobook/photobook_front/src/components/index.tsx":"27","/home/project/photobook/photobook_front/src/page-components/landing-page/index.ts":"28","/home/project/photobook/photobook_front/src/layouts/main/components/width-limiter/index.tsx":"29","/home/project/photobook/photobook_front/src/components/custom-button/index.tsx":"30","/home/project/photobook/photobook_front/src/page-components/landing-page/features/index.tsx":"31","/home/project/photobook/photobook_front/src/page-components/landing-page/social-proof/index.tsx":"32","/home/project/photobook/photobook_front/src/components/loading/index.tsx":"33","/home/project/photobook/photobook_front/src/components/card-table/generateColumn.tsx":"34","/home/project/photobook/photobook_front/src/page-components/landing-page/image-carousel/index.tsx":"35","/home/project/photobook/photobook_front/src/page-components/landing-page/show-case-products/index.tsx":"36","/home/project/photobook/photobook_front/src/page-components/landing-page/hero/index.tsx":"37","/home/project/photobook/photobook_front/src/components/grid-dnd/index.tsx":"38","/home/project/photobook/photobook_front/src/components/button/index.tsx":"39","/home/project/photobook/photobook_front/src/components/frame-layout-options/index.tsx":"40","/home/project/photobook/photobook_front/src/components/canvas-layout-options/index.tsx":"41","/home/project/photobook/photobook_front/src/components/photobook-layout-options/index.tsx":"42","/home/project/photobook/photobook_front/src/components/categories/index.tsx":"43","/home/project/photobook/photobook_front/src/components/cards/index.tsx":"44","/home/project/photobook/photobook_front/src/components/card-table/index.tsx":"45","/home/project/photobook/photobook_front/src/components/product-list/index.tsx":"46","/home/project/photobook/photobook_front/src/components/product-wrapper/index.tsx":"47","/home/project/photobook/photobook_front/src/components/promp_layout/index.tsx":"48","/home/project/photobook/photobook_front/src/components/prompt/index.tsx":"49","/home/project/photobook/photobook_front/src/components/form-modal/index.tsx":"50","/home/project/photobook/photobook_front/src/components/router/index.tsx":"51","/home/project/photobook/photobook_front/src/components/spinner/index.tsx":"52","/home/project/photobook/photobook_front/src/components/empty/index.tsx":"53","/home/project/photobook/photobook_front/src/components/card-table/settings.tsx":"54","/home/project/photobook/photobook_front/src/components/grid-dnd/withReactToItemsChange/withReactToItemsChange.tsx":"55","/home/project/photobook/photobook_front/src/configs/index.tsx":"56","/home/project/photobook/photobook_front/src/components/grid-dnd/withMaxItems/withMaxItems.tsx":"57","/home/project/photobook/photobook_front/src/components/grid-dnd/DragAndDropWrapper/DragAndDropWrapper.tsx":"58","/home/project/photobook/photobook_front/src/components/grid-dnd/DragAndDropWrapper/ListManagerItem.tsx":"59","/home/project/photobook/photobook_front/src/components/grid-dnd/withMaxItems/compute/index.tsx":"60","/home/project/photobook/photobook_front/src/components/grid-dnd/withMaxItems/compute/computeOriginalIndex.tsx":"61","/home/project/photobook/photobook_front/src/components/grid-dnd/withMaxItems/compute/splitItems.tsx":"62","/home/project/photobook/photobook_front/src/pages/editor/components/preview.tsx":"63","/home/project/photobook/photobook_front/src/redux/actions/project.ts":"64","/home/project/photobook/photobook_front/src/pages/editor/components/utils/index.ts":"65","/home/project/photobook/photobook_front/src/pages/editor/components/layout/index.ts":"66","/home/project/photobook/photobook_front/src/utils/index.tsx":"67","/home/project/photobook/photobook_front/src/utils/transformer-lib.ts":"68","/home/project/photobook/photobook_front/src/utils/aws-lib.ts":"69","/home/project/photobook/photobook_front/src/pages/editor/components/utils/editor/index.ts":"70","/home/project/photobook/photobook_front/src/pages/editor/components/layout/editor-panel/index.ts":"71","/home/project/photobook/photobook_front/src/pages/editor/components/layout/objects/index.tsx":"72","/home/project/photobook/photobook_front/src/pages/editor/components/layout/header/index.tsx":"73","/home/project/photobook/photobook_front/src/pages/editor/components/utils/render/index.ts":"74","/home/project/photobook/photobook_front/src/pages/editor/components/layout/footer/index.tsx":"75","/home/project/photobook/photobook_front/src/pages/editor/components/layout/sidebar/index.tsx":"76","/home/project/photobook/photobook_front/src/pages/editor/components/layout/objects/image.tsx":"77","/home/project/photobook/photobook_front/src/pages/editor/components/layout/objects/shape.tsx":"78","/home/project/photobook/photobook_front/src/pages/editor/components/layout/objects/text.tsx":"79","/home/project/photobook/photobook_front/src/pages/editor/components/layout/editor-panel/side-buttons.tsx":"80","/home/project/photobook/photobook_front/src/pages/editor/components/layout/editor-panel/background-images-single.tsx":"81","/home/project/photobook/photobook_front/src/pages/editor/components/layout/editor-panel/background-images.tsx":"82","/home/project/photobook/photobook_front/src/pages/editor/components/layout/editor-panel/photoprint.tsx":"83","/home/project/photobook/photobook_front/src/pages/editor/components/layout/sidebar/tabs/frames.tsx":"84","/home/project/photobook/photobook_front/src/pages/editor/components/layout/sidebar/tabs/backgrounds.tsx":"85","/home/project/photobook/photobook_front/src/pages/editor/components/layout/sidebar/tabs/masks.tsx":"86","/home/project/photobook/photobook_front/src/pages/editor/components/layout/sidebar/tabs/layouts.tsx":"87","/home/project/photobook/photobook_front/src/pages/editor/components/layout/footer/slide.tsx":"88","/home/project/photobook/photobook_front/src/pages/editor/components/layout/sidebar/tabs/cliparts.tsx":"89","/home/project/photobook/photobook_front/src/pages/editor/components/utils/render/render-background.tsx":"90","/home/project/photobook/photobook_front/src/pages/editor/components/utils/render/background.tsx":"91","/home/project/photobook/photobook_front/src/pages/editor/components/utils/render/render-object.tsx":"92","/home/project/photobook/photobook_front/src/pages/editor/components/layout/upload-modal/upload-photos-group.tsx":"93","/home/project/photobook/photobook_front/src/pages/editor/components/layout/sidebar/tabs/images.tsx":"94","/home/project/photobook/photobook_front/src/redux/reducers/auth.ts":"95","/home/project/photobook/photobook_front/src/redux/reducers/image.ts":"96","/home/project/photobook/photobook_front/src/redux/reducers/editor.ts":"97","/home/project/photobook/photobook_front/src/redux/reducers/project.ts":"98","/home/project/photobook/photobook_front/src/redux/actions/image.ts":"99","/home/project/photobook/photobook_front/src/redux/actions/editor.ts":"100","/home/project/photobook/photobook_front/src/utils/dnd.ts":"101","/home/project/photobook/photobook_front/src/pages/editor/components/layout/editor-panel/toolbar/index.tsx":"102","/home/project/photobook/photobook_front/src/pages/editor/components/layout/editor-panel/settings.tsx":"103","/home/project/photobook/photobook_front/src/redux/reducers/handlers.ts":"104","/home/project/photobook/photobook_front/src/components/input/index.tsx":"105","/home/project/photobook/photobook_front/src/hooks/index.tsx":"106","/home/project/photobook/photobook_front/src/pages/editor/components/layout/editor-panel/toolbar/shape-toolbar.tsx":"107","/home/project/photobook/photobook_front/src/pages/editor/components/layout/editor-panel/toolbar/image-toolbar.tsx":"108","/home/project/photobook/photobook_front/src/pages/editor/components/layout/upload-modal/index.tsx":"109","/home/project/photobook/photobook_front/src/pages/editor/components/layout/editor-panel/toolbar/text-toolbar.tsx":"110","/home/project/photobook/photobook_front/src/hooks/useQuery.tsx":"111","/home/project/photobook/photobook_front/src/hooks/useWindow.tsx":"112","/home/project/photobook/photobook_front/src/pages/editor/components/layout/upload-modal/photos.tsx":"113","/home/project/photobook/photobook_front/src/pages/editor/components/layout/upload-modal/google.tsx":"114","/home/project/photobook/photobook_front/src/pages/editor/components/layout/upload-modal/facebook.tsx":"115","/home/project/photobook/photobook_front/src/layouts/index.tsx":"116","/home/project/photobook/photobook_front/src/pages/not-found/index.tsx":"117","/home/project/photobook/photobook_front/src/pages/product/photobook/template/index.tsx":"118","/home/project/photobook/photobook_front/src/pages/errors/index.tsx":"119","/home/project/photobook/photobook_front/src/pages/profile/index.tsx":"120","/home/project/photobook/photobook_front/src/layouts/main/index.tsx":"121","/home/project/photobook/photobook_front/src/layouts/public/index.tsx":"122","/home/project/photobook/photobook_front/src/layouts/main/footer.tsx":"123","/home/project/photobook/photobook_front/src/layouts/main/header.tsx":"124","/home/project/photobook/photobook_front/src/pages/errors/403.tsx":"125","/home/project/photobook/photobook_front/src/pages/errors/404.tsx":"126","/home/project/photobook/photobook_front/src/layouts/main/components/index.tsx":"127","/home/project/photobook/photobook_front/src/layouts/main/components/HeaderMenu/index.tsx":"128","/home/project/photobook/photobook_front/src/page-components/profile/my-cart/index.tsx":"129","/home/project/photobook/photobook_front/src/page-components/profile/my-info/index.tsx":"130","/home/project/photobook/photobook_front/src/page-components/profile/my-projects/index.tsx":"131","/home/project/photobook/photobook_front/src/page-components/profile/order-history/index.tsx":"132","/home/project/photobook/photobook_front/src/layouts/main/components/user-info/index.tsx":"133","/home/project/photobook/photobook_front/src/layouts/main/components/language-switch/index.tsx":"134","/home/project/photobook/photobook_front/src/layouts/main/components/HeaderMenu/canvas/index.tsx":"135","/home/project/photobook/photobook_front/src/layouts/main/components/HeaderMenu/photobook/index.tsx":"136","/home/project/photobook/photobook_front/src/page-components/profile/my-info/shipping-address-modal/index.tsx":"137","/home/project/photobook/photobook_front/src/page-components/profile/order-history/order-status/index.tsx":"138","/home/project/photobook/photobook_front/src/pages/editor/photoprint.tsx":"139","/home/project/photobook/photobook_front/src/layouts/main/components/HeaderMenu/photoprint/index.tsx":"140","/home/project/photobook/photobook_front/src/pages/product/photoprint/index.tsx":"141","/home/project/photobook/photobook_front/src/components/photoprint-layout-options/index.tsx":"142","/home/project/photobook/photobook_front/src/pages/product/photoprint/template/index.tsx":"143","/home/project/photobook/photobook_front/src/pages/editor/print.tsx":"144","/home/project/photobook/photobook_front/src/pages/editor/components/layout/print-panel/index.tsx":"145","/home/project/photobook/photobook_front/src/pages/editor/components/layout/print-panel/images.tsx":"146","/home/project/photobook/photobook_front/src/components/image-modal/index.tsx":"147"},{"size":655,"mtime":1621849602000,"results":"148","hashOfConfig":"149"},{"size":416,"mtime":1621236366000,"results":"150","hashOfConfig":"149"},{"size":237,"mtime":1621839950000,"results":"151","hashOfConfig":"149"},{"size":546,"mtime":1621843816000,"results":"152","hashOfConfig":"149"},{"size":535,"mtime":1621305274000,"results":"153","hashOfConfig":"149"},{"size":2234,"mtime":1621828769000,"results":"154","hashOfConfig":"149"},{"size":2760,"mtime":1622171938000,"results":"155","hashOfConfig":"149"},{"size":1113,"mtime":1621236366000,"results":"156","hashOfConfig":"149"},{"size":4584,"mtime":1623036137390,"results":"157","hashOfConfig":"149"},{"size":519,"mtime":1621238503000,"results":"158","hashOfConfig":"149"},{"size":29308,"mtime":1623035453790,"results":"159","hashOfConfig":"149"},{"size":1035,"mtime":1621238516000,"results":"160","hashOfConfig":"149"},{"size":20020,"mtime":1622787312000,"results":"161","hashOfConfig":"149"},{"size":22212,"mtime":1622797835000,"results":"162","hashOfConfig":"149"},{"size":23990,"mtime":1622798035000,"results":"163","hashOfConfig":"149"},{"size":1095,"mtime":1621493330000,"results":"164","hashOfConfig":"149"},{"size":2741,"mtime":1621597487000,"results":"165","hashOfConfig":"149"},{"size":1550,"mtime":1622192029000,"results":"166","hashOfConfig":"149"},{"size":2484,"mtime":1622192029000,"results":"167","hashOfConfig":"149"},{"size":3452,"mtime":1622192029000,"results":"168","hashOfConfig":"149"},{"size":1653,"mtime":1623036318540,"results":"169","hashOfConfig":"149"},{"size":2395,"mtime":1622113118000,"results":"170","hashOfConfig":"149"},{"size":2351,"mtime":1622113118000,"results":"171","hashOfConfig":"149"},{"size":2357,"mtime":1622113118000,"results":"172","hashOfConfig":"149"},{"size":3660,"mtime":1622786588000,"results":"173","hashOfConfig":"149"},{"size":4582,"mtime":1622781231000,"results":"174","hashOfConfig":"149"},{"size":1208,"mtime":1623050553649,"results":"175","hashOfConfig":"149"},{"size":273,"mtime":1621239305000,"results":"176","hashOfConfig":"149"},{"size":362,"mtime":1622113118000,"results":"177","hashOfConfig":"149"},{"size":797,"mtime":1621597487000,"results":"178","hashOfConfig":"149"},{"size":1017,"mtime":1622113118000,"results":"179","hashOfConfig":"149"},{"size":1992,"mtime":1622434600000,"results":"180","hashOfConfig":"149"},{"size":484,"mtime":1621597487000,"results":"181","hashOfConfig":"149"},{"size":1427,"mtime":1621236366000,"results":"182","hashOfConfig":"149"},{"size":1160,"mtime":1622434600000,"results":"183","hashOfConfig":"149"},{"size":1533,"mtime":1622192029000,"results":"184","hashOfConfig":"149"},{"size":1123,"mtime":1622434600000,"results":"185","hashOfConfig":"149"},{"size":463,"mtime":1621238229000,"results":"186","hashOfConfig":"149"},{"size":510,"mtime":1621397519000,"results":"187","hashOfConfig":"149"},{"size":3467,"mtime":1622786640000,"results":"188","hashOfConfig":"149"},{"size":3343,"mtime":1622781614000,"results":"189","hashOfConfig":"149"},{"size":8083,"mtime":1623032168220,"results":"190","hashOfConfig":"149"},{"size":1501,"mtime":1621239418000,"results":"191","hashOfConfig":"149"},{"size":1042,"mtime":1622189406000,"results":"192","hashOfConfig":"149"},{"size":14942,"mtime":1621236366000,"results":"193","hashOfConfig":"149"},{"size":1734,"mtime":1621313539000,"results":"194","hashOfConfig":"149"},{"size":523,"mtime":1622189432000,"results":"195","hashOfConfig":"149"},{"size":2164,"mtime":1621305567000,"results":"196","hashOfConfig":"149"},{"size":2705,"mtime":1621236366000,"results":"197","hashOfConfig":"149"},{"size":2682,"mtime":1621236366000,"results":"198","hashOfConfig":"149"},{"size":708,"mtime":1621236366000,"results":"199","hashOfConfig":"149"},{"size":234,"mtime":1621236366000,"results":"200","hashOfConfig":"149"},{"size":239,"mtime":1622100754000,"results":"201","hashOfConfig":"149"},{"size":3036,"mtime":1621236366000,"results":"202","hashOfConfig":"149"},{"size":404,"mtime":1621239304000,"results":"203","hashOfConfig":"149"},{"size":549,"mtime":1622784207000,"results":"204","hashOfConfig":"149"},{"size":2909,"mtime":1621239304000,"results":"205","hashOfConfig":"149"},{"size":2597,"mtime":1621305351000,"results":"206","hashOfConfig":"149"},{"size":936,"mtime":1621305359000,"results":"207","hashOfConfig":"149"},{"size":135,"mtime":1621238229000,"results":"208","hashOfConfig":"149"},{"size":432,"mtime":1621238229000,"results":"209","hashOfConfig":"149"},{"size":863,"mtime":1621238229000,"results":"210","hashOfConfig":"149"},{"size":5183,"mtime":1622194668000,"results":"211","hashOfConfig":"149"},{"size":11585,"mtime":1622785865000,"results":"212","hashOfConfig":"149"},{"size":70,"mtime":1621237728000,"results":"213","hashOfConfig":"149"},{"size":262,"mtime":1623037260600,"results":"214","hashOfConfig":"149"},{"size":3804,"mtime":1621843798000,"results":"215","hashOfConfig":"149"},{"size":13210,"mtime":1622785925000,"results":"216","hashOfConfig":"149"},{"size":3657,"mtime":1622186855000,"results":"217","hashOfConfig":"149"},{"size":81798,"mtime":1622798725000,"results":"218","hashOfConfig":"149"},{"size":306,"mtime":1622797126000,"results":"219","hashOfConfig":"149"},{"size":127,"mtime":1621237728000,"results":"220","hashOfConfig":"149"},{"size":4434,"mtime":1621397233000,"results":"221","hashOfConfig":"149"},{"size":177,"mtime":1621237728000,"results":"222","hashOfConfig":"149"},{"size":11107,"mtime":1622797945000,"results":"223","hashOfConfig":"149"},{"size":9704,"mtime":1622797853000,"results":"224","hashOfConfig":"149"},{"size":5970,"mtime":1621237728000,"results":"225","hashOfConfig":"149"},{"size":469,"mtime":1621237728000,"results":"226","hashOfConfig":"149"},{"size":813,"mtime":1621237728000,"results":"227","hashOfConfig":"149"},{"size":4061,"mtime":1622191396000,"results":"228","hashOfConfig":"149"},{"size":5248,"mtime":1622783948000,"results":"229","hashOfConfig":"149"},{"size":9026,"mtime":1621237728000,"results":"230","hashOfConfig":"149"},{"size":10446,"mtime":1622797849000,"results":"231","hashOfConfig":"149"},{"size":1547,"mtime":1622172879000,"results":"232","hashOfConfig":"149"},{"size":2481,"mtime":1622172864000,"results":"233","hashOfConfig":"149"},{"size":1544,"mtime":1622172896000,"results":"234","hashOfConfig":"149"},{"size":3057,"mtime":1621237728000,"results":"235","hashOfConfig":"149"},{"size":3328,"mtime":1622194042000,"results":"236","hashOfConfig":"149"},{"size":1550,"mtime":1622172852000,"results":"237","hashOfConfig":"149"},{"size":523,"mtime":1621237728000,"results":"238","hashOfConfig":"149"},{"size":961,"mtime":1621304050000,"results":"239","hashOfConfig":"149"},{"size":2110,"mtime":1621237728000,"results":"240","hashOfConfig":"149"},{"size":3181,"mtime":1623051243079,"results":"241","hashOfConfig":"149"},{"size":10449,"mtime":1622797876000,"results":"242","hashOfConfig":"149"},{"size":1605,"mtime":1621236366000,"results":"243","hashOfConfig":"149"},{"size":1311,"mtime":1622172143000,"results":"244","hashOfConfig":"149"},{"size":1016,"mtime":1621238484000,"results":"245","hashOfConfig":"149"},{"size":6425,"mtime":1622094775000,"results":"246","hashOfConfig":"149"},{"size":2525,"mtime":1623032339380,"results":"247","hashOfConfig":"149"},{"size":729,"mtime":1621238423000,"results":"248","hashOfConfig":"149"},{"size":1308,"mtime":1621238289000,"results":"249","hashOfConfig":"149"},{"size":3778,"mtime":1621237728000,"results":"250","hashOfConfig":"149"},{"size":3127,"mtime":1622191904000,"results":"251","hashOfConfig":"149"},{"size":14448,"mtime":1621238490000,"results":"252","hashOfConfig":"149"},{"size":950,"mtime":1621237858000,"results":"253","hashOfConfig":"149"},{"size":100,"mtime":1621239047000,"results":"254","hashOfConfig":"149"},{"size":2458,"mtime":1621237728000,"results":"255","hashOfConfig":"149"},{"size":14253,"mtime":1621237728000,"results":"256","hashOfConfig":"149"},{"size":2764,"mtime":1622797488000,"results":"257","hashOfConfig":"149"},{"size":12176,"mtime":1621237728000,"results":"258","hashOfConfig":"149"},{"size":103,"mtime":1621236366000,"results":"259","hashOfConfig":"149"},{"size":562,"mtime":1621239042000,"results":"260","hashOfConfig":"149"},{"size":1669,"mtime":1622173062000,"results":"261","hashOfConfig":"149"},{"size":3910,"mtime":1623035981070,"results":"262","hashOfConfig":"149"},{"size":4527,"mtime":1622173560000,"results":"263","hashOfConfig":"149"},{"size":1109,"mtime":1621334873000,"results":"264","hashOfConfig":"149"},{"size":115,"mtime":1621236366000,"results":"265","hashOfConfig":"149"},{"size":5398,"mtime":1622189406000,"results":"266","hashOfConfig":"149"},{"size":93,"mtime":1621236366000,"results":"267","hashOfConfig":"149"},{"size":2937,"mtime":1621597487000,"results":"268","hashOfConfig":"149"},{"size":434,"mtime":1621236366000,"results":"269","hashOfConfig":"149"},{"size":330,"mtime":1621236366000,"results":"270","hashOfConfig":"149"},{"size":1161,"mtime":1621477665000,"results":"271","hashOfConfig":"149"},{"size":1435,"mtime":1621477665000,"results":"272","hashOfConfig":"149"},{"size":498,"mtime":1621236366000,"results":"273","hashOfConfig":"149"},{"size":493,"mtime":1621236366000,"results":"274","hashOfConfig":"149"},{"size":112,"mtime":1621236366000,"results":"275","hashOfConfig":"149"},{"size":4280,"mtime":1622798880000,"results":"276","hashOfConfig":"149"},{"size":9526,"mtime":1622788238000,"results":"277","hashOfConfig":"149"},{"size":13340,"mtime":1622788238000,"results":"278","hashOfConfig":"149"},{"size":4472,"mtime":1622788238000,"results":"279","hashOfConfig":"149"},{"size":3245,"mtime":1622788238000,"results":"280","hashOfConfig":"149"},{"size":2428,"mtime":1623032249830,"results":"281","hashOfConfig":"149"},{"size":1695,"mtime":1621236366000,"results":"282","hashOfConfig":"149"},{"size":2673,"mtime":1622192029000,"results":"283","hashOfConfig":"149"},{"size":2648,"mtime":1622192029000,"results":"284","hashOfConfig":"149"},{"size":5188,"mtime":1623036006600,"results":"285","hashOfConfig":"149"},{"size":874,"mtime":1622788238000,"results":"286","hashOfConfig":"149"},{"size":22212,"mtime":1623037306880,"results":"287","hashOfConfig":"149"},{"size":1888,"mtime":1622798948000,"results":"288","hashOfConfig":"149"},{"size":2401,"mtime":1622799100000,"results":"289","hashOfConfig":"149"},{"size":2437,"mtime":1622799764000,"results":"290","hashOfConfig":"149"},{"size":2702,"mtime":1622799784000,"results":"291","hashOfConfig":"149"},{"size":18716,"mtime":1623037655620,"results":"292","hashOfConfig":"149"},{"size":4052,"mtime":1623051226559,"results":"293","hashOfConfig":"149"},{"size":7753,"mtime":1623052535889,"results":"294","hashOfConfig":"149"},{"size":1342,"mtime":1623050638859,"results":"295","hashOfConfig":"149"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},"1hqdumr",{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"298"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"298"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"298"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"298"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"298"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"298"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"298"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"298"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"298"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"298"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"298"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"298"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517","usedDeprecatedRules":"298"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"298"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"599","messages":"600","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"603","messages":"604","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/project/photobook/photobook_front/src/index.tsx",[],["605","606","607","608","609"],"/home/project/photobook/photobook_front/src/reportWebVitals.ts",[],"/home/project/photobook/photobook_front/src/config.ts",[],"/home/project/photobook/photobook_front/src/app/index.tsx",[],"/home/project/photobook/photobook_front/src/redux/store.ts",[],"/home/project/photobook/photobook_front/src/redux/actions/auth.ts",["610","611","612","613","614","615","616"],"import axios from 'axios'\nimport { Dispatch } from 'redux'\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from './types'\nimport { getCurrentUser, signIn } from '../../api'\n\n// Load User\nexport const loadUser = (): any => async (dispatch: Dispatch) => {\n  try {\n    const user = await getCurrentUser()\n    if (user) {\n      dispatch({\n        type: USER_LOADED,\n        payload: user?.data.user,\n      })\n    } else {\n      dispatch({\n        type: LOGIN_FAIL,\n      })\n    }\n    // }\n  } catch (err) {\n    console.log('error : ')\n    console.log(err)\n    dispatch({\n      type: AUTH_ERROR,\n    })\n  }\n}\n\n// Register user\nexport const register =\n  ({ name, email, password }: { name: string; email: string; password: string }) =>\n  async (dispatch: Dispatch) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const body = JSON.stringify({ name, email, password })\n\n    try {\n      const res = await axios.post('/api/users', body, config)\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      })\n\n      dispatch(loadUser())\n    } catch (err) {\n      const { errors } = err.response.data\n\n      if (errors) {\n        console.log('error')\n        console.log(errors)\n      }\n\n      dispatch({\n        type: REGISTER_FAIL,\n      })\n    }\n  }\n\n// Login user\nexport const loginUser = (email: string, password: string) => async (dispatch: any) => {\n  try {\n    // const user = await Auth.signIn(email, password)\n    const user = await signIn(email, password)\n\n    if (user?.data) {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: user,\n      })\n    } else {\n      dispatch({\n        type: LOGIN_FAIL,\n      })\n    }\n  } catch (err) {\n    const { errors } = err.response.data\n\n    if (errors) {\n      console.log('error')\n      console.log(errors)\n    }\n\n    dispatch({\n      type: LOGIN_FAIL,\n    })\n  }\n}\n\n// Logout / Clear Profile\nexport const logout = (history: any) => async (dispatch: Dispatch) => {\n  try {\n    // dispatch({\n    //   type: CLEAR_PROFILE,\n    // })\n    dispatch({\n      type: LOGOUT,\n    })\n\n    history.push('/')\n  } catch (error) {\n    console.log(error)\n  }\n}\n","/home/project/photobook/photobook_front/src/redux/actions/types.ts",[],"/home/project/photobook/photobook_front/src/language/index.tsx",[],"/home/project/photobook/photobook_front/src/route/index.tsx",[],"/home/project/photobook/photobook_front/src/redux/reducers/index.ts",[],"/home/project/photobook/photobook_front/src/api/index.tsx",["617"],"import { Storage } from 'aws-amplify'\nimport { PaginatedParams } from 'ahooks/lib/useAntdTable'\nimport { buildQuery } from 'utils'\nimport { ImageCategory, Image, LayoutInterface, Category, User } from 'interfaces'\n\n// #region [Import]\nimport { message } from 'antd'\nimport axios, { AxiosRequestConfig, Method } from 'axios'\n// #endregion\n\n// #region [Response]\nexport interface BaseResponse {\n  status: number\n  message: string\n  totalCount?: any\n  offset?: any\n  limit?: any\n  data?: any\n}\n// #endregion\n\n// #region [BaseRequest]\ninterface BaseRequestProps {\n  url: string\n  method: Method\n  params?: Object\n  data?: Object\n}\n\nconst catchError = (err: any, isMe: boolean) => {\n  // const isLogin = window.location.pathname.startsWith('/auth/signin')\n  if (isMe) {\n    localStorage.removeItem('token')\n    localStorage.removeItem('refresh')\n    message.warn({ content: 'Танд хандах эрх байхгүй байна. Дахин нэвтэрнэ үү' })\n    // if (!isLogin) window.location.replace('/auth/signin')\n  } else if (err.response) {\n    if (err.response.status === 401) {\n      localStorage.removeItem('token')\n      localStorage.removeItem('refresh')\n      // message.warn({ content: 'Танд хандах эрх байхгүй байна. Дахин нэвтэрнэ үү' })\n      // if (!isLogin) window.location.replace('/auth/signin')\n    } else if (err.response.status === 403) {\n      message.warn({ content: 'Танд хандах эрх байхгүй байна.' })\n    } else if (err.response.status === 404) {\n      message.warn({ content: 'Олдсонгүй.' })\n    } else {\n      message.error({ content: err.response.data.message })\n    }\n  } else if (err.message === 'Network Error') {\n    message.info({ content: 'Алдаа гарлаа. Дараа дахин оролдоно уу' })\n  } else {\n    message.error({ content: err.message })\n  }\n}\n\nexport const BaseRequest = async ({ ...props }: BaseRequestProps) => {\n  const isMe = props.url === 'user/me'\n  const token = localStorage.getItem('token')\n  const locale = localStorage.getItem('locale') || 'mn'\n  axios.defaults.headers.common.Accept = 'application/json'\n  axios.defaults.headers.common['Accept-Language'] = locale || 'mn'\n  axios.defaults.headers.common['Content-Type'] = 'application/json'\n  axios.defaults.headers.common['Access-Control-Allow-Headers'] = '*'\n  // if (token) axios.defaults.headers.common.Authorization = `Bearer ${token}`\n  const config: AxiosRequestConfig = {\n    baseURL: process.env.REACT_APP_BACK_URL as string,\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n    ...props,\n  }\n  try {\n    const responseInstance = await axios(config)\n    const response = responseInstance.data as BaseResponse\n    if (!response.status) {\n      // catchError(new Error(response.message), isMe)\n      return null\n    }\n    return response || false\n  } catch (err) {\n    catchError(err, isMe)\n    return null\n  }\n}\n// #endregion\n\n// #region [ImageCategory]\nexport const listImageCategory = async (type?: string, params?: PaginatedParams[0], data?: Record<string, unknown>) => {\n  let query = params && data ? buildQuery(params, data) : ''\n  if (query.length > 0) {\n    query += '&'\n  }\n  query += `type=${type}`\n\n  const response = await BaseRequest({\n    url: `image-category?${query}`,\n    method: 'GET',\n  })\n\n  if (params) return { list: response?.data, total: response?.totalCount, offset: response?.offset }\n  return response?.data\n}\n\nexport const listImageCategoryByProject = async (templateId: number) => {\n  const response = await BaseRequest({\n    url: `image-category/project/${templateId}`,\n    method: 'GET',\n  })\n  const categories = await Promise.all(\n    response?.data.map(async (category: ImageCategory) => ({\n      ...category,\n      images: await Promise.all(\n        category.images.map(async (image) => ({\n          ...image,\n          tempUrl: await Storage.get(image.imageUrl, { expires: 60 * 60 * 24 * 7 }),\n        }))\n      ),\n    }))\n  )\n  return categories\n}\n\nexport const getImageCategory = async (id: number) => {\n  const response = await BaseRequest({\n    url: `image-category/${id}`,\n    method: 'GET',\n  })\n  return response?.data\n}\n\n// #endregion [ImageCategory]\n\n// #region [Image]\nexport const listMyImages = async (params?: PaginatedParams[0], data?: Record<string, unknown>) => {\n  const query = params && data ? buildQuery(params, data) : ''\n\n  const response = await BaseRequest({\n    url: `image/user-images?${query}`,\n    method: 'GET',\n  })\n  const images = await Promise.all(\n    response?.data.map(async (image: Image) => ({\n      ...image,\n      tempUrl: await Storage.get(image.imageUrl, { expires: 60 * 60 * 24 * 7 }),\n    }))\n  )\n  if (params) return { list: images, total: response?.totalCount, offset: response?.offset }\n  return images\n}\n\nexport const listImage = async (type?: string, params?: PaginatedParams[0], data?: Record<string, unknown>) => {\n  let query = params && data ? buildQuery(params, data) : ''\n  if (type) {\n    if (query.length > 0) {\n      query += '&'\n    }\n    query += `type=${type}`\n  }\n  const response = await BaseRequest({\n    url: `image?${query}`,\n    method: 'GET',\n  })\n  const images = await Promise.all(\n    response?.data.map(async (image: Image) => ({\n      ...image,\n      tempUrl: await Storage.get(image.imageUrl, { expires: 60 * 60 * 24 * 7 }),\n    }))\n  )\n  if (params) return { list: images, total: response?.totalCount, offset: response?.offset }\n  return images\n}\n\nexport const deleteImage = async (data: object) => {\n  const response = await BaseRequest({\n    url: `image`,\n    method: 'DELETE',\n    data,\n  })\n\n  return response\n}\n\nexport const updateImage = async (id: string, data: Object) => {\n  const response = await BaseRequest({\n    url: `image/${id}`,\n    method: 'PUT',\n    data,\n  })\n  return response\n}\n\nexport const getImage = async (id: string) => {\n  const response = await BaseRequest({\n    url: `image/${id}`,\n    method: 'GET',\n  })\n  return response?.data\n}\n\nexport const createImage = async (data: Object) => {\n  const response = await BaseRequest({\n    url: 'image',\n    method: 'POST',\n    data,\n  })\n  return response?.data\n}\n\nexport const createMultiImage = async (data: Object) => {\n  const response = await BaseRequest({\n    url: 'image/many',\n    method: 'POST',\n    data,\n  })\n  return response?.data\n}\n\n// #endregion [Image]\n\n// #region [Template]\n\nexport const listTemplate = async (params?: PaginatedParams[0], data?: Record<string, unknown>, offset?: number) => {\n  let query = params && data ? buildQuery(params, data) : ''\n  if (offset && params && params.current !== 1) {\n    query += `&offset=${JSON.stringify(offset)}`\n  }\n\n  const response = await BaseRequest({\n    url: `template?${query}`,\n    method: 'GET',\n  })\n\n  const templates = response?.data\n  templates.forEach(async (template: any) => {\n    template.tempUrl = await Storage.get(template.imageUrl, { expires: 60 * 60 * 24 * 7 }).catch(\n      () => template.imageUrl\n    )\n  })\n\n  if (params) return { list: templates, total: response?.totalCount, offset: response?.offset }\n  return templates\n}\n\nexport const getTemplate = async (id: number | string) => {\n  const response = await BaseRequest({\n    url: `template/${id}`,\n    method: 'GET',\n  })\n\n  const template = response?.data\n  template.tempUrl = await Storage.get(template.imageUrl, { expires: 60 * 60 * 24 * 7 }).catch(() => template.imageUrl)\n\n  return response?.data\n}\n\n// #endregion [Template]\n\n// #region [TemplateCategory]\nexport const listTemplateCategory = async (\n  params?: PaginatedParams[0],\n  data?: Record<string, unknown>,\n  offset?: Category\n) => {\n  let query = params && data ? buildQuery(params, data) : ''\n  if (offset && params && params.current !== 1) {\n    query += `&offset=${JSON.stringify(offset)}`\n  }\n\n  const response = await BaseRequest({\n    url: `category?${query}`,\n    method: 'GET',\n  })\n\n  if (params) return { list: response?.data, total: response?.totalCount, offset: response?.offset }\n  return response?.data\n}\n\nexport const getTemplateCategory = async (id: number) => {\n  const response = await BaseRequest({\n    url: `category/${id}`,\n    method: 'GET',\n  })\n  return response?.data\n}\n\n// #endregion [TemplateCategory]\n\n// #region [Layout]\n\nexport const listLayout = async (\n  params: PaginatedParams[0],\n  data: Record<string, unknown>,\n  offset?: LayoutInterface\n) => {\n  let query = params ? buildQuery(params, data) : ''\n  if (query.length > 0) {\n    query += '&'\n  }\n  if (offset && params.current !== 1) {\n    query += `&offset=${JSON.stringify(offset)}`\n  }\n\n  const response = await BaseRequest({\n    url: `layout?${query}`,\n    method: 'GET',\n  })\n\n  if (params) return { list: response?.data, total: response?.totalCount, offset: response?.offset }\n  return response\n}\n\nexport const getLayout = async (id: string): Promise<LayoutInterface | null> => {\n  if (id.length === 0) return null\n  const response = await BaseRequest({\n    url: `layout/${id}`,\n    method: 'GET',\n  })\n  return response?.data\n}\n\n// #endregion [Layout]\n\n// #region [LayoutCategory]\nexport const listLayoutCategory = async (\n  params?: PaginatedParams[0],\n  data?: Record<string, unknown>,\n  offset?: ImageCategory\n) => {\n  let query = params && data ? buildQuery(params, data) : ''\n  if (offset && params && params.current !== 1) {\n    query += `&offset=${JSON.stringify(offset)}`\n  }\n\n  const response = await BaseRequest({\n    url: `layout-category?${query}`,\n    method: 'GET',\n  })\n\n  if (params) return { list: response?.data, total: response?.totalCount, offset: response?.offset }\n  return response?.data\n}\n\nexport const getLayoutCategory = async (id: number) => {\n  const response = await BaseRequest({\n    url: `layout-category/${id}`,\n    method: 'GET',\n  })\n  return response?.data\n}\n\n// #endregion [LayoutCategory]\n\n// #region [LayoutProject]\nexport const listProject = async (params?: PaginatedParams[0], data?: Record<string, unknown>, offset?: number) => {\n  let query = params && data ? buildQuery(params, data) : ''\n  if (offset && params && params.current !== 1) {\n    query += `&offset=${JSON.stringify(offset)}`\n  }\n\n  const response = await BaseRequest({\n    url: `project?${query}`,\n    method: 'GET',\n  })\n\n  const project = response?.data\n  project.forEach(async (template: any) => {\n    template.tempUrl = await Storage.get(template.imageUrl, { expires: 60 * 60 * 24 * 7 })\n  })\n\n  if (params) return { list: project, total: response?.totalCount, offset: response?.offset }\n  return project\n}\n\nexport const updateProjectImages = async (data: Object, projectId: number) => {\n  const response = await BaseRequest({\n    url: `project/${projectId}/images`,\n    method: 'PUT',\n    data,\n  })\n  return response?.data\n}\n\nexport const deleteProject = async (data: object) => {\n  const response = await BaseRequest({\n    url: `project`,\n    method: 'DELETE',\n    data,\n  })\n  return response\n}\n\nexport const updateProject = async (id: number, data: Object) => {\n  const response = await BaseRequest({\n    url: `project/${id}`,\n    method: 'PUT',\n    data,\n  })\n  return response\n}\n\nexport const updateProjectSlides = async (id: number, data: Object) => {\n  const response = await BaseRequest({\n    url: `project/${id}/slides`,\n    method: 'PUT',\n    data,\n  })\n  return response\n}\n\nexport const getProject = async (id: string) => {\n  const response = await BaseRequest({\n    url: `project/${id}`,\n    method: 'GET',\n  })\n  return response?.data\n}\n\nexport const getProjectByUuid = async (id: string) => {\n  const response = await BaseRequest({\n    url: `project/uuid/${id}`,\n    method: 'GET',\n  })\n  return response?.data\n}\n\nexport const createProject = async (data: Object) => {\n  const response = await BaseRequest({\n    url: 'project',\n    method: 'POST',\n    data,\n  })\n  return response\n}\n\n// #endregion [LayoutProject]\n\n// #region [BindingType]\nexport const listBindingType = async (params?: PaginatedParams[0], data?: Record<string, unknown>, offset?: number) => {\n  let query = params && data ? buildQuery(params, data) : ''\n  if (offset && params && params.current !== 1) {\n    query += `&offset=${JSON.stringify(offset)}`\n  }\n\n  const response = await BaseRequest({\n    url: `binding-type?${query}`,\n    method: 'GET',\n  })\n\n  const bindingTypes = response?.data\n  bindingTypes.forEach(async (bindingType: any) => {\n    bindingType.tempUrl = await Storage.get(bindingType.imageUrl, { expires: 60 * 60 * 24 * 7 }).catch(\n      () => bindingType.imageUrl\n    )\n    bindingType.tempFeatureUrl = await Storage.get(bindingType.featureImageUrl, { expires: 60 * 60 * 24 * 7 }).catch(\n      () => bindingType.featureImageUrl\n    )\n  })\n\n  if (params) return { list: bindingTypes, total: response?.totalCount, offset: response?.offset }\n  return bindingTypes\n}\n\nexport const getBindingType = async (id: number) => {\n  const response = await BaseRequest({\n    url: `binding-type/${id}`,\n    method: 'GET',\n  })\n  const bindingType = response?.data\n  bindingType.tempUrl = await Storage.get(bindingType.imageUrl, { expires: 60 * 60 * 24 * 7 })\n  bindingType.tempFeatureUrl = await Storage.get(bindingType.featureImageUrl, { expires: 60 * 60 * 24 * 7 })\n  return bindingType\n}\n\n// #endregion [BindingType]\n\n// #region [listPaperSize]\nexport const listPaperSize = async (params?: PaginatedParams[0], data?: Record<string, unknown>, offset?: number) => {\n  let query = params && data ? buildQuery(params, data) : ''\n  if (offset && params && params.current !== 1) {\n    query += `&offset=${JSON.stringify(offset)}`\n  }\n\n  const response = await BaseRequest({\n    url: `paper-size?${query}`,\n    method: 'GET',\n  })\n\n  if (params) return { list: response?.data, total: response?.totalCount, offset: response?.offset }\n  return response?.data\n}\n\nexport const getPaperSize = async (id: number) => {\n  const response = await BaseRequest({\n    url: `paper-size/${id}`,\n    method: 'GET',\n  })\n  return response?.data\n}\n\nexport const createPaperSize = async (data: Object) => {\n  const response = await BaseRequest({\n    url: 'paper-size',\n    method: 'POST',\n    data,\n  })\n  return response\n}\n\n// #endregion [PaperSize]\n\n// #region [CoverMaterial]\nexport const listCoverMaterial = async (\n  params?: PaginatedParams[0],\n  data?: Record<string, unknown>,\n  offset?: number\n) => {\n  let query = params && data ? buildQuery(params, data) : ''\n  if (offset && params && params.current !== 1) {\n    query += `&offset=${JSON.stringify(offset)}`\n  }\n\n  const response = await BaseRequest({\n    url: `cover-material?${query}`,\n    method: 'GET',\n  })\n\n  const coverMaterials = response?.data\n  coverMaterials.forEach(async (coverMaterial: any) => {\n    coverMaterial.tempUrl = await Storage.get(coverMaterial.imageUrl, { expires: 60 * 60 * 24 * 7 }).catch(\n      () => coverMaterial.imageUrl\n    )\n  })\n\n  if (params) return { list: coverMaterials, total: response?.totalCount, offset: response?.offset }\n  return coverMaterials\n}\n\nexport const getCoverMaterial = async (id: number) => {\n  const response = await BaseRequest({\n    url: `cover-material/${id}`,\n    method: 'GET',\n  })\n  const coverMaterials = response?.data\n  coverMaterials.tempUrl = await Storage.get(coverMaterials.imageUrl, { expires: 60 * 60 * 24 * 7 })\n  return coverMaterials\n}\n\nexport const createCoverMaterial = async (data: Object) => {\n  const response = await BaseRequest({\n    url: 'cover-material',\n    method: 'POST',\n    data,\n  })\n  return response\n}\n\n// #endregion [CoverMaterial]\n\n// #region [CoverType]\nexport const listCoverType = async (params?: PaginatedParams[0], data?: Record<string, unknown>, offset?: number) => {\n  let query = params && data ? buildQuery(params, data) : ''\n  if (offset && params && params.current !== 1) {\n    query += `&offset=${JSON.stringify(offset)}`\n  }\n\n  const response = await BaseRequest({\n    url: `cover-type?${query}`,\n    method: 'GET',\n  })\n\n  const coverTypes = response?.data\n  coverTypes.forEach(async (coverType: any) => {\n    coverType.tempUrl = await Storage.get(coverType.imageUrl, { expires: 60 * 60 * 24 * 7 }).catch(\n      () => coverType.imageUrl\n    )\n    coverType.tempFeatureUrl = await Storage.get(coverType.featureImageUrl, { expires: 60 * 60 * 24 * 7 })\n  })\n\n  if (params) return { list: coverTypes, total: response?.totalCount, offset: response?.offset }\n  return coverTypes\n}\n\nexport const getCoverType = async (id: string) => {\n  const response = await BaseRequest({\n    url: `cover-type/${id}`,\n    method: 'GET',\n  })\n\n  const coverType = response?.data\n  coverType.tempUrl = await Storage.get(coverType.imageUrl, { expires: 60 * 60 * 24 * 7 }).catch(\n    () => coverType.imageUrl\n  )\n  coverType.tempFeatureUrl = await Storage.get(coverType.featureImageUrl, { expires: 60 * 60 * 24 * 7 })\n\n  return response?.data\n}\n\n// #endregion [CoverType]\n\n// #region [PaperMaterial]\nexport const listPaperMaterial = async (\n  params?: PaginatedParams[0],\n  data?: Record<string, unknown>,\n  offset?: number\n) => {\n  let query = params && data ? buildQuery(params, data) : ''\n  if (offset && params && params.current !== 1) {\n    query += `&offset=${JSON.stringify(offset)}`\n  }\n\n  const response = await BaseRequest({\n    url: `paper-material?${query}`,\n    method: 'GET',\n  })\n\n  const paperMaterials = response?.data\n  paperMaterials.forEach(async (paperMaterial: any) => {\n    paperMaterial.tempUrl = await Storage.get(paperMaterial.imageUrl, { expires: 60 * 60 * 24 * 7 }).catch(\n      () => paperMaterial.imageUrl\n    )\n    paperMaterial.tempFeatureUrl = await Storage.get(paperMaterial.featureImageUrl, { expires: 60 * 60 * 24 * 7 })\n  })\n\n  if (params) return { list: paperMaterials, total: response?.totalCount, offset: response?.offset }\n  return paperMaterials\n}\n\nexport const getPaperMaterial = async (id: number) => {\n  const response = await BaseRequest({\n    url: `paper-material/${id}`,\n    method: 'GET',\n  })\n  const material = response?.data\n  material.tempUrl = await Storage.get(material.imageUrl, { expires: 60 * 60 * 24 * 7 })\n  return material\n}\n\n// #endregion [PaperMaterial]\n\n// #region [FrameMaterial]\nexport const listFrameMaterial = async (\n  params?: PaginatedParams[0],\n  data?: Record<string, unknown>,\n  offset?: number\n) => {\n  let query = params && data ? buildQuery(params, data) : ''\n  if (offset && params && params.current !== 1) {\n    query += `&offset=${JSON.stringify(offset)}`\n  }\n\n  const response = await BaseRequest({\n    url: `frame-material?${query}`,\n    method: 'GET',\n  })\n\n  const frameMaterials = response?.data\n\n  frameMaterials.forEach(async (material: any) => {\n    material.tempUrl = await Storage.get(material.imageUrl, { expires: 60 * 60 * 24 * 7 }).catch(\n      () => material.imageUrl\n    )\n  })\n\n  if (params) return { list: frameMaterials, total: response?.totalCount, offset: response?.offset }\n  return frameMaterials\n}\n\nexport const getFrameMaterial = async (id: number) => {\n  const response = await BaseRequest({\n    url: `frame-material/${id}`,\n    method: 'GET',\n  })\n  const material = response?.data\n  material.tempUrl = await Storage.get(material.imageUrl, { expires: 60 * 60 * 24 * 7 })\n  return material\n}\n\n// #endregion [FrameMaterial]\n\n// #region [TemplateType]\nexport const listTemplateType = async (\n  params?: PaginatedParams[0],\n  data?: Record<string, unknown>,\n  offset?: number\n) => {\n  let query = params && data ? buildQuery(params, data) : ''\n  if (offset && params && params.current !== 1) {\n    query += `&offset=${JSON.stringify(offset)}`\n  }\n\n  const response = await BaseRequest({\n    url: `template-type?${query}`,\n    method: 'GET',\n  })\n\n  if (params) return { list: response?.data, total: response?.totalCount, offset: response?.offset }\n  return response?.data\n}\n// #endregion [TemplateType]\n\n// #region [CoverMaterialColors]\nexport const listCoverMaterialColors = async (\n  params?: PaginatedParams[0],\n  data?: Record<string, unknown>,\n  offset?: number\n) => {\n  let query = params && data ? buildQuery(params, data) : ''\n  if (offset && params && params.current !== 1) {\n    query += `&offset=${JSON.stringify(offset)}`\n  }\n\n  const response = await BaseRequest({\n    url: `cover-material-color?${query}`,\n    method: 'GET',\n  })\n\n  const coverMaterialColors = response?.data\n  coverMaterialColors.forEach(async (coverMaterialColor: any) => {\n    coverMaterialColor.tempUrl = await Storage.get(coverMaterialColor.imageUrl, { expires: 60 * 60 * 24 * 7 }).catch(\n      () => coverMaterialColor.imageUrl\n    )\n    coverMaterialColor.tempFeatureUrl = await Storage.get(coverMaterialColor.featureImageUrl, {\n      expires: 60 * 60 * 24 * 7,\n    })\n  })\n\n  if (params) return { list: coverMaterialColors, total: response?.totalCount, offset: response?.offset }\n  return coverMaterialColors\n}\n\nexport const getCoverMaterialColor = async (id: number) => {\n  const response = await BaseRequest({\n    url: `cover-material-color/${id}`,\n    method: 'GET',\n  })\n  const coverMaterialColor = response?.data\n  coverMaterialColor.tempUrl = await Storage.get(coverMaterialColor.imageUrl, { expires: 60 * 60 * 24 * 7 })\n  return coverMaterialColor\n}\n// #endregion [CoverMaterialColors]\n\n// #region [Authentication]\nexport const signIn = async (email: string, password: string) => {\n  const response = await BaseRequest({\n    url: `auth/signin`,\n    method: 'POST',\n    data: { email, password },\n  })\n  return response\n}\n\nexport const signUp = async (email: string, password: string) => {\n  const response = await BaseRequest({\n    url: `auth/signup`,\n    method: 'POST',\n    data: { email, password },\n  })\n  return response\n}\n\nexport const getCurrentUser = async () => {\n  const response = await BaseRequest({\n    url: `auth/user`,\n    method: 'GET',\n  })\n  return response\n}\n\nexport const verifyEmail = async () => {\n  const response = await BaseRequest({\n    url: `auth/verify-email`,\n    method: 'GET',\n  })\n  return response\n}\n\nexport const forgotPassword = async (email: string) => {\n  const response = await BaseRequest({\n    url: `auth/forgot-password`,\n    method: 'POST',\n    data: { email },\n  })\n  return response\n}\n\nexport const changePassword = async (token: string, data: any) => {\n  const response = await BaseRequest({\n    url: `auth/change-password/${token}`,\n    method: 'POST',\n    data,\n  })\n  return response\n}\n\nexport const updateCurrentUser = async (data: Partial<User>) => {\n  const response = await BaseRequest({\n    url: `user`,\n    method: 'PUT',\n    data,\n  })\n  return response\n}\n// #endregion [Authentication]\n\n// #region [ShippingAddress]\nexport const listShippingAddress = async (\n  params?: PaginatedParams[0],\n  data?: Record<string, unknown>,\n  offset?: number\n) => {\n  let query = params && data ? buildQuery(params, data) : ''\n  if (offset && params && params.current !== 1) {\n    query += `&offset=${JSON.stringify(offset)}`\n  }\n\n  const response = await BaseRequest({\n    url: `shipping-address?${query}`,\n    method: 'GET',\n  })\n\n  if (params) return { list: response?.data, total: response?.totalCount, offset: response?.offset }\n  return response?.data\n}\n\nexport const createShippingAddress = async (data: object) => {\n  const response = await BaseRequest({\n    url: `shipping-address`,\n    method: 'POST',\n    data,\n  })\n  return response\n}\n\nexport const deleteShippingAddress = async (id: number) => {\n  const response = await BaseRequest({\n    url: `shipping-address/${id}`,\n    method: 'DELETE',\n  })\n  return response\n}\n\nexport const updateShippingAddress = async (id: number, data: Object) => {\n  const response = await BaseRequest({\n    url: `shipping-address/${id}`,\n    method: 'PUT',\n    data,\n  })\n  return response\n}\n\nexport const getShippingAddress = async (id: number) => {\n  const response = await BaseRequest({\n    url: `shipping-address/${id}`,\n    method: 'GET',\n  })\n  return response?.data\n}\n// #endregion [ShippingAddress]\n\n// #region [Facebook]\nexport const getFacebookAlbums = async () => {\n  const token = localStorage.getItem('facebookAccessToken')\n  const response = await axios.get(`https://graph.facebook.com/v10.0/me/albums?access_token=${token}`)\n  return response.data.data\n}\n\nexport const getFacebookImages = async (album: string) => {\n  if (album.length === 0) return []\n  const token = localStorage.getItem('facebookAccessToken')\n  const response = await axios.get(\n    `https://graph.facebook.com/v10.0/${album}/photos?access_token=${token}&fields=id%2Cimages%2Cname%2Cpicture%2Ccreated_time`\n  )\n  return response.data?.data\n}\n\nexport const getFacebookProfile = async () => {\n  const token = localStorage.getItem('facebookAccessToken')\n  const response = await axios.get(\n    `https://graph.facebook.com/v10.0/me?access_token=${token}&fields=id%2Cfirst_name%2Clast_name%2Cpicture`\n  )\n  return response.data\n}\n// #endregion [Facebook]\n\n// #region [Google]\nexport const getGoogleProfile = async () => {\n  const response = await BaseRequest({\n    url: `google/profile`,\n    method: 'GET',\n  })\n  return response?.data\n}\n\nexport const getGoogleImages = async (token?: string) => {\n  const response = await BaseRequest({\n    url: `google/images?nextToken=${token}`,\n    method: 'GET',\n  })\n  console.log(response?.data)\n  return { list: response?.data.mediaItems, nextId: response?.data.nextPageToken }\n}\n// #endregion [Google]\n\n// #region [LandingPageHero]\nexport const listLandingPageHero = async () => {\n  const response = await BaseRequest({\n    url: `landing/hero`,\n    method: 'GET',\n  })\n  return response?.data\n}\n\n// #endregion [LandingPageHero]\n\n// #region [LandingPageReview]\nexport const listLandingPageReview = async () => {\n  const response = await BaseRequest({\n    url: `landing/review`,\n    method: 'GET',\n  })\n  return response?.data\n}\n\n// #endregion [LandingPageReview]\n\n// #region [LandingPageImageCarousel]\nexport const listLandingPageImageCarousel = async () => {\n  const response = await BaseRequest({\n    url: `landing/image-carousel`,\n    method: 'GET',\n  })\n  return response?.data\n}\n\n// #endregion [LandingPageImageCarousel]\n\n// #region [LandingPageShowCase]\nexport const listLandingPageShowCase = async () => {\n  const response = await BaseRequest({\n    url: `landing/show-case`,\n    method: 'GET',\n  })\n  return response?.data\n}\n\n// #endregion [LandingPageShowCase]\n\n// #region [ProductAd]\nexport const listProductAd = async (templateType: string) => {\n  const response = await BaseRequest({\n    url: `product/image/get`,\n    method: 'POST',\n    data: {\n      templateType,\n    },\n  })\n\n  return response?.data\n}\n\n// #endregion [ProductAd]\n\n// #region [HeaderAd]\nexport const listHeaderAd = async (templateType: string) => {\n  const response = await BaseRequest({\n    url: `header/image/get`,\n    method: 'POST',\n    data: {\n      templateType,\n    },\n  })\n\n  return response?.data\n}\n// #endregion [HeaderAd]\n\n// #region [ShoppingCart]\nexport const listShoppingCart = async () => {\n  const response = await BaseRequest({\n    url: `shopping-cart`,\n    method: 'GET',\n  })\n\n  response?.data.cartItems.forEach(async (record: any) => {\n    record.project.tempUrl = await Storage.get(record.project.imageUrl, { expires: 60 * 60 * 24 * 7 })\n  })\n\n  return response?.data\n}\n\nexport const deleteCartItem = async (data: object) => {\n  const response = await BaseRequest({\n    url: `cart-item`,\n    method: 'DELETE',\n    data,\n  })\n  return response\n}\n\nexport const updateCartItem = async (id: number, data: Object) => {\n  const response = await BaseRequest({\n    url: `cart-item/${id}`,\n    method: 'PUT',\n    data,\n  })\n  return response\n}\n\nexport const getCartItem = async (id: string) => {\n  const response = await BaseRequest({\n    url: `cart-item/${id}`,\n    method: 'GET',\n  })\n  return response?.data\n}\n\nexport const createCartItem = async (data: Object) => {\n  const response = await BaseRequest({\n    url: 'cart-item',\n    method: 'POST',\n    data,\n  })\n  return response\n}\n\nexport const getShoppingCartSummary = async (data: { isShipping: boolean }) => {\n  const response = await BaseRequest({\n    url: 'shopping-cart/summary',\n    method: 'POST',\n    data,\n  })\n  return response?.data\n}\n\n// #endregion [ShoppingCart]\n\n// #region [Order]\nexport const listOrder = async (params?: PaginatedParams[0], data?: Record<string, unknown>, offset?: number) => {\n  let query = params && data ? buildQuery(params, data) : ''\n  if (offset && params && params.current !== 1) {\n    query += `&offset=${JSON.stringify(offset)}`\n  }\n\n  const response = await BaseRequest({\n    url: `order/user?${query}`,\n    method: 'GET',\n  })\n\n  if (params) return { list: response?.data, total: response?.totalCount, offset: response?.offset }\n  return response?.data\n}\n\nexport const deleteOrder = async (data: object) => {\n  const response = await BaseRequest({\n    url: `order`,\n    method: 'DELETE',\n    data,\n  })\n  return response\n}\n\nexport const updateOrder = async (id: number, data: Object) => {\n  const response = await BaseRequest({\n    url: `order/${id}`,\n    method: 'PUT',\n    data,\n  })\n  return response\n}\n\nexport const getOrder = async (id: string) => {\n  const response = await BaseRequest({\n    url: `order/${id}`,\n    method: 'GET',\n  })\n  return response?.data\n}\n\nexport const createOrder = async (data: { isShipping: boolean; address?: number }) => {\n  const response = await BaseRequest({\n    url: 'order',\n    method: 'POST',\n    data,\n  })\n  return response\n}\n// #endregion [Order]\n","/home/project/photobook/photobook_front/src/redux/reducers/settings.ts",[],"/home/project/photobook/photobook_front/src/pages/editor/frame.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/canvas.tsx",["618","619","620","621","622","623","624","625","626","627"],"/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable consistent-return */\nimport React, { useState, useEffect, useRef, useMemo } from 'react'\nimport { useHotkeys } from 'react-hotkeys-hook'\nimport { useQueryState } from 'react-router-use-location-state'\nimport { connect } from 'react-redux'\nimport {\n  getProjects as _getProjects,\n  saveProject as _saveProject,\n  saveProjectAttribute as _saveProjectAttribute,\n  addNewSlide as _addNewSlide,\n  deleteSlide as _deleteSlide,\n  updateHistory as _updateHistory,\n  addLayout as _addLayout,\n  addObject as _addObject,\n  removeObject as _removeObject,\n  loadObjects as _loadObjects,\n  loadContainers as _loadContainers,\n  loadBackgrounds as _loadBackgrounds,\n  updateContainer as _updateContainer,\n  updateGroupContainer as _updateGroupContainer,\n  updateBackground as _updateBackground,\n  updateObject as _updateObject,\n  setBackgrounds as _setBackgrounds,\n  duplicateSlide as _duplicateSlide,\n  reOrderSlide as _reOrderSlide,\n} from 'redux/actions/project'\n\nimport {\n  BackgroundImage,\n  Container,\n  EditorInterface,\n  FullLayout,\n  HistoryProps,\n  ObjectType,\n  PObject,\n  ProjectInterface,\n  RootInterface,\n  Slide,\n} from 'interfaces'\nimport Spinner from 'components/spinner'\nimport { debounce } from 'utils'\n\nimport { useBoolean } from 'ahooks'\nimport {\n  Header,\n  BackgroundSingleImages,\n  FooterListTools,\n  SideButtons,\n  SideBarPanel,\n  Toolbar,\n} from './components/layout'\nimport Preview from './components/preview'\nimport { Editor, renderBackground, renderObject } from './components/utils'\nimport './components/styles/editor.scss'\n\ninterface Props {\n  getProjects: (id: number, paperSizeId: number, project: string) => Promise<string | undefined>\n  saveProject: (projectId: number, updatedSlide: Slide, slideIndex: number) => void\n  addNewSlide: (slideIndex: number, projectId: number) => Promise<void>\n  duplicateSlide: (projectId: number, slideIndex: number, duplicatedSlide: Slide) => Promise<void>\n  deleteSlide: (projectId: number, slideIndex: number) => Promise<void>\n  reOrderSlide: (projectId: number, slides: Slide[]) => Promise<void>\n  editor: EditorInterface\n  project: ProjectInterface\n  loadObjects: (objects: PObject[]) => void\n  loadContainers: (containers: Container[]) => void\n  updateContainer: (props: { container: Object }) => void\n  updateGroupContainer: (props: { containers: Container[] }) => void\n  updateBackground: (props: { background: BackgroundImage }) => void\n  saveProjectAttribute: (projectId: number, props: Object) => void\n  updateObject: (props: { object: PObject }) => void\n  updateHistory: (historyType: string, props: HistoryProps) => void\n  setBackgrounds: (props: { backgrounds: BackgroundImage[] }) => void\n  loadBackgrounds: (backgrounds: Object[]) => void\n  addLayout: (props: { objects: Object[]; layout: FullLayout }) => void\n  addObject: (props: { object: Object }) => void\n  removeObject: (props: { object: Object; container: Object }) => void\n}\n\nconst BookEditor: React.FC<Props> = ({\n  getProjects,\n  saveProject,\n  addNewSlide,\n  duplicateSlide,\n  reOrderSlide,\n  deleteSlide,\n  editor,\n  loadObjects,\n  loadContainers,\n  updateGroupContainer,\n  saveProjectAttribute,\n  updateBackground,\n  updateObject,\n  setBackgrounds,\n  updateHistory,\n  loadBackgrounds,\n  addLayout,\n  addObject,\n  removeObject,\n  project: {\n    currentProject,\n    objects,\n    containers,\n    backgrounds,\n    bgStyles,\n    slideWidth,\n    slideHeight,\n    layout,\n    layouts,\n    loading,\n    fetching,\n  },\n}) => {\n  const [template] = useQueryState('template', 1)\n  const [paperSize] = useQueryState('paperSize', 1)\n  const [uuid, setUuid] = useQueryState('project', '')\n\n  const slideViewRef: any = useRef(null)\n  const editorContainerRef: any = useRef(null)\n  const slideContainerRef: any = useRef(null)\n  const selectionRef: any = useRef(null)\n  const canvasRef = useRef<any>(null)\n  const scaledContainerRef = useRef<any>(null)\n  const groupRef = useRef<any>(null)\n  const [overflow, setOverflow] = useState<string>('hidden')\n  const [refreshing, setRefreshing] = useBoolean(false)\n  const [preview, setPreview] = useBoolean(false)\n  const [single, setSingle] = useBoolean(true)\n\n  // states\n  const [scale, setScale] = useState<number>(1)\n  const [fitScale, setFitScale] = useState<number>(1)\n  const [_objectType, setObjectType] = useState<ObjectType>('')\n  const [_isTextEditing, setIsTextEditing] = useState<boolean>(false)\n  const [_index, setObjectIndex] = useState<number>(-1)\n  const [_textObjectIndex, setTextObjectIndex] = useState<number>(-1)\n  const [_object, setObject] = useState<any>(null)\n  const [_groupObjects, setGroupObjects] = useState<any>(null)\n  const [footerCollapse, setFooterCollapse] = useBoolean(false)\n  const [_groupStyles, setGroupStyles] =\n    useState<{\n      left: any\n      top: any\n      width: any\n      height: any\n    }>()\n  const [_slideIndex, setSlideIndex] = useState<number>(0)\n  useHotkeys('shift+a', () => editors.onRotateLeftObject(_index, objects), [_index, objects])\n  useHotkeys('shift+d', () => editors.onRotateRightObject(_index, objects), [_index, objects])\n  useHotkeys('shift+q', () => editors.onFlipObject(_index, objects), [_index, objects])\n  useHotkeys('shift+w', () => editors.onSendForward(_index, objects), [_index, objects])\n  useHotkeys('shift+s', () => editors.onSendBackward(_index, objects), [_index, objects])\n  useHotkeys('ctrl+Delete', () => editors.onRemoveObject(containers, objects, _index), [_index, objects])\n  useHotkeys('shift+Delete', () => editors.onRemoveImageFromObject(_index, objects, _objectType), [_index, objects])\n  useHotkeys(\n    'ctrl+shift+s',\n    () => {\n      saveObjects()\n    },\n    [objects, backgrounds]\n  )\n\n  const editors = useMemo(() => {\n    return new Editor({\n      setTextObjectIndex,\n      setObjectIndex,\n      scale,\n      overflow,\n      setOverflow,\n      _isTextEditing,\n      setIsTextEditing,\n      _groupObjects,\n      setGroupObjects,\n      scaledContainerRef,\n      _objectType,\n      setObjectType,\n      groupRef,\n      _groupStyles,\n      updateGroupContainer,\n      slideViewRef,\n      slideWidth,\n      slideHeight,\n      selectionRef,\n      updateObject,\n      loadBackgrounds,\n      updateHistory,\n      addLayout,\n      addObject,\n      removeObject,\n      slideContainerRef,\n      setObject,\n      canvasRef,\n      setGroupStyles,\n      _object,\n      double: false,\n    })\n  }, [scale, slideHeight, slideWidth])\n\n  const saveTextBeforeUndo = () => {\n    if (_index > -1 && _isTextEditing) {\n      _object.classList.remove('selected')\n      _object.firstChild.style.cursor = 'default'\n      _object.firstChild.style.pointerEvents = 'none'\n      _object.firstChild.childNodes[2].contentEditable = false\n      window.getSelection()?.removeAllRanges()\n      editors.updateCurrentTextObject(_index, objects)\n      setIsTextEditing(false)\n      setTextObjectIndex(_index)\n    }\n  }\n\n  const nextSlide = () => {\n    if (_slideIndex < currentProject.slides.length - 1) {\n      changeSlideIndex(_slideIndex + 1)\n    }\n  }\n\n  const onAddSlide = (projectId: number, slideIndex: number) => {\n    setRefreshing.setTrue()\n    addNewSlide(projectId, slideIndex).then(() => {\n      changeSlideIndex(_slideIndex + 1)\n      setRefreshing.setFalse()\n    })\n  }\n\n  const onDuplicateSlide = (projectId: number, slideIndex: number) => {\n    setRefreshing.setTrue()\n    duplicateSlide(projectId, slideIndex, currentProject.slides[slideIndex]).then(() => {\n      changeSlideIndex(_slideIndex + 1)\n      setRefreshing.setFalse()\n    })\n  }\n\n  const onReOrderSlide = (projectId: number, slides: Slide[]) => {\n    setRefreshing.setTrue()\n    reOrderSlide(projectId, slides).then(() => {\n      setRefreshing.setFalse()\n      editors.deSelectObject()\n      setSlideIndex(0)\n    })\n  }\n\n  const onDeleteSlide = (projectId: number, slideIndex: number) => {\n    if (_slideIndex !== 0) {\n      setRefreshing.setTrue()\n      deleteSlide(projectId, slideIndex).then(() => {\n        setRefreshing.setFalse()\n        editors.deSelectObject()\n        setSlideIndex(_slideIndex - 1)\n      })\n    }\n  }\n\n  const prevSlide = () => {\n    if (_slideIndex !== 0) {\n      changeSlideIndex(_slideIndex - 1)\n    }\n  }\n\n  const changeSlideIndex = (index: number) => {\n    saveObjects()\n    editors.deSelectObject()\n    setSlideIndex(index)\n  }\n\n  const hasNext = () => {\n    return !(_slideIndex === currentProject.slides.length - 1)\n  }\n\n  const hasPrevious = () => {\n    return !(_slideIndex === 0)\n  }\n\n  const saveObjects = async () => {\n    if (_slideIndex >= currentProject.slides.length) return\n    const updatedSlide = currentProject.slides[_slideIndex]\n    updatedSlide.objects = objects\n    updatedSlide.backgrounds = backgrounds\n    saveProject(currentProject.id, updatedSlide, _slideIndex)\n  }\n  const onSaveName = (name: string) => {\n    saveProjectAttribute(currentProject.id, { name })\n  }\n\n  const setSlidePosition = () => {\n    if (slideContainerRef.current === null) return\n    slideContainerRef.current.classList.add('center-slide')\n\n    const editorPanelContainer: any = document.querySelector('.EditorPanelContainer')\n    const allLayout: any = document.querySelector('.SlideListAll')\n\n    editorPanelContainer.style.width = editor.sidebarOpen\n      ? 'calc(100vw - 400px)' // 310 + 90\n      : 'calc(100vw - 90px)' // 90\n\n    if (allLayout?.style) {\n      allLayout.style.width = editor.sidebarOpen\n        ? 'calc(100vw - 400px)' // 310 + 90\n        : 'calc(100vw - 90px)' // 90\n    }\n\n    const rect = slideContainerRef.current.getBoundingClientRect()\n    const maxWidth = slideWidth\n    const maxHeight = slideHeight\n    const srcWidth = rect.width - 240 // 240 is the width of two side menus\n    const srcHeight = rect.height\n\n    const ratio = Math.min(srcWidth / maxWidth, srcHeight / maxHeight)\n    setScale(ratio)\n    setFitScale(ratio)\n\n    const scaledWidth = maxWidth * ratio\n    const scaledHeight = maxHeight * ratio\n\n    canvasRef.current.style.transform = 'scale(' + ratio + ')'\n    canvasRef.current.style.transformOrigin = '0 0'\n    scaledContainerRef.current.style.width = scaledWidth + 'px'\n    scaledContainerRef.current.style.height = scaledHeight + 'px'\n\n    const slide = document.querySelector('#slide') as HTMLElement\n    slide.style.width = scaledWidth + 'px'\n    slide.style.height = scaledHeight + 'px'\n\n    editorContainerRef.current.style.width = scaledWidth + 'px'\n    editorContainerRef.current.style.height = scaledHeight + 'px'\n  }\n\n  const loadSlide = () => {\n    const currentSlide = currentProject.slides[_slideIndex]\n    if (currentSlide.backgrounds.length === 0) {\n      const bgClasses: string[] = ['background-full', 'background-left', 'background-right']\n      loadBackgrounds(\n        bgClasses.map((bgClass) => ({\n          className: bgClass,\n        }))\n      )\n    } else {\n      loadBackgrounds(currentSlide.backgrounds)\n    }\n    loadObjects(currentSlide.objects)\n    loadContainers(currentSlide.containers)\n  }\n\n  useEffect(() => {\n    if (loading) return\n    const debouncedHandleResize = debounce(function handleResize() {\n      editors.hideResizer()\n      editors.hideToolbar()\n      editors.hideActiveBorder()\n      setSlidePosition()\n    }, 100)\n    window.addEventListener('resize', debouncedHandleResize)\n    return () => {\n      window.removeEventListener('resize', debouncedHandleResize)\n    }\n  })\n\n  useEffect(() => {\n    if (!template) {\n      window.history.back()\n      return\n    }\n    getProjects(template, paperSize, uuid).then((id) => {\n      if (id) {\n        setUuid(id)\n      }\n    })\n  }, [getProjects, template])\n\n  useEffect(() => {\n    if (!loading) loadSlide()\n  }, [_slideIndex]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!loading && !preview) {\n      setSlidePosition()\n      loadSlide()\n    }\n  }, [currentProject, preview]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    editors.deSelectObject()\n    if (!loading) {\n      setSlidePosition()\n    }\n  }, [editor.sidebarOpen]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!loading) {\n      setSlidePosition()\n      loadSlide()\n    }\n  }, [loading]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (editor.dragStart) {\n      if (editor.type === 'backgrounds') {\n        const backgroundDrops: any = document.querySelectorAll('.background-drop')\n        backgroundDrops.forEach((background: any) => {\n          background.style.display = 'block'\n        })\n      } else if (editor.type === 'layouts') {\n        const layoutDrops: any = document.querySelectorAll('.layout-drop')\n        layoutDrops.forEach((_layout: any) => {\n          _layout.style.display = 'block'\n        })\n      }\n    } else if (editor.type === 'backgrounds') {\n      const backgroundDrops: any = document.querySelectorAll('.background-drop')\n      backgroundDrops.forEach((background: any) => {\n        background.style.display = 'none'\n      })\n    } else if (editor.type === 'layouts') {\n      const layoutDrops: any = document.querySelectorAll('.layout-drop')\n      layoutDrops.forEach((_layout: any) => {\n        _layout.style.display = 'none'\n      })\n    }\n  }, [editor.dragStart, editor.type])\n\n  const renderEditor = (\n    <div className=\"EditorPanelContainer\">\n      <div ref={slideViewRef} className=\"StepSlideContainer SlideViewContainer\">\n        <div id=\"editor_container\" ref={editorContainerRef}>\n          <Toolbar\n            object={_object}\n            objectType={_objectType}\n            index={_index}\n            objects={objects}\n            updateObject={updateObject}\n            updateHistory={updateHistory}\n            moveResizers={editors.moveResizers}\n            removeImageFromObject={() => editors.onRemoveImageFromObject(_index, objects, _objectType)}\n            rotateLeftObject={() => editors.onRotateLeftObject(_index, objects)}\n            rotateRightObject={() => editors.onRotateRightObject(_index, objects)}\n            flipObject={() => editors.onFlipObject(_index, objects)}\n            sendForward={() => editors.onSendForward(_index, objects)}\n            sendBackward={() => editors.onSendBackward(_index, objects)}\n            removeObject={() => editors.onRemoveObject(containers, objects, _index)}\n          />\n          <div id=\"selection\" hidden ref={selectionRef} />\n          <SideButtons\n            createImage={(e) => editors.createImage(e, objects)}\n            createText={() => editors.createText(objects)}\n            createSquare={() => editors.createSquare(objects)}\n            createEclipse={() => editors.createEclipse(objects)}\n            settings={false}\n            type=\"canvas\"\n          />\n          <div\n            id=\"slide_container\"\n            onMouseDown={(e) => editors.onSlideMouseDown(e, _index, containers)}\n            onDrop={(e) => editors.onObjectDrop(e, editor.type, objects, _index)}\n            onDragOver={editors.onObjectDragOver}\n            ref={slideContainerRef}\n          >\n            <div id=\"slide\" style={{ overflow }}>\n              <div id=\"scaled_container\" ref={scaledContainerRef}>\n                {!loading && (\n                  <BackgroundSingleImages\n                    scale={scale}\n                    editor={editor}\n                    slideIndex={_slideIndex}\n                    backgrounds={backgrounds}\n                    deSelectObject={editors.deSelectObject}\n                    setBackgrounds={setBackgrounds}\n                    updateBackground={updateBackground}\n                    updateHistory={updateHistory}\n                    onBackgroundDropDragOver={editors.onBackgroundDropDragOver}\n                    onBackgroundDropDragLeave={editors.onBackgroundDropDragLeave}\n                  />\n                )}\n                <div ref={canvasRef} id=\"canvas_container\">\n                  {!loading && (\n                    <>\n                      <div id=\"background\">\n                        {renderBackground({\n                          backgrounds,\n                          bgStyles,\n                          updateBackground,\n                        })}\n                      </div>\n                      <div id=\"container\">\n                        {objects.map((o: PObject, i: number) => {\n                          return (\n                            <div\n                              id={o.id}\n                              key={o.id}\n                              style={o.style as React.CSSProperties}\n                              className={o.className}\n                              onMouseDown={(e) => editors.startDrag(e, o, i, objects)}\n                              onMouseEnter={(e) => editors.objectHover(e, i, _index)}\n                              onMouseLeave={(e) => editors.objectHoverOff(e, i, _index)}\n                              onDragOver={editors.onDragObjectOver}\n                              onDragLeave={(e) => editors.onDragObjectLeave(e, _index)}\n                              onDoubleClick={(e) => editors.onObjectDoubleClick(e, o, i)}\n                              onInput={(e) => editors.updateText(_index, objects, e)}\n                              onPaste={(e) => editors.updateText(_index, objects, e)}\n                              onBlur={(e) => {\n                                editors.updateText(_index, objects, e)\n                                if (_textObjectIndex > -1) {\n                                  editors.updateTextObject(objects, _textObjectIndex)\n                                }\n                              }}\n                              onKeyDown={(e) => editors.updateText(_index, objects, e)}\n                              onKeyUp={(e) => {\n                                if (e.keyCode === 16) editors._isShiftDown = false\n                                if (e.keyCode === 17) editors._isCtrlDown = false\n                              }}\n                            >\n                              {renderObject({\n                                object: o,\n                                updateObject,\n                                updateHistory,\n                                saveObjects,\n                                scale,\n                              })}\n                            </div>\n                          )\n                        })}\n                      </div>\n                    </>\n                  )}\n                </div>\n\n                <div\n                  className=\"group-selection\"\n                  ref={groupRef}\n                  onMouseDown={(e) => editors.selectionDragStart(e, containers)}\n                />\n                <div className=\"active-border\" />\n                <div className=\"page-border-canvas\" />\n                <div className=\"rotate\" onMouseDown={(e) => editors.startRotate(e, objects, _index)} />\n                <div id=\"magnetX\" />\n                <div id=\"magnetY\" />\n                {Object.keys(editors.transformers).map((t: string) => {\n                  const cursor = `${t}-resize`\n                  const resize = editors.transformers[t]\n                  return (\n                    <div\n                      key={t}\n                      style={{ cursor }}\n                      onMouseDown={(e) => editors.startResize(e, cursor, resize, _index, objects)}\n                      className={`resize ${resize}`}\n                    />\n                  )\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n  return fetching ? (\n    <div className=\"AdvancedEditorWrapper\">\n      <div className=\"EditorOnePageView\">\n        <Spinner />\n      </div>\n    </div>\n  ) : (\n    <div className=\"AdvancedEditorWrapper\">\n      <Header\n        deSelectObject={editors.deSelectObject}\n        onPreview={() => {\n          if (preview || !single) {\n            setPreview.setFalse()\n            setSingle.setTrue()\n          } else {\n            setPreview.setTrue()\n          }\n        }}\n        saveName={onSaveName}\n        saveObjects={saveObjects}\n        saveTextBeforeUndo={saveTextBeforeUndo}\n      />\n      <div className=\"EditorOnePageView\">\n        {!preview && <SideBarPanel layoutGroups={layouts} hasFrames={false} hasLayout={false} hasImage />}\n        <div className=\"EditorPanel\">\n          {preview ? <Preview slideIndex={_slideIndex} /> : renderEditor}\n          <FooterListTools\n            hideTools\n            scale={scale}\n            fitScale={fitScale}\n            setScale={setScale}\n            loading={loading}\n            bgStyles={bgStyles}\n            collapse={{\n              state: footerCollapse,\n              action: setFooterCollapse,\n            }}\n            preview={{\n              state: preview,\n              action: setPreview,\n            }}\n            single={{\n              state: single,\n              action: setSingle,\n            }}\n            slideWidth={slideWidth}\n            slideHeight={slideHeight}\n            objects={objects}\n            containers={containers}\n            backgrounds={backgrounds}\n            deSelectObject={editors.deSelectObject}\n            slideIndex={_slideIndex}\n            currentProject={currentProject}\n            updateObject={updateObject}\n            updateHistory={updateHistory}\n            saveObjects={saveObjects}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: RootInterface) => ({\n  project: state.project,\n  editor: state.editor,\n})\n\nexport default connect(mapStateToProps, {\n  getProjects: _getProjects,\n  saveProject: _saveProject,\n  addNewSlide: _addNewSlide,\n  deleteSlide: _deleteSlide,\n  loadObjects: _loadObjects,\n  loadContainers: _loadContainers,\n  loadBackgrounds: _loadBackgrounds,\n  updateContainer: _updateContainer,\n  updateGroupContainer: _updateGroupContainer,\n  updateBackground: _updateBackground,\n  updateObject: _updateObject,\n  setBackgrounds: _setBackgrounds,\n  updateHistory: _updateHistory,\n  addLayout: _addLayout,\n  addObject: _addObject,\n  duplicateSlide: _duplicateSlide,\n  removeObject: _removeObject,\n  reOrderSlide: _reOrderSlide,\n  saveProjectAttribute: _saveProjectAttribute,\n})(BookEditor)\n","/home/project/photobook/photobook_front/src/pages/editor/editor.tsx",["628","629","630","631","632","633","634","635","636","637"],"/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable consistent-return */\nimport React, { useState, useEffect, useRef, useMemo } from 'react'\nimport { useHotkeys } from 'react-hotkeys-hook'\nimport { useQueryState } from 'react-router-use-location-state'\nimport { connect } from 'react-redux'\nimport {\n  getProjects as _getProjects,\n  saveProject as _saveProject,\n  saveProjectAttribute as _saveProjectAttribute,\n  addNewSlide as _addNewSlide,\n  deleteSlide as _deleteSlide,\n  updateHistory as _updateHistory,\n  addLayout as _addLayout,\n  addObject as _addObject,\n  removeObject as _removeObject,\n  loadObjects as _loadObjects,\n  loadContainers as _loadContainers,\n  loadBackgrounds as _loadBackgrounds,\n  updateContainer as _updateContainer,\n  updateGroupContainer as _updateGroupContainer,\n  updateBackground as _updateBackground,\n  updateObject as _updateObject,\n  setBackgrounds as _setBackgrounds,\n  duplicateSlide as _duplicateSlide,\n  reOrderSlide as _reOrderSlide,\n} from 'redux/actions/project'\n\nimport {\n  BackgroundImage,\n  Container,\n  EditorInterface,\n  FullLayout,\n  HistoryProps,\n  ObjectType,\n  PObject,\n  ProjectInterface,\n  RootInterface,\n  Slide,\n} from 'interfaces'\nimport Spinner from 'components/spinner'\nimport { debounce } from 'utils'\n\nimport { useBoolean } from 'ahooks'\nimport { Header, BackgroundImages, FooterListTools, SideButtons, SideBarPanel, Toolbar } from './components/layout'\nimport Preview from './components/preview'\nimport { Editor, renderBackground, renderObject } from './components/utils'\nimport './components/styles/editor.scss'\n\ninterface Props {\n  getProjects: (id: number, paperSizeId: number, project: string) => Promise<string | undefined>\n  saveProject: (projectId: number, updatedSlide: Slide, slideIndex: number) => void\n  addNewSlide: (slideIndex: number, projectId: number) => Promise<void>\n  duplicateSlide: (projectId: number, slideIndex: number, duplicatedSlide: Slide) => Promise<void>\n  deleteSlide: (projectId: number, slideIndex: number) => Promise<void>\n  reOrderSlide: (projectId: number, slides: Slide[]) => Promise<void>\n  editor: EditorInterface\n  project: ProjectInterface\n  loadObjects: (objects: PObject[]) => void\n  loadContainers: (containers: Container[]) => void\n  updateContainer: (props: { container: Object }) => void\n  updateGroupContainer: (props: { containers: Container[] }) => void\n  updateBackground: (props: { background: BackgroundImage }) => void\n  saveProjectAttribute: (projectId: number, props: Object) => void\n  updateObject: (props: { object: PObject }) => void\n  updateHistory: (historyType: string, props: HistoryProps) => void\n  setBackgrounds: (props: { backgrounds: BackgroundImage[] }) => void\n  loadBackgrounds: (backgrounds: Object[]) => void\n  addLayout: (props: { objects: Object[]; layout: FullLayout }) => void\n  addObject: (props: { object: Object }) => void\n  removeObject: (props: { object: Object; container: Object }) => void\n}\n\nconst BookEditor: React.FC<Props> = ({\n  getProjects,\n  saveProject,\n  addNewSlide,\n  duplicateSlide,\n  reOrderSlide,\n  deleteSlide,\n  loadObjects,\n  loadContainers,\n  updateGroupContainer,\n  saveProjectAttribute,\n  updateBackground,\n  updateObject,\n  setBackgrounds,\n  updateHistory,\n  loadBackgrounds,\n  addLayout,\n  addObject,\n  removeObject,\n  editor,\n  project: {\n    currentProject,\n    objects,\n    containers,\n    backgrounds,\n    bgStyles,\n    slideWidth,\n    slideHeight,\n    layout,\n    layouts,\n    loading,\n    fetching,\n  },\n}) => {\n  const [template, setTemplate] = useQueryState('template', 1)\n  const [coverType, setCoverType] = useQueryState('coverType', 1)\n  const [paperSize, setPaperSize] = useQueryState('paperSize', 1)\n  const [bindingType, setBindingType] = useQueryState('bindingType', 1)\n  const [material, setMaterial] = useQueryState('material', 1)\n  const [color, setColor] = useQueryState('color', 1)\n  const [uuid, setUuid] = useQueryState('project', '')\n\n  const slideViewRef: any = useRef(null)\n  const editorContainerRef: any = useRef(null)\n  const slideContainerRef: any = useRef(null)\n  const selectionRef: any = useRef(null)\n  const canvasRef = useRef<any>(null)\n  const scaledContainerRef = useRef<any>(null)\n  const groupRef = useRef<any>(null)\n  const [overflow, setOverflow] = useState<string>('hidden')\n  const [refreshing, setRefreshing] = useBoolean(false)\n  const [preview, setPreview] = useBoolean(false)\n  const [single, setSingle] = useBoolean(true)\n\n  // states\n  const [scale, setScale] = useState<number>(1)\n  const [fitScale, setFitScale] = useState<number>(1)\n  const [_objectType, setObjectType] = useState<ObjectType>('')\n  const [_isTextEditing, setIsTextEditing] = useState<boolean>(false)\n  const [_index, setObjectIndex] = useState<number>(-1)\n  const [_textObjectIndex, setTextObjectIndex] = useState<number>(-1)\n  const [_object, setObject] = useState<any>(null)\n  const [_groupObjects, setGroupObjects] = useState<any>(null)\n  const [footerCollapse, setFooterCollapse] = useBoolean(false)\n  const [_groupStyles, setGroupStyles] =\n    useState<{\n      left: any\n      top: any\n      width: any\n      height: any\n    }>()\n  const [_slideIndex, setSlideIndex] = useState<number>(0)\n  useHotkeys('shift+a', () => editors.onRotateLeftObject(_index, objects), [_index, objects])\n  useHotkeys('shift+d', () => editors.onRotateRightObject(_index, objects), [_index, objects])\n  useHotkeys('shift+q', () => editors.onFlipObject(_index, objects), [_index, objects])\n  useHotkeys('shift+w', () => editors.onSendForward(_index, objects), [_index, objects])\n  useHotkeys('shift+s', () => editors.onSendBackward(_index, objects), [_index, objects])\n  useHotkeys('ctrl+Delete', () => editors.onRemoveObject(containers, objects, _index), [_index, objects])\n  useHotkeys('shift+Delete', () => editors.onRemoveImageFromObject(_index, objects, _objectType), [_index, objects])\n  useHotkeys(\n    'ctrl+shift+s',\n    () => {\n      saveObjects()\n    },\n    [objects, backgrounds]\n  )\n\n  const editors = useMemo(() => {\n    return new Editor({\n      setTextObjectIndex,\n      setObjectIndex,\n      scale,\n      overflow,\n      setOverflow,\n      _isTextEditing,\n      setIsTextEditing,\n      _groupObjects,\n      setGroupObjects,\n      scaledContainerRef,\n      _objectType,\n      setObjectType,\n      groupRef,\n      _groupStyles,\n      updateGroupContainer,\n      slideViewRef,\n      slideWidth,\n      slideHeight,\n      selectionRef,\n      updateObject,\n      loadBackgrounds,\n      updateHistory,\n      addLayout,\n      addObject,\n      removeObject,\n      slideContainerRef,\n      setObject,\n      canvasRef,\n      setGroupStyles,\n      _object,\n      double: true,\n    })\n  }, [scale, slideHeight, slideWidth])\n\n  const saveTextBeforeUndo = () => {\n    if (_index > -1 && _isTextEditing) {\n      _object.classList.remove('selected')\n      _object.firstChild.style.cursor = 'default'\n      _object.firstChild.style.pointerEvents = 'none'\n      _object.firstChild.childNodes[2].contentEditable = false\n      window.getSelection()?.removeAllRanges()\n      editors.updateCurrentTextObject(_index, objects)\n      setIsTextEditing(false)\n      setTextObjectIndex(_index)\n    }\n  }\n\n  const nextSlide = () => {\n    if (_slideIndex < currentProject.slides.length - 1) {\n      changeSlideIndex(_slideIndex + 1)\n    }\n  }\n\n  const onAddSlide = (projectId: number, slideIndex: number) => {\n    setRefreshing.setTrue()\n    addNewSlide(projectId, slideIndex).then(() => {\n      changeSlideIndex(_slideIndex + 1)\n      setRefreshing.setFalse()\n    })\n  }\n\n  const onDuplicateSlide = (projectId: number, slideIndex: number) => {\n    setRefreshing.setTrue()\n    duplicateSlide(projectId, slideIndex, currentProject.slides[slideIndex]).then(() => {\n      changeSlideIndex(_slideIndex + 1)\n      setRefreshing.setFalse()\n    })\n  }\n\n  const onReOrderSlide = (projectId: number, slides: Slide[]) => {\n    setRefreshing.setTrue()\n    reOrderSlide(projectId, slides).then(() => {\n      setRefreshing.setFalse()\n      editors.deSelectObject()\n      setSlideIndex(0)\n    })\n  }\n\n  const onDeleteSlide = (projectId: number, slideIndex: number) => {\n    if (_slideIndex !== 0) {\n      setRefreshing.setTrue()\n      deleteSlide(projectId, slideIndex).then(() => {\n        setRefreshing.setFalse()\n        editors.deSelectObject()\n        setSlideIndex(_slideIndex - 1)\n      })\n    }\n  }\n\n  const prevSlide = () => {\n    if (_slideIndex !== 0) {\n      changeSlideIndex(_slideIndex - 1)\n    }\n  }\n\n  const changeSlideIndex = (index: number) => {\n    saveObjects()\n    editors.deSelectObject()\n    setSlideIndex(index)\n  }\n\n  const hasNext = () => {\n    return !(_slideIndex === currentProject.slides.length - 1)\n  }\n\n  const hasPrevious = () => {\n    return !(_slideIndex === 0)\n  }\n\n  const saveObjects = async () => {\n    if (_slideIndex >= currentProject.slides.length) return\n    const updatedSlide = currentProject.slides[_slideIndex]\n    updatedSlide.objects = objects\n    updatedSlide.backgrounds = backgrounds\n    saveProject(currentProject.id, updatedSlide, _slideIndex)\n  }\n  const onSaveName = (name: string) => {\n    saveProjectAttribute(currentProject.id, { name })\n  }\n\n  const setSlidePosition = () => {\n    if (slideContainerRef.current === null) return\n    slideContainerRef.current.classList.add('center-slide')\n\n    const editorPanelContainer: any = document.querySelector('.EditorPanelContainer')\n    const allLayout: any = document.querySelector('.SlideListAll')\n\n    editorPanelContainer.style.width = editor.sidebarOpen\n      ? 'calc(100vw - 400px)' // 310 + 90\n      : 'calc(100vw - 90px)' // 90\n\n    if (allLayout?.style) {\n      allLayout.style.width = editor.sidebarOpen\n        ? 'calc(100vw - 400px)' // 310 + 90\n        : 'calc(100vw - 90px)' // 90\n    }\n\n    const rect = slideContainerRef.current.getBoundingClientRect()\n    const maxWidth = slideWidth\n    const maxHeight = slideHeight\n    const srcWidth = rect.width - 240 // 240 is the width of two side menus\n    const srcHeight = rect.height\n\n    const ratio = Math.min(srcWidth / maxWidth, srcHeight / maxHeight)\n    setScale(ratio)\n    setFitScale(ratio)\n\n    const scaledWidth = maxWidth * ratio\n    const scaledHeight = maxHeight * ratio\n\n    canvasRef.current.style.transform = 'scale(' + ratio + ')'\n    canvasRef.current.style.transformOrigin = '0 0'\n    scaledContainerRef.current.style.width = scaledWidth + 'px'\n    scaledContainerRef.current.style.height = scaledHeight + 'px'\n\n    const slide = document.querySelector('#slide') as HTMLElement\n    slide.style.width = scaledWidth + 'px'\n    slide.style.height = scaledHeight + 'px'\n\n    editorContainerRef.current.style.width = scaledWidth + 'px'\n    editorContainerRef.current.style.height = scaledHeight + 'px'\n  }\n\n  const loadSlide = () => {\n    const currentSlide = currentProject.slides[_slideIndex]\n    if (currentSlide.backgrounds.length === 0) {\n      const bgClasses: string[] = ['background-full', 'background-left', 'background-right']\n      loadBackgrounds(\n        bgClasses.map((bgClass) => ({\n          className: bgClass,\n        }))\n      )\n    } else {\n      loadBackgrounds(currentSlide.backgrounds)\n    }\n    loadObjects(currentSlide.objects)\n    loadContainers(currentSlide.containers)\n  }\n\n  useEffect(() => {\n    if (loading) return\n    const debouncedHandleResize = debounce(function handleResize() {\n      editors.hideResizer()\n      editors.hideToolbar()\n      editors.hideActiveBorder()\n      setSlidePosition()\n    }, 100)\n    window.addEventListener('resize', debouncedHandleResize)\n    return () => {\n      window.removeEventListener('resize', debouncedHandleResize)\n    }\n  })\n\n  useEffect(() => {\n    if (!template) {\n      window.history.back()\n      return\n    }\n    getProjects(template, paperSize, uuid).then((id) => {\n      if (id) {\n        setUuid(id)\n      }\n    })\n  }, [getProjects, template])\n\n  useEffect(() => {\n    if (!loading) loadSlide()\n  }, [_slideIndex]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!loading && !preview) {\n      setSlidePosition()\n      loadSlide()\n    }\n  }, [currentProject, preview]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    editors.deSelectObject()\n    if (!loading) {\n      setSlidePosition()\n    }\n  }, [editor.sidebarOpen]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!loading) {\n      setSlidePosition()\n      loadSlide()\n    }\n  }, [loading]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (editor.dragStart) {\n      if (editor.type === 'backgrounds') {\n        const backgroundDrops: any = document.querySelectorAll('.background-drop')\n        backgroundDrops.forEach((background: any) => {\n          background.style.display = 'block'\n        })\n      } else if (editor.type === 'layouts') {\n        const layoutDrops: any = document.querySelectorAll('.layout-drop')\n        layoutDrops.forEach((_layout: any) => {\n          _layout.style.display = 'block'\n        })\n      }\n    } else if (editor.type === 'backgrounds') {\n      const backgroundDrops: any = document.querySelectorAll('.background-drop')\n      backgroundDrops.forEach((background: any) => {\n        background.style.display = 'none'\n      })\n    } else if (editor.type === 'layouts') {\n      const layoutDrops: any = document.querySelectorAll('.layout-drop')\n      layoutDrops.forEach((_layout: any) => {\n        _layout.style.display = 'none'\n      })\n    }\n  }, [editor.dragStart, editor.type])\n\n  const renderEditor = (\n    <div className=\"EditorPanelContainer\">\n      <div ref={slideViewRef} className=\"StepSlideContainer SlideViewContainer\">\n        <div id=\"editor_container\" ref={editorContainerRef}>\n          <Toolbar\n            object={_object}\n            objectType={_objectType}\n            index={_index}\n            objects={objects}\n            updateObject={updateObject}\n            updateHistory={updateHistory}\n            moveResizers={editors.moveResizers}\n            removeImageFromObject={() => editors.onRemoveImageFromObject(_index, objects, _objectType)}\n            rotateLeftObject={() => editors.onRotateLeftObject(_index, objects)}\n            rotateRightObject={() => editors.onRotateRightObject(_index, objects)}\n            flipObject={() => editors.onFlipObject(_index, objects)}\n            sendForward={() => editors.onSendForward(_index, objects)}\n            sendBackward={() => editors.onSendBackward(_index, objects)}\n            removeObject={() => editors.onRemoveObject(containers, objects, _index)}\n          />\n          <div id=\"selection\" hidden ref={selectionRef} />\n          <SideButtons\n            createImage={(e) => editors.createImage(e, objects)}\n            createText={() => editors.createText(objects)}\n            createSquare={() => editors.createSquare(objects)}\n            createEclipse={() => editors.createEclipse(objects)}\n            changeLayout={(align, type) => editors.changeLayout(objects, layout, layouts, align, type)}\n            layout={layout}\n            type=\"photobook\"\n            layouts={layouts}\n          />\n          <div\n            id=\"slide_container\"\n            onMouseDown={(e) => editors.onSlideMouseDown(e, _index, containers)}\n            onDrop={(e) => editors.onObjectDrop(e, editor.type, objects, _index)}\n            onDragOver={editors.onObjectDragOver}\n            ref={slideContainerRef}\n          >\n            <div id=\"slide\" style={{ overflow }}>\n              <div id=\"scaled_container\" ref={scaledContainerRef}>\n                <div\n                  className=\"layout-drop layout-drop-left\"\n                  onDragOver={editors.layoutDragOver}\n                  onDragLeave={editors.layoutDragLeave}\n                  onDrop={(e) => editors.layoutDragDrop(e, objects, layout)}\n                />\n                <div\n                  className=\"layout-drop layout-drop-middle\"\n                  onDragOver={editors.layoutDragOver}\n                  onDragLeave={editors.layoutDragLeave}\n                  onDrop={(e) => editors.layoutDragDrop(e, objects, layout)}\n                />\n                <div\n                  className=\"layout-drop layout-drop-right\"\n                  onDragOver={editors.layoutDragOver}\n                  onDragLeave={editors.layoutDragLeave}\n                  onDrop={(e) => editors.layoutDragDrop(e, objects, layout)}\n                />\n                {!loading && (\n                  <BackgroundImages\n                    scale={scale}\n                    editor={editor}\n                    slideIndex={_slideIndex}\n                    backgrounds={backgrounds}\n                    deSelectObject={editors.deSelectObject}\n                    setBackgrounds={setBackgrounds}\n                    updateBackground={updateBackground}\n                    updateHistory={updateHistory}\n                    onBackgroundDropDragOver={editors.onBackgroundDropDragOver}\n                    onBackgroundDropDragLeave={editors.onBackgroundDropDragLeave}\n                  />\n                )}\n                <div ref={canvasRef} id=\"canvas_container\">\n                  {!loading && (\n                    <>\n                      <div id=\"background\">\n                        {renderBackground({\n                          backgrounds,\n                          bgStyles,\n                          updateBackground,\n                        })}\n                      </div>\n                      <div id=\"container\">\n                        {objects.map((o: PObject, i: number) => {\n                          return (\n                            <div\n                              id={o.id}\n                              key={o.id}\n                              style={o.style as React.CSSProperties}\n                              className={o.className}\n                              onMouseDown={(e) => editors.startDrag(e, o, i, objects)}\n                              onMouseEnter={(e) => editors.objectHover(e, i, _index)}\n                              onMouseLeave={(e) => editors.objectHoverOff(e, i, _index)}\n                              onDragOver={editors.onDragObjectOver}\n                              onDragLeave={(e) => editors.onDragObjectLeave(e, _index)}\n                              onDoubleClick={(e) => editors.onObjectDoubleClick(e, o, i)}\n                              onInput={(e) => editors.updateText(_index, objects, e)}\n                              onPaste={(e) => editors.updateText(_index, objects, e)}\n                              onBlur={(e) => {\n                                editors.updateText(_index, objects, e)\n                                if (_textObjectIndex > -1) {\n                                  editors.updateTextObject(objects, _textObjectIndex)\n                                }\n                              }}\n                              onKeyDown={(e) => editors.updateText(_index, objects, e)}\n                              onKeyUp={(e) => {\n                                if (e.keyCode === 16) editors._isShiftDown = false\n                                if (e.keyCode === 17) editors._isCtrlDown = false\n                              }}\n                            >\n                              {renderObject({\n                                object: o,\n                                updateObject,\n                                updateHistory,\n                                saveObjects,\n                                scale,\n                              })}\n                            </div>\n                          )\n                        })}\n                      </div>{' '}\n                    </>\n                  )}\n                </div>\n\n                <div\n                  className=\"group-selection\"\n                  ref={groupRef}\n                  onMouseDown={(e) => editors.selectionDragStart(e, containers)}\n                />\n                <div className=\"active-border\" />\n                <div className=\"page-border\" />\n                <div className=\"rotate\" onMouseDown={(e) => editors.startRotate(e, objects, _index)} />\n                <div id=\"magnetX\" />\n                <div id=\"magnetY\" />\n                {Object.keys(editors.transformers).map((t: string) => {\n                  const cursor = `${t}-resize`\n                  const resize = editors.transformers[t]\n                  return (\n                    <div\n                      key={t}\n                      style={{ cursor }}\n                      onMouseDown={(e) => editors.startResize(e, cursor, resize, _index, objects)}\n                      className={`resize ${resize}`}\n                    />\n                  )\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n  return fetching ? (\n    <div className=\"AdvancedEditorWrapper\">\n      <div className=\"EditorOnePageView\">\n        <Spinner />\n      </div>\n    </div>\n  ) : (\n    <div className=\"AdvancedEditorWrapper\">\n      <Header\n        deSelectObject={editors.deSelectObject}\n        onPreview={() => {\n          if (preview || !single) {\n            setPreview.setFalse()\n            setSingle.setTrue()\n          } else {\n            setPreview.setTrue()\n          }\n        }}\n        saveName={onSaveName}\n        saveObjects={saveObjects}\n        saveTextBeforeUndo={saveTextBeforeUndo}\n      />\n      <div className=\"EditorOnePageView\">\n        {!preview && <SideBarPanel layoutGroups={layouts} hasImage />}\n        <div className=\"EditorPanel\">\n          {preview ? (\n            <Preview\n              slideIndex={_slideIndex}\n              nextSlide={nextSlide}\n              prevSlide={prevSlide}\n              hasNext={hasNext}\n              hasPrevious={hasPrevious}\n            />\n          ) : (\n            renderEditor\n          )}\n          <FooterListTools\n            scale={scale}\n            fitScale={fitScale}\n            setScale={setScale}\n            loading={loading || refreshing}\n            bgStyles={bgStyles}\n            collapse={{\n              state: footerCollapse,\n              action: setFooterCollapse,\n            }}\n            preview={{\n              state: preview,\n              action: setPreview,\n            }}\n            single={{\n              state: single,\n              action: setSingle,\n            }}\n            slideWidth={slideWidth}\n            slideHeight={slideHeight}\n            objects={objects}\n            containers={containers}\n            backgrounds={backgrounds}\n            deSelectObject={editors.deSelectObject}\n            slideIndex={_slideIndex}\n            currentProject={currentProject}\n            changeSlideIndex={changeSlideIndex}\n            addNewSlide={onAddSlide}\n            duplicateSlide={onDuplicateSlide}\n            reOrderSlide={onReOrderSlide}\n            deleteSlide={onDeleteSlide}\n            nextSlide={nextSlide}\n            prevSlide={prevSlide}\n            hasNext={hasNext}\n            hasPrevious={hasPrevious}\n            updateObject={updateObject}\n            updateHistory={updateHistory}\n            saveObjects={saveObjects}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: RootInterface) => ({\n  project: state.project,\n  editor: state.editor,\n})\n\nexport default connect(mapStateToProps, {\n  getProjects: _getProjects,\n  saveProject: _saveProject,\n  addNewSlide: _addNewSlide,\n  deleteSlide: _deleteSlide,\n  loadObjects: _loadObjects,\n  loadContainers: _loadContainers,\n  loadBackgrounds: _loadBackgrounds,\n  updateContainer: _updateContainer,\n  updateGroupContainer: _updateGroupContainer,\n  updateBackground: _updateBackground,\n  updateObject: _updateObject,\n  setBackgrounds: _setBackgrounds,\n  updateHistory: _updateHistory,\n  addLayout: _addLayout,\n  addObject: _addObject,\n  duplicateSlide: _duplicateSlide,\n  removeObject: _removeObject,\n  reOrderSlide: _reOrderSlide,\n  saveProjectAttribute: _saveProjectAttribute,\n})(BookEditor)\n","/home/project/photobook/photobook_front/src/pages/redirect/index.tsx",[],"/home/project/photobook/photobook_front/src/pages/auth/change-password/index.tsx",["638"],"import React, { useEffect, useState } from 'react'\nimport { Form, Input, notification } from 'antd'\nimport { FormattedMessage, useIntl } from 'react-intl'\nimport { changePassword } from 'api'\nimport { CustomButton, useRouter } from 'components'\n\nconst ChangePassword: React.FC = () => {\n  const [email, setEmail] = useState()\n  const [token, setToken] = useState<string>()\n  const router = useRouter()\n  const intl = useIntl()\n  const [loading, setLoading] = useState(false)\n\n  const onFinish = (values: any) => {\n    setLoading(true)\n    if (!token) return\n\n    changePassword(token, values)\n      .then((res) => {\n        if (res?.status) {\n          notification.success({ message: intl.formatMessage({ id: 'success' }) })\n          router.push('/auth/signin')\n        }\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }\n\n  useEffect(() => {\n    setEmail(router.query.email)\n    setToken(router.query.token)\n  }, [])\n\n  return (\n    <div className=\"w-full h-screen bg-gray-100\">\n      <div className=\"w-96 flex flex-col gap-4 bg-white rounded-lg p-6 shadow-md mx-auto mt-10\">\n        <span className=\"font-semibold\">{email}</span>\n        <Form name=\"basic\" layout=\"vertical\" onFinish={onFinish}>\n          <Form.Item\n            label={\n              <span className=\"font-semibold text-gray-500\">\n                <FormattedMessage id=\"password\" />\n              </span>\n            }\n            name=\"password\"\n            rules={[{ required: true, message: 'Please input your password!' }]}\n          >\n            <Input.Password />\n          </Form.Item>\n          <Form.Item\n            name=\"confirmPassword\"\n            dependencies={['password']}\n            label={\n              <span className=\"font-semibold text-gray-500\">\n                <FormattedMessage id=\"confirm_password\" />\n              </span>\n            }\n            rules={[\n              {\n                required: true,\n                message: <FormattedMessage id=\"please_input_confirm_password\" />,\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve()\n                  }\n                  return Promise.reject(new Error('The two passwords that you entered do not match!'))\n                },\n              }),\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n          <Form.Item>\n            <CustomButton className=\"btn-warning\" loading={loading} type=\"submit\">\n              <FormattedMessage id=\"sign-in\" />\n            </CustomButton>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","/home/project/photobook/photobook_front/src/pages/auth/forgot-password/index.tsx",[],"/home/project/photobook/photobook_front/src/pages/auth/signup/index.tsx",["639"],"import { CustomButton, useRouter } from 'components'\nimport React, { useState } from 'react'\nimport { Form, Input, Button, notification } from 'antd'\nimport { useDispatch } from 'react-redux'\nimport './style.css'\nimport { FormattedMessage, useIntl } from 'react-intl'\nimport { signUp } from 'api'\nimport { REGISTER_SUCCESS } from 'redux/actions/types'\n\nconst Signup: React.FC = () => {\n  const router = useRouter()\n\n  const [loading, setLoading] = useState(false)\n  const intl = useIntl()\n  const dispatch = useDispatch()\n\n  const onFinish = (values: any) => {\n    setLoading(true)\n    const { email, password } = values\n\n    signUp(email, password)\n      .then(() => {\n        dispatch({\n          type: REGISTER_SUCCESS,\n        })\n        notification.success({\n          message: intl.formatMessage({ id: 'sign_up_success' }),\n        })\n        router.push('/auth/signin')\n      })\n      .catch(() => {\n        // dispatch({ type: REGISTER_FAIL })\n\n        notification.warning({\n          message: intl.formatMessage({ id: 'sign_up_error' }),\n        })\n      })\n      .finally(() => setLoading(false))\n  }\n\n  return (\n    <div className=\"w-full h-screen bg-gray-100\">\n      <div className=\"w-96 bg-white rounded-lg p-6 shadow-md mx-auto mt-10\">\n        <Form\n          name=\"basic\"\n          layout=\"vertical\"\n          initialValues={{\n            email: 'admin@example.com',\n            password: 'FERNANDOtorres_9',\n          }}\n          onFinish={(values) => onFinish(values)}\n        >\n          <Form.Item\n            label={\n              <span className=\"font-semibold text-gray-500\">\n                <FormattedMessage id=\"email\" />\n              </span>\n            }\n            name=\"email\"\n            rules={[{ required: true, message: 'Please input your email!' }]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label={\n              <span className=\"font-semibold text-gray-500\">\n                <FormattedMessage id=\"password\" />\n              </span>\n            }\n            name=\"password\"\n            rules={[{ required: true, message: 'Please input your password!' }]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item>\n            <CustomButton className=\"btn-warning\" loading={loading} type=\"submit\">\n              <FormattedMessage id=\"sign-up\" />\n            </CustomButton>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default Signup\n","/home/project/photobook/photobook_front/src/pages/auth/login/index.tsx",["640"],"import React, { useState } from 'react'\nimport { Form, Input, Button, notification } from 'antd'\nimport { useDispatch } from 'react-redux'\nimport { FacebookFilled, GoogleOutlined } from '@ant-design/icons'\nimport { FormattedMessage, useIntl } from 'react-intl'\nimport { signIn } from 'api'\nimport { LOGIN_FAIL, LOGIN_SUCCESS } from 'redux/actions/types'\nimport { CustomButton, useRouter } from 'components'\nimport { loadUser } from 'redux/actions/auth'\n\nconst Login: React.FC = () => {\n  const router = useRouter()\n  const intl = useIntl()\n  const [loading, setLoading] = useState(false)\n  const dispatch = useDispatch()\n\n  const googleSignin = () => {\n    const popupWindow = window.open(`${process.env.REACT_APP_BACK_URL}/auth/google`, '_blank', 'width=600, height=600')\n    if (popupWindow) popupWindow.focus()\n  }\n\n  const facebookSignin = () => {\n    const popupWindow = window.open(\n      `${process.env.REACT_APP_BACK_URL}/auth/facebook`,\n      '_blank',\n      'width=600, height=600'\n    )\n    if (popupWindow) popupWindow.focus()\n  }\n\n  const onFinish = (values: any) => {\n    setLoading(true)\n    const { email, password } = values\n\n    signIn(email, password)\n      .then((user) => {\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload: user,\n        })\n        notification.success({\n          message: intl.formatMessage({ id: 'sign_in_success' }),\n        })\n        dispatch(loadUser())\n        router.push('/')\n      })\n      .catch(() => {\n        dispatch({ type: LOGIN_FAIL })\n        notification.warning({\n          message: intl.formatMessage({ id: 'sign_in_error' }),\n        })\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }\n\n  return (\n    <div className=\"w-full h-screen bg-gray-100\">\n      <div className=\"w-96 flex flex-col gap-4 bg-white rounded-lg p-6 shadow-md mx-auto mt-10\">\n        <div className=\"ml-auto\">\n          <CustomButton className=\"btn-text text-xs text-blue-400\" onClick={() => router.push('/auth/forgot-password')}>\n            <FormattedMessage id=\"forgot_password\" />?\n          </CustomButton>\n        </div>\n        <CustomButton className=\"btn-primary\" icon={<GoogleOutlined />} onClick={googleSignin}>\n          Sign in with Google\n        </CustomButton>\n        <CustomButton className=\"btn-primary\" icon={<FacebookFilled />} onClick={facebookSignin}>\n          Sign in with Facebook\n        </CustomButton>\n        <Form name=\"basic\" layout=\"vertical\" onFinish={onFinish}>\n          <Form.Item\n            label={\n              <span className=\"font-semibold text-gray-500\">\n                <FormattedMessage id=\"email\" />\n              </span>\n            }\n            name=\"email\"\n            rules={[{ required: true, message: 'Please input your email!' }]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label={\n              <span className=\"font-semibold text-gray-500\">\n                <FormattedMessage id=\"password\" />\n              </span>\n            }\n            name=\"password\"\n            rules={[{ required: true, message: 'Please input your password!' }]}\n          >\n            <Input.Password />\n          </Form.Item>\n          <Form.Item>\n            <CustomButton className=\"btn-warning\" loading={loading} type=\"submit\">\n              <FormattedMessage id=\"sign-in\" />\n            </CustomButton>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","/home/project/photobook/photobook_front/src/pages/landing/index.tsx",[],"/home/project/photobook/photobook_front/src/pages/product/photobook/index.tsx",[],"/home/project/photobook/photobook_front/src/pages/product/frame/index.tsx",[],"/home/project/photobook/photobook_front/src/pages/product/canvas/index.tsx",[],"/home/project/photobook/photobook_front/src/pages/product/frame/template/index.tsx",[],"/home/project/photobook/photobook_front/src/pages/product/canvas/template/index.tsx",["641"],"import { useRequest } from 'ahooks'\nimport { message } from 'antd'\nimport React, { FC, useState } from 'react'\nimport { getTemplate, listPaperMaterial, listPaperSize } from 'api'\nimport { CanvasLayoutOptions, Loading } from 'components'\nimport { useParams } from 'react-router'\nimport WidthLimiter from 'layouts/main/components/width-limiter'\nimport { PaperMaterial, PaperSize, Template } from 'interfaces'\n\nconst ProductTemplate: FC = () => {\n  const { id }: { id: string } = useParams()\n  const [selectedShowCase, setSelectedShowCase] = useState<{ url: string; type: 'video' | 'image' }>()\n  const [selectedState, setSelectedState] = useState<{\n    paperSize?: PaperSize\n    paperMaterial?: PaperMaterial\n  }>({\n    paperSize: undefined,\n    paperMaterial: undefined,\n  })\n\n  const template = useRequest(() => getTemplate(parseInt(id, 10)), {\n    onSuccess: (res) => {\n      if (res.imageUrl) {\n        setSelectedShowCase({\n          url: res.imageUrl,\n          type: 'image',\n        })\n      }\n    },\n    onError: () => {\n      message.error('Error')\n    },\n  })\n\n  const paperSizes = useRequest(() => listPaperSize({ current: 0, pageSize: 100 }, { templateType: 'canvas' }))\n\n  const paperMaterials = useRequest(() => listPaperMaterial())\n  console.log(selectedShowCase)\n  return (\n    <WidthLimiter className=\"flex flex-col sm:flex-row min-h-screen\">\n      {template.loading ? (\n        <Loading />\n      ) : (\n        <>\n          <div className=\"flex flex-col w-full sm:w-1/2 gap-4 p-4\">\n            <div className=\"w-full grid place-items-center aspect-w-1 aspect-h-1\">\n              {selectedShowCase?.type === 'video' ? (\n                <iframe\n                  width=\"100%\"\n                  height=\"100%\"\n                  src={selectedShowCase.url}\n                  title=\"YouTube video player\"\n                  frameBorder=\"0\"\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                  allowFullScreen\n                />\n              ) : (\n                <img\n                  draggable={false}\n                  className=\"w-full object-contain\"\n                  src={`${process.env.REACT_APP_PUBLIC_IMAGE}${selectedShowCase?.url}`}\n                  alt=\"showcase\"\n                />\n              )}\n            </div>\n            <div className=\"flex gap-4\">\n              {template.data?.imageUrl && (\n                <button\n                  className=\"w-full\"\n                  style={{ maxWidth: '200px' }}\n                  type=\"button\"\n                  onClick={() => {\n                    if (template.data?.imageUrl) {\n                      setSelectedShowCase({ url: template.data.imageUrl, type: 'image' })\n                    }\n                  }}\n                >\n                  <img\n                    draggable={false}\n                    className=\"w-full\"\n                    src={`${process.env.REACT_APP_PUBLIC_IMAGE}${(template.data as Template).imageUrl}`}\n                    alt=\"template\"\n                  />\n                </button>\n              )}\n              {selectedState.paperMaterial?.imageUrl && (\n                <button\n                  className=\"w-full\"\n                  style={{ maxWidth: '200px' }}\n                  type=\"button\"\n                  onClick={() => {\n                    if (selectedState.paperMaterial?.imageUrl) {\n                      setSelectedShowCase({ url: selectedState.paperMaterial.imageUrl, type: 'image' })\n                    }\n                  }}\n                >\n                  <img\n                    draggable={false}\n                    className=\"w-full\"\n                    src={`${process.env.REACT_APP_PUBLIC_IMAGE}${selectedState.paperMaterial.imageUrl}`}\n                    alt=\"template\"\n                  />\n                </button>\n              )}\n            </div>\n            <div dangerouslySetInnerHTML={{ __html: template.data.description }} />\n          </div>\n          <div className=\"flex flex-col w-full sm:w-1/2 p-4\">\n            {template.loading || paperSizes.loading || paperMaterials.loading ? (\n              <Loading fill={false} />\n            ) : (\n              <CanvasLayoutOptions\n                template={template.data}\n                paperSizes={paperSizes.data.list}\n                paperMaterials={paperMaterials.data}\n                selectedState={selectedState}\n                setSelectedState={setSelectedState}\n              />\n            )}\n          </div>\n        </>\n      )}\n    </WidthLimiter>\n  )\n}\n\nexport default ProductTemplate\n","/home/project/photobook/photobook_front/src/components/index.tsx",[],"/home/project/photobook/photobook_front/src/page-components/landing-page/index.ts",[],"/home/project/photobook/photobook_front/src/layouts/main/components/width-limiter/index.tsx",[],"/home/project/photobook/photobook_front/src/components/custom-button/index.tsx",[],"/home/project/photobook/photobook_front/src/page-components/landing-page/features/index.tsx",[],"/home/project/photobook/photobook_front/src/page-components/landing-page/social-proof/index.tsx",[],"/home/project/photobook/photobook_front/src/components/loading/index.tsx",[],"/home/project/photobook/photobook_front/src/components/card-table/generateColumn.tsx",[],"/home/project/photobook/photobook_front/src/page-components/landing-page/image-carousel/index.tsx",[],"/home/project/photobook/photobook_front/src/page-components/landing-page/show-case-products/index.tsx",[],"/home/project/photobook/photobook_front/src/page-components/landing-page/hero/index.tsx",[],"/home/project/photobook/photobook_front/src/components/grid-dnd/index.tsx",[],"/home/project/photobook/photobook_front/src/components/button/index.tsx",[],"/home/project/photobook/photobook_front/src/components/frame-layout-options/index.tsx",[],"/home/project/photobook/photobook_front/src/components/canvas-layout-options/index.tsx",[],"/home/project/photobook/photobook_front/src/components/photobook-layout-options/index.tsx",[],"/home/project/photobook/photobook_front/src/components/categories/index.tsx",[],"/home/project/photobook/photobook_front/src/components/cards/index.tsx",["642"],"import React, { FC } from 'react'\nimport { Template } from 'interfaces'\nimport { Link } from 'react-router-dom'\n\ninterface Props {\n  template: Template\n  rowSize?: 1 | 2 | 3 | 4 | 6\n}\nconsole.log(process.env)\n\nconst TemplateCard: FC<Props> = ({ template, rowSize = 3 }) => {\n  return (\n    <Link\n      className=\"p-2 rounded hover:shadow-lg hover:bg-white ease-in transition-all\"\n      style={{ width: `calc(100% / ${rowSize} - 0.5rem` }}\n      to={`/product/${template.templateType?.name}/template/${template.id}`}\n    >\n      <article>\n        <div>\n          <img\n            className=\"w-full rounded\"\n            src={`${process.env.REACT_APP_PUBLIC_IMAGE}${template.imageUrl}`}\n            alt={template.name}\n            width={300}\n            height={300}\n          />\n        </div>\n        <div className=\"flex flex-col items-center\">\n          <p className=\"text-black\">{template.name}</p>\n          <p className=\"text-black\">{template.price} ₮</p>\n        </div>\n      </article>\n    </Link>\n  )\n}\n\nexport default TemplateCard\n","/home/project/photobook/photobook_front/src/components/card-table/index.tsx",[],"/home/project/photobook/photobook_front/src/components/product-list/index.tsx",[],"/home/project/photobook/photobook_front/src/components/product-wrapper/index.tsx",[],"/home/project/photobook/photobook_front/src/components/promp_layout/index.tsx",[],"/home/project/photobook/photobook_front/src/components/prompt/index.tsx",[],"/home/project/photobook/photobook_front/src/components/form-modal/index.tsx",[],"/home/project/photobook/photobook_front/src/components/router/index.tsx",[],"/home/project/photobook/photobook_front/src/components/spinner/index.tsx",[],"/home/project/photobook/photobook_front/src/components/empty/index.tsx",[],"/home/project/photobook/photobook_front/src/components/card-table/settings.tsx",[],"/home/project/photobook/photobook_front/src/components/grid-dnd/withReactToItemsChange/withReactToItemsChange.tsx",[],"/home/project/photobook/photobook_front/src/configs/index.tsx",[],"/home/project/photobook/photobook_front/src/components/grid-dnd/withMaxItems/withMaxItems.tsx",[],"/home/project/photobook/photobook_front/src/components/grid-dnd/DragAndDropWrapper/DragAndDropWrapper.tsx",[],"/home/project/photobook/photobook_front/src/components/grid-dnd/DragAndDropWrapper/ListManagerItem.tsx",[],"/home/project/photobook/photobook_front/src/components/grid-dnd/withMaxItems/compute/index.tsx",[],"/home/project/photobook/photobook_front/src/components/grid-dnd/withMaxItems/compute/computeOriginalIndex.tsx",[],"/home/project/photobook/photobook_front/src/components/grid-dnd/withMaxItems/compute/splitItems.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/preview.tsx",[],"/home/project/photobook/photobook_front/src/redux/actions/project.ts",["643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659"],"import { Storage } from 'aws-amplify'\nimport {\n  createProject,\n  getPaperSize,\n  getProject,\n  getProjectByUuid,\n  getTemplate,\n  listImageCategoryByProject,\n  updateProject as _updateProject,\n  updateProjectSlides,\n} from 'api'\nimport { BackgroundImage, Container, PaperSize, PObject, Project, Slide, Template } from 'interfaces'\nimport { getS3Images } from 'utils/aws-lib'\nimport { SinglePageEditor } from 'configs'\nimport { generateDuplicatedSlide, generateNewSlide } from 'utils/transformer-lib'\nimport {\n  UPDATE_PROJECT,\n  PROJECTS_ERROR,\n  SAVE_PROJECT,\n  SLIDES_ERROR,\n  NEW_SLIDE,\n  DELETE_SLIDE,\n  REDO,\n  REDO_ERROR,\n  UNDO_ERROR,\n  UNDO,\n  REMOVE_OBJECT,\n  ADD_OBJECT,\n  UPDATE_HISTORY,\n  LOAD_BACKGROUNDS,\n  LOAD_ERROR,\n  LOAD_CONTAINERS,\n  LOAD_OBJECTS,\n  SET_CURRENT_PROJECT,\n  SET_SLIDE_DIMENSION,\n  UPDATE_CONTAINER,\n  UPDATE_GROUP_CONTAINER,\n  UPDATE_BACKGROUND,\n  SET_BACKGROUNDS,\n  UPDATE_OBJECT,\n  ADD_LAYOUT,\n  REORDER_SLIDE,\n  SAVE_PROJECT_ATTR,\n  CLEAR_PROJECT,\n  GET_IMAGES,\n  GET_CATEGORIES,\n} from './types'\n\n// #region [Project]\nexport const getProjects = (id: number, paperSizeId: number, uuid: string) => async (dispatch: any) => {\n  try {\n    if (uuid.length === 0) {\n      dispatch({ type: CLEAR_PROJECT })\n      const template: Template = await getTemplate(id)\n      const newProject = await createProject({\n        name: 'New Project',\n        templateId: id,\n        paperSizeId,\n        slides: template.slides,\n      })\n      const project: Project = await getProject(newProject?.data.id)\n      dispatch(setCurrentProject(project))\n      dispatch({\n        type: GET_IMAGES,\n        payload: project.images,\n      })\n      return project.uuid\n    } else {\n      dispatch({ type: CLEAR_PROJECT })\n      const project: Project = await getProjectByUuid(uuid)\n      const imageCategories = await listImageCategoryByProject(project.templateId)\n      const images = await getS3Images(project.images || [])\n      dispatch(setCurrentProject(project))\n      dispatch({\n        type: GET_CATEGORIES,\n        payload: imageCategories,\n      })\n\n      dispatch({\n        type: GET_IMAGES,\n        payload: images,\n      })\n      return uuid\n    }\n  } catch (err) {\n    dispatch({\n      type: PROJECTS_ERROR,\n      payload: { msg: err },\n    })\n  }\n  return undefined\n}\n// update project\nexport const updateProject = (projectId: number, props: { paperSizeId: number }) => async (dispatch: any) => {\n  try {\n    await _updateProject(projectId, { paperSizeId: props.paperSizeId })\n    const paperSize: PaperSize = await getPaperSize(props.paperSizeId)\n    dispatch(setSlideStyle(`${paperSize.width}x${paperSize.height}`))\n\n    dispatch({\n      type: UPDATE_PROJECT,\n      payload: props,\n    })\n  } catch (err) {\n    dispatch({\n      type: PROJECTS_ERROR,\n      payload: { msg: err },\n    })\n  }\n}\n\n// set current project\nexport const setCurrentProject = (project: Project) => async (dispatch: any) => {\n  try {\n    console.log(\n      'aaaaalog',\n      project.templateType?.name,\n      SinglePageEditor.includes(project.templateType?.name || 'photobook')\n    )\n    dispatch(\n      setSlideStyle(\n        `${project.paperSize?.width}x${project.paperSize?.height}`,\n        SinglePageEditor.includes(project.templateType?.name || 'photobook')\n      )\n    )\n    dispatch({\n      type: SET_CURRENT_PROJECT,\n      payload: project,\n    })\n  } catch (err) {\n    dispatch({\n      type: PROJECTS_ERROR,\n      payload: { msg: err },\n    })\n  }\n}\n\n// Save project\nexport const saveProject = (projectId: number, updatedSlide: Slide, slideIndex: number) => async (dispatch: any) => {\n  try {\n    await updateProjectSlides(projectId, {\n      update: [updatedSlide, slideIndex],\n    })\n\n    dispatch({\n      type: SAVE_PROJECT,\n      payload: updatedSlide,\n    })\n  } catch (err) {\n    dispatch({\n      type: PROJECTS_ERROR,\n      payload: { msg: err },\n    })\n  }\n}\n\nexport const saveProjectAttribute = (projectId: number, data: Object) => async (dispatch: any) => {\n  try {\n    await _updateProject(projectId, data)\n    dispatch({\n      type: SAVE_PROJECT_ATTR,\n      payload: data,\n    })\n  } catch (err) {\n    dispatch({\n      type: PROJECTS_ERROR,\n      payload: { msg: err },\n    })\n  }\n}\n// #endregion [Project]\n\n// #region [Slide]\n// set bgStyle\nexport const setSlideStyle =\n  (paperSize = '14x11', isSingle = false) =>\n  async (dispatch: any) => {\n    console.log('aaaaalog', isSingle)\n    try {\n      const [width, height] = paperSize.split('x') // 14x11\n      let slideWidth = parseFloat(width) * 100 * 2 + 30 // 30 is the book spine\n      if (isSingle) {\n        slideWidth = parseFloat(width) * 100\n      }\n\n      const slideHeight = parseFloat(height) * 100 // 11 * 100 = 1100\n      console.log('aaaaalog', slideWidth, slideHeight)\n\n      const bgStyles = {\n        'background-full': {\n          left: 0 + 'px',\n          width: slideWidth + 'px',\n          height: slideHeight + 'px',\n        },\n        'background-left': {\n          left: 0,\n          width: slideWidth / 2 + 'px',\n          height: slideHeight + 'px',\n        },\n        'background-right': {\n          left: slideWidth / 2 + 'px',\n          width: slideWidth / 2 + 'px',\n          height: slideHeight + 'px',\n        },\n      }\n\n      dispatch({\n        type: SET_SLIDE_DIMENSION,\n        payload: { bgStyles, slideWidth, slideHeight },\n      })\n    } catch (err) {\n      console.error('LOAD Slide style', err)\n      dispatch({\n        type: LOAD_ERROR,\n        payload: { msg: err },\n      })\n    }\n  }\n\n// loadObjects\nexport const loadObjects = (objects: PObject[]) => async (dispatch: any) => {\n  try {\n    dispatch({\n      type: LOAD_OBJECTS,\n      payload: objects,\n    })\n  } catch (err) {\n    console.error('LOAD object', err)\n    dispatch({\n      type: LOAD_ERROR,\n      payload: { msg: err },\n    })\n  }\n}\n\n// loadContainers\nexport const loadContainers = (containers: Container[]) => async (dispatch: any) => {\n  try {\n    dispatch({\n      type: LOAD_CONTAINERS,\n      payload: containers,\n    })\n  } catch (err) {\n    console.error('LOAD Container', err)\n    dispatch({\n      type: LOAD_ERROR,\n      payload: { msg: err },\n    })\n  }\n}\n\n// loadBackgrounds\nexport const loadBackgrounds = (backgrounds: Object[]) => async (dispatch: any) => {\n  try {\n    dispatch({\n      type: LOAD_BACKGROUNDS,\n      payload: backgrounds,\n    })\n  } catch (err) {\n    console.error('LOAD Background', err)\n    dispatch({\n      type: LOAD_ERROR,\n      payload: { msg: err },\n    })\n  }\n}\n\n// Add new slide\nexport const addNewSlide = (projectId: number, slideIndex: number) => async (dispatch: any) => {\n  try {\n    const newSlide = generateNewSlide()\n    await updateProjectSlides(projectId, {\n      insert: [newSlide, slideIndex + 1],\n    })\n\n    dispatch({\n      type: NEW_SLIDE,\n      payload: { slide: newSlide, slideIndex: slideIndex + 1 },\n    })\n  } catch (err) {\n    dispatch({\n      type: SLIDES_ERROR,\n      payload: { msg: err },\n    })\n  }\n}\n// Duplicate slide\nexport const duplicateSlide = (projectId: number, slideIndex: number, slide: Slide) => async (dispatch: any) => {\n  try {\n    const newSlide = generateDuplicatedSlide(slide)\n    await updateProjectSlides(projectId, {\n      insert: [newSlide, slideIndex + 1],\n    })\n    dispatch({\n      type: NEW_SLIDE,\n      payload: { slide: newSlide, slideIndex: slideIndex + 1 },\n    })\n  } catch (err) {\n    dispatch({\n      type: SLIDES_ERROR,\n      payload: { msg: err },\n    })\n  }\n}\n\n// reorder slide\nexport const reOrderSlide = (projectId: number, slides: Slide[]) => async (dispatch: any) => {\n  try {\n    await _updateProject(projectId, {\n      slides,\n    })\n    dispatch({\n      type: REORDER_SLIDE,\n      payload: {\n        slides,\n      },\n    })\n  } catch (err) {\n    dispatch({\n      type: SLIDES_ERROR,\n      payload: { msg: err },\n    })\n  }\n}\n\n// delete slide\nexport const deleteSlide = (projectId: number, slideIndex: number) => async (dispatch: any) => {\n  try {\n    await updateProjectSlides(projectId, {\n      pop: slideIndex,\n    })\n    dispatch({\n      type: DELETE_SLIDE,\n      payload: slideIndex,\n    })\n  } catch (err) {\n    dispatch({\n      type: SLIDES_ERROR,\n      payload: { msg: err },\n    })\n  }\n}\n\n// slide\n\n// updateHistory\nexport const updateHistory = (historyType: string, props: any) => async (dispatch: any) => {\n  try {\n    dispatch({\n      type: UPDATE_HISTORY,\n      payload: { historyType, props },\n    })\n  } catch (err) {\n    dispatch({\n      type: SLIDES_ERROR,\n      payload: { msg: err },\n    })\n  }\n}\n\n// updateBackground\nexport const updateBackground = (props: { background: BackgroundImage }) => async (dispatch: any) => {\n  try {\n    dispatch({\n      type: UPDATE_BACKGROUND,\n      payload: props,\n    })\n  } catch (err) {\n    console.error(err)\n    dispatch({\n      type: SLIDES_ERROR,\n      payload: { msg: err },\n    })\n  }\n}\n\n// setBackgrounds\nexport const setBackgrounds = (props: { backgrounds: BackgroundImage[] }) => async (dispatch: any) => {\n  try {\n    dispatch({\n      type: SET_BACKGROUNDS,\n      payload: props,\n    })\n  } catch (err) {\n    console.error(err)\n    dispatch({\n      type: SLIDES_ERROR,\n      payload: { msg: err },\n    })\n  }\n}\n\n// updateContainer\nexport const updateContainer = (props: { container: Object }) => async (dispatch: any) => {\n  try {\n    dispatch({\n      type: UPDATE_CONTAINER,\n      payload: props,\n    })\n  } catch (err) {\n    console.error(err)\n    dispatch({\n      type: SLIDES_ERROR,\n      payload: { msg: err },\n    })\n  }\n}\n\n// updateGroupContainer\nexport const updateGroupContainer = (props: { containers: Container[] }) => async (dispatch: any) => {\n  try {\n    dispatch({\n      type: UPDATE_GROUP_CONTAINER,\n      payload: props,\n    })\n  } catch (err) {\n    console.error(err)\n    dispatch({\n      type: SLIDES_ERROR,\n      payload: { msg: err },\n    })\n  }\n}\n\n// updateObject\nexport const updateObject = (props: { object: Object }) => async (dispatch: any) => {\n  try {\n    dispatch({\n      type: UPDATE_OBJECT,\n      payload: props,\n    })\n  } catch (err) {\n    console.error(err)\n    dispatch({\n      type: SLIDES_ERROR,\n      payload: { msg: err },\n    })\n  }\n}\n\n// addLayout\nexport const addLayout = (props: { objects: Object[] }) => async (dispatch: any) => {\n  try {\n    dispatch({\n      type: ADD_LAYOUT,\n      payload: props,\n    })\n  } catch (err) {\n    dispatch({\n      type: SLIDES_ERROR,\n      payload: { msg: err },\n    })\n  }\n}\n\n// addObject\nexport const addObject = (props: { object: Object }) => async (dispatch: any) => {\n  try {\n    dispatch({\n      type: ADD_OBJECT,\n      payload: props,\n    })\n\n    dispatch(updateHistory(ADD_OBJECT, props))\n  } catch (err) {\n    console.error(err)\n    dispatch({\n      type: SLIDES_ERROR,\n      payload: { msg: err },\n    })\n  }\n}\n\n// removeObject\nexport const removeObject = (props: { object: Object; container: Object }) => async (dispatch: any) => {\n  try {\n    dispatch({\n      type: REMOVE_OBJECT,\n      payload: props,\n    })\n\n    dispatch(updateHistory(REMOVE_OBJECT, props))\n  } catch (err) {\n    console.error(err)\n    dispatch({\n      type: SLIDES_ERROR,\n      payload: { msg: err },\n    })\n  }\n}\n\n// undo\nexport const undo = () => async (dispatch: any) => {\n  try {\n    dispatch({\n      type: UNDO,\n    })\n  } catch (err) {\n    console.error(err)\n    dispatch({\n      type: UNDO_ERROR,\n      payload: { msg: err },\n    })\n  }\n}\n\n// redo\nexport const redo = () => async (dispatch: any) => {\n  try {\n    dispatch({\n      type: REDO,\n    })\n  } catch (err) {\n    console.error(err)\n    dispatch({\n      type: REDO_ERROR,\n      payload: { msg: err },\n    })\n  }\n}\n","/home/project/photobook/photobook_front/src/pages/editor/components/utils/index.ts",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/index.ts",[],"/home/project/photobook/photobook_front/src/utils/index.tsx",[],"/home/project/photobook/photobook_front/src/utils/transformer-lib.ts",[],"/home/project/photobook/photobook_front/src/utils/aws-lib.ts",["660","661","662"],"import { Storage } from 'aws-amplify'\nimport axios from 'axios'\nimport { Image, UploadablePicture } from 'interfaces'\nimport Resizer from 'react-image-file-resizer'\n\nexport async function s3Upload(file: File) {\n  const filename = `${Date.now()}-${file.name}`\n  const thumb = await resizeFile(file)\n\n  // if we were uploading publicly we can use the Storage.put() method\n  const stored: any = await Storage.put(filename, thumb, {\n    ACL: 'public-read',\n    contentType: file.type,\n  })\n  Storage.put(filename, file, {\n    progressCallback: (progress: any) => {\n      console.log(`Uploaded: ${progress.loaded}/${progress.total}`)\n    },\n    level: 'private',\n    contentType: file.type,\n  })\n\n  return stored.key\n}\n\nexport async function getS3Images(images: Image[]) {\n  return Promise.all(\n    images.map(async (image: Image) => ({\n      ...image,\n      tempUrl: await Storage.get(image.imageUrl, { expires: 60 * 60 * 24 * 7 }),\n    }))\n  )\n}\n\nexport function blobToFile(blob: Blob, name: string): File {\n  const _blob: any = blob\n  _blob.lastModifiedDate = new Date()\n  _blob.name = name\n\n  return _blob\n}\n\nexport async function s3SyncImages(images: UploadablePicture[]) {\n  const keys = await Promise.all(\n    images?.map(async (image) => {\n      const filename = `${Date.now()}-${image.filename}`\n      const url = image.url.includes('google')\n        ? `https://u0n54noja5.execute-api.us-east-1.amazonaws.com/google-download?domain=${image.url}`\n        : image.url\n      const { data } = await axios.get(url, {\n        transformRequest: (_data, headers) => {\n          if (!image.url.includes('google')) {\n            delete headers.common['Access-Control-Allow-Headers']\n          }\n          return _data\n        },\n        responseType: 'blob',\n      })\n      const file = blobToFile(data, filename)\n      const thumb = await resizeFile(file)\n      Storage.put(image.filename, file, {\n        progressCallback: (progress: any) => {\n          console.log(`Uploaded: ${progress.loaded}/${progress.total}`)\n        },\n        level: 'private',\n        contentType: image.mimeType,\n      })\n      const stored: any = await Storage.put(filename, thumb, {\n        contentType: file.type,\n        ACL: 'public-read',\n      })\n      return stored.key\n    })\n  )\n  return keys\n}\n\nexport async function s3UploadImages(files: File[]) {\n  const keys = await Promise.all(\n    files?.map(async (file) => {\n      const filename = `${Date.now()}-${file.name}`\n      const thumb = await resizeFile(file)\n      Storage.put(file.name, file, {\n        progressCallback: (progress: any) => {\n          console.log(`Uploaded: ${progress.loaded}/${progress.total}`)\n        },\n        level: 'private',\n        contentType: file.type,\n      })\n      const stored: any = await Storage.put(filename, thumb, {\n        contentType: file.type,\n        ACL: 'public-read',\n      })\n      return stored.key\n    })\n  )\n  return keys\n}\n\nexport async function s3Delete(filename: string) {\n  const isDeleted = await Storage.remove(filename)\n  await Storage.remove(filename, {\n    level: 'private',\n  })\n\n  return isDeleted\n}\n\nexport async function s3DeleteMulti(files: any[]) {\n  const isAllDeleted = await Promise.all(\n    files?.filter(async (image: any) => {\n      const isDeleted = await Storage.remove(image)\n      await Storage.remove(image, {\n        level: 'private',\n      })\n      return isDeleted\n    })\n  )\n\n  return isAllDeleted\n}\n\nexport const resizeFile = (file: File) =>\n  new Promise((resolve) => {\n    Resizer.imageFileResizer(\n      file,\n      500,\n      500,\n      'PNG',\n      80,\n      0,\n      (uri) => {\n        resolve(uri)\n      },\n      'file'\n    )\n  })\n","/home/project/photobook/photobook_front/src/pages/editor/components/utils/editor/index.ts",["663","664","665","666","667"],"/* eslint-disable lines-between-class-members */\nimport {\n  CollisionObject,\n  Container,\n  DomType,\n  FeatureType,\n  FullLayout,\n  HistoryProps,\n  Image,\n  LayoutObject,\n  LayoutsInterface,\n  ObjectType,\n  OElement,\n  PObject,\n  Size,\n} from 'interfaces'\nimport { v4 as uuidv4 } from 'uuid'\nimport lodash from 'lodash'\nimport { ADD_LAYOUT, UPDATE_GROUP_CONTAINER, UPDATE_OBJECT } from 'redux/actions/types'\nimport { arraysEqual, debounce, getRotationScaler, ParseNumber } from 'utils'\nimport {\n  centerToTL,\n  degToRadian,\n  diffRect,\n  getAngle,\n  getLength,\n  getNewStyle,\n  layoutPositionsToImage,\n  layoutPositionsToText,\n  tLToCenter,\n} from 'utils/transformer-lib'\n\ninterface Props {\n  setTextObjectIndex: (index: number) => void\n  setObjectIndex: (index: number) => void\n  setOverflow: (overflow: string) => void\n  setIsTextEditing: (text: boolean) => void\n  setGroupObjects?: (object: any) => void\n  setGroupStyles?: (object: any) => void\n  setObjectType: (object: ObjectType) => void\n  updateGroupContainer: (props: { containers: Container[] }) => void\n  updateObject: (props: { object: PObject }) => void\n  loadBackgrounds?: (backgrounds: Object[]) => void\n  updateHistory: (historyType: string, props: HistoryProps) => void\n  addLayout?: (props: { objects: Object[]; layout: FullLayout }) => void\n  addObject: (props: { object: Object }) => void\n  removeObject: (props: { object: Object; container: Object }) => void\n  setObject: (object: any) => void\n  scaledContainerRef: any\n  slideContainerRef?: any\n  groupRef: any\n  canvasRef: any\n  selectionRef: any\n  slideViewRef: any\n  slideHeight: number\n  slideWidth: number\n  overflow: string\n  scale: number\n  magnetX?: any\n  magnetY?: any\n  double?: boolean\n  _objectType?: ObjectType\n  _border?: number\n  _treshhold?: number\n  _isTextEditing: boolean\n  _groupObjects: any\n  _object?: any\n  _groupStyles: any\n}\nexport default class Editor {\n  _threshhold = 30\n  _border = 0\n  _rotaterDistance = 30\n  _rotateAngle = 0\n  _isMouseDown = false\n  _isCtrlDown = false\n  _isShiftDown = false\n  _groupStyles: any\n  _objectType?: ObjectType\n  _object: any\n  objects?: PObject[]\n  groupRef: any\n  canvasRef: any\n  selectionRef: any\n  slideViewRef: any\n  slideContainerRef?: any\n  scaledContainerRef: any\n  transformers: any = {\n    n: 't',\n    s: 'b',\n    e: 'r',\n    w: 'l',\n    ne: 'tr',\n    nw: 'tl',\n    se: 'br',\n    sw: 'bl',\n  }\n  // Index\n  setTextObjectIndex: any\n  setGroupStyles: any\n  slideHeight: number\n  slideWidth: number\n  _index?: number\n  setObjectIndex: any\n\n  scale: number\n\n  _groupObjects: any\n  setGroupObjects: any\n\n  removeObject: any\n  addObject: any\n\n  updateGroupContainer: any\n\n  overflow: string\n  setOverflow: any\n\n  _isTextEditing: boolean\n  setIsTextEditing: any\n\n  setObjectType: any\n\n  setObject: any\n  updateObject: any\n  // Functions History\n  updateHistory: any\n  // Functions Layout\n  addLayout?: any\n  magnetX: any\n  magnetY: any\n  double = false\n\n  constructor(props: Props) {\n    this.setTextObjectIndex = props.setTextObjectIndex\n    this.updateHistory = props.updateHistory\n    this.updateObject = props.updateObject\n    this.addLayout = props.addLayout\n    this._isTextEditing = props._isTextEditing\n    this.setIsTextEditing = props.setIsTextEditing\n    this.scale = props.scale\n    this.setGroupObjects = props.setGroupObjects\n    this.updateGroupContainer = props.updateGroupContainer\n    this.slideViewRef = props.slideViewRef\n    this.scaledContainerRef = props.scaledContainerRef\n    this._groupStyles = props._groupStyles\n    if (props._objectType) this._objectType = props._objectType\n    this.overflow = props.overflow\n    if (props.slideContainerRef) {\n      this.slideContainerRef = props.slideContainerRef\n    }\n    if (props._object) {\n      this._object = props._object\n    }\n    if (props._treshhold) {\n      this._threshhold = props._treshhold\n    }\n    if (props._border) {\n      this._border = props._border\n    }\n    this.setOverflow = props.setOverflow\n    this.removeObject = props.removeObject\n    this.setObjectType = props.setObjectType\n    this.addObject = props.addObject\n    this.setObject = props.setObject\n    this.setObjectIndex = props.setObjectIndex\n    this.canvasRef = props.canvasRef\n    this.slideWidth = props.slideWidth\n    this.slideHeight = props.slideHeight\n    this.selectionRef = props.selectionRef\n    this.setGroupStyles = props.setGroupStyles\n    this.magnetX = props.magnetX\n    this.magnetY = props.magnetY\n    if (props.double !== undefined) {\n      this.double = props.double\n    }\n    this.magnetX = document.getElementById('magnetX')\n    this.magnetY = document.getElementById('magnetY')\n  }\n\n  // #region [LayoutMethods]\n  public changeLayout = (\n    objects: Container[],\n    layout: FullLayout,\n    layouts: LayoutsInterface[],\n    align: string,\n    type: string\n  ) => {\n    if (type === 'less') {\n      if (align === 'left') {\n        const leftObjects = objects.filter((o: any) => o.style.left < this.slideWidth / 2)\n        const rightObjects = objects.filter((o: any) => !leftObjects.includes(o))\n\n        let { count, index } = layout.left\n        if (count === -1) count = 0\n        index = 0\n        count -= 1\n        const [nextLayout] = layouts.filter((l: any) => l.count === count)\n\n        const nextObjects = nextLayout.layouts[index]\n\n        const layoutObjects: any = []\n\n        nextObjects.objects?.forEach((o: any, i: number) => {\n          const leftObject: any = leftObjects[i]\n\n          const style = {\n            top: (this.slideHeight * o.top) / 100,\n            left: ((this.slideWidth / 2) * o.left) / 100,\n            width: ((this.slideWidth / 2) * o.width) / 100,\n            height: (this.slideHeight * o.height) / 100,\n            rotateAngle: 0,\n            transform: '',\n            zIndex: 100 + i + '',\n          }\n\n          if (leftObject) {\n            layoutObjects.push({\n              ...leftObject,\n              style,\n            })\n          } else {\n            layoutObjects.push(layoutPositionsToImage(style))\n          }\n        })\n\n        this.addLayout({\n          objects: [...rightObjects, ...layoutObjects],\n          layout: {\n            ...layout,\n            left: {\n              count,\n              index,\n            },\n          },\n        })\n        this.updateHistory(ADD_LAYOUT, {\n          objects,\n          layout,\n        })\n      } else {\n        const rightObjects = objects.filter((o: any) => o.style.left >= this.slideWidth / 2)\n        const leftObjects = objects.filter((o: any) => !rightObjects.includes(o))\n\n        let { count, index } = layout.right\n        if (count === -1) count = 0\n        index = 0\n        count -= 1\n        const [nextLayout] = layouts.filter((l: any) => l.count === count)\n\n        const nextObjects = nextLayout.layouts[index]\n\n        const layoutObjects: any = []\n\n        nextObjects.objects?.forEach((o: any, i: number) => {\n          const rightObject: any = rightObjects[i]\n\n          const style = {\n            top: (this.slideHeight * o.top) / 100,\n            left: this.slideWidth / 2 + ((this.slideWidth / 2) * o.left) / 100,\n            width: ((this.slideWidth / 2) * o.width) / 100,\n            height: (this.slideHeight * o.height) / 100,\n            rotateAngle: 0,\n            transform: '',\n            zIndex: 100 + i + '',\n          }\n\n          if (rightObject) {\n            layoutObjects.push({\n              ...rightObject,\n              style,\n            })\n          } else {\n            layoutObjects.push(layoutPositionsToImage(style))\n          }\n        })\n\n        this.addLayout({\n          objects: [...leftObjects, ...layoutObjects],\n          layout: {\n            ...layout,\n            right: {\n              count,\n              index,\n            },\n          },\n        })\n        this.updateHistory(ADD_LAYOUT, {\n          objects,\n          layout,\n        })\n      }\n    } else if (type === 'more') {\n      if (align === 'left') {\n        const leftObjects = objects.filter((o: any) => o.style.left < this.slideWidth / 2)\n        const rightObjects = objects.filter((o: any) => !leftObjects.includes(o))\n\n        let { count, index } = layout.left\n        if (count === -1) count = 0\n        index = 0\n        count += 1\n        const [nextLayout] = layouts.filter((l: any) => l.count === count)\n\n        const nextObjects = nextLayout.layouts[index]\n\n        const layoutObjects: any = []\n\n        nextObjects.objects?.forEach((o: any, i: number) => {\n          const leftObject: any = leftObjects[i]\n\n          const style = {\n            top: (this.slideHeight * o.top) / 100,\n            left: ((this.slideWidth / 2) * o.left) / 100,\n            width: ((this.slideWidth / 2) * o.width) / 100,\n            height: (this.slideHeight * o.height) / 100,\n            rotateAngle: 0,\n            transform: '',\n            zIndex: 100 + i + '',\n          }\n\n          if (leftObject) {\n            layoutObjects.push({\n              ...leftObject,\n              style,\n            })\n          } else {\n            layoutObjects.push(layoutPositionsToImage(style))\n          }\n        })\n\n        this.addLayout({\n          objects: [...rightObjects, ...layoutObjects],\n          layout: {\n            ...layout,\n            left: {\n              count,\n              index,\n            },\n          },\n        })\n        this.updateHistory(ADD_LAYOUT, {\n          objects,\n          layout,\n        })\n      } else {\n        const rightObjects = objects.filter((o: any) => o.style.left >= this.slideWidth / 2)\n        const leftObjects = objects.filter((o: any) => !rightObjects.includes(o))\n\n        let { count, index } = layout.right\n        if (count === -1) count = 0\n        index = 0\n        count += 1\n        const [nextLayout] = layouts.filter((l: any) => l.count === count)\n\n        const nextObjects = nextLayout.layouts[index]\n\n        const layoutObjects: any = []\n\n        nextObjects.objects?.forEach((o: any, i: number) => {\n          const rightObject: any = rightObjects[i]\n\n          const style = {\n            top: (this.slideHeight * o.top) / 100,\n            left: this.slideWidth / 2 + ((this.slideWidth / 2) * o.left) / 100,\n            width: ((this.slideWidth / 2) * o.width) / 100,\n            height: (this.slideHeight * o.height) / 100,\n            rotateAngle: 0,\n            transform: '',\n            zIndex: 100 + i + '',\n          }\n\n          if (rightObject) {\n            layoutObjects.push({\n              ...rightObject,\n              style,\n            })\n          } else {\n            layoutObjects.push(layoutPositionsToImage(style))\n          }\n        })\n\n        this.addLayout({\n          objects: [...leftObjects, ...layoutObjects],\n          layout: {\n            ...layout,\n            right: {\n              count,\n              index,\n            },\n          },\n        })\n        this.updateHistory(ADD_LAYOUT, {\n          objects,\n          layout,\n        })\n      }\n    } else if (type === 'shuffle') {\n      if (align === 'left') {\n        const leftObjects = objects.filter((o: any) => o.style.left < this.slideWidth / 2)\n        const rightObjects = objects.filter((o: any) => !leftObjects.includes(o))\n\n        const { count } = layout.left\n        let { index } = layout.left\n        index += 1\n\n        const [nextLayout] = layouts.filter((l: any) => l.count === count)\n        if (nextLayout.layouts.length === index) index = 0\n        const nextObjects = nextLayout.layouts[index]\n\n        const layoutObjects: any = []\n        nextObjects.objects?.forEach((o: any, i: number) => {\n          const leftObject: any = leftObjects[i]\n\n          const style = {\n            top: (this.slideHeight * o.top) / 100,\n            left: ((this.slideWidth / 2) * o.left) / 100,\n            width: ((this.slideWidth / 2) * o.width) / 100,\n            height: (this.slideHeight * o.height) / 100,\n            rotateAngle: 0,\n            transform: '',\n            zIndex: 100 + i + '',\n          }\n\n          if (leftObject) {\n            layoutObjects.push({\n              ...leftObject,\n              style,\n            })\n          } else {\n            layoutObjects.push(layoutPositionsToImage(style))\n          }\n        })\n\n        this.addLayout({\n          objects: [...rightObjects, ...layoutObjects],\n          layout: {\n            ...layout,\n            left: {\n              count,\n              index,\n            },\n          },\n        })\n        this.updateHistory(ADD_LAYOUT, {\n          objects,\n          layout,\n        })\n      } else {\n        const rightObjects = objects.filter((o: any) => o.style.left >= this.slideWidth / 2)\n        const leftObjects = objects.filter((o: any) => !rightObjects.includes(o))\n\n        const { count } = layout.right\n        let { index } = layout.right\n        index += 1\n\n        const [nextLayout] = layouts.filter((l: any) => l.count === count)\n        if (nextLayout.layouts.length === index) index = 0\n        const nextObjects = nextLayout.layouts[index]\n\n        const layoutObjects: any = []\n        nextObjects.objects?.forEach((o: any, i: number) => {\n          const rightObject: any = rightObjects[i]\n\n          const style = {\n            top: (this.slideHeight * o.top) / 100,\n            left: this.slideWidth / 2 + ((this.slideWidth / 2) * o.left) / 100,\n            width: ((this.slideWidth / 2) * o.width) / 100,\n            height: (this.slideHeight * o.height) / 100,\n            rotateAngle: 0,\n            transform: '',\n            zIndex: 100 + i + '',\n          }\n\n          if (rightObject) {\n            layoutObjects.push({\n              ...rightObject,\n              style,\n            })\n          } else {\n            layoutObjects.push(layoutPositionsToImage(style))\n          }\n        })\n\n        this.addLayout({\n          objects: [...leftObjects, ...layoutObjects],\n          layout: {\n            ...layout,\n            right: {\n              count,\n              index,\n            },\n          },\n        })\n        this.updateHistory(ADD_LAYOUT, {\n          objects,\n          layout,\n        })\n      }\n    }\n  }\n  public changeLayoutSingle = (\n    objects: Container[],\n    layout: FullLayout,\n    layouts: LayoutsInterface[],\n    align: string,\n    type: string\n  ) => {\n    if (type === 'less') {\n      const leftObjects = objects.filter((o: any) => o.style.left < this.slideWidth)\n      const rightObjects = objects.filter((o: any) => !leftObjects.includes(o))\n\n      let { count, index } = layout.left\n      if (count === -1) count = 0\n      index = 0\n      count -= 1\n      const [nextLayout] = layouts.filter((l: any) => l.count === count)\n\n      const nextObjects = nextLayout.layouts[index]\n\n      const layoutObjects: any = []\n\n      nextObjects.objects?.forEach((o: any, i: number) => {\n        const leftObject: any = leftObjects[i]\n\n        const style = {\n          top: (this.slideHeight * o.top) / 100,\n          left: (this.slideWidth * o.left) / 100,\n          width: (this.slideWidth * o.width) / 100,\n          height: (this.slideHeight * o.height) / 100,\n          rotateAngle: 0,\n          transform: '',\n          zIndex: 100 + i + '',\n        }\n\n        if (leftObject) {\n          layoutObjects.push({\n            ...leftObject,\n            style,\n          })\n        } else {\n          layoutObjects.push(layoutPositionsToImage(style))\n        }\n      })\n\n      this.addLayout({\n        objects: [...rightObjects, ...layoutObjects],\n        layout: {\n          ...layout,\n          left: {\n            count,\n            index,\n          },\n        },\n      })\n      this.updateHistory(ADD_LAYOUT, {\n        objects,\n        layout,\n      })\n    } else if (type === 'more') {\n      const leftObjects = objects.filter((o: any) => o.style.left < this.slideWidth)\n      const rightObjects = objects.filter((o: any) => !leftObjects.includes(o))\n\n      let { count, index } = layout.left\n      if (count === -1) count = 0\n      index = 0\n      count += 1\n      const [nextLayout] = layouts.filter((l: any) => l.count === count)\n\n      const nextObjects = nextLayout.layouts[index]\n\n      const layoutObjects: any = []\n\n      nextObjects.objects?.forEach((o: any, i: number) => {\n        const leftObject: any = leftObjects[i]\n\n        const style = {\n          top: (this.slideHeight * o.top) / 100,\n          left: (this.slideWidth * o.left) / 100,\n          width: (this.slideWidth * o.width) / 100,\n          height: (this.slideHeight * o.height) / 100,\n          rotateAngle: 0,\n          transform: '',\n          zIndex: 100 + i + '',\n        }\n\n        if (leftObject) {\n          layoutObjects.push({\n            ...leftObject,\n            style,\n          })\n        } else {\n          layoutObjects.push(layoutPositionsToImage(style))\n        }\n      })\n\n      this.addLayout({\n        objects: [...rightObjects, ...layoutObjects],\n        layout: {\n          ...layout,\n          left: {\n            count,\n            index,\n          },\n        },\n      })\n      this.updateHistory(ADD_LAYOUT, {\n        objects,\n        layout,\n      })\n    } else if (type === 'shuffle') {\n      if (align === 'left') {\n        const leftObjects = objects.filter((o: any) => o.style.left < this.slideWidth / 2)\n        const rightObjects = objects.filter((o: any) => !leftObjects.includes(o))\n\n        const { count } = layout.left\n        let { index } = layout.left\n        index += 1\n\n        const [nextLayout] = layouts.filter((l: any) => l.count === count)\n        if (nextLayout.layouts.length === index) index = 0\n        const nextObjects = nextLayout.layouts[index]\n\n        const layoutObjects: any = []\n        nextObjects.objects?.forEach((o: any, i: number) => {\n          const leftObject: any = leftObjects[i]\n\n          const style = {\n            top: (this.slideHeight * o.top) / 100,\n            left: ((this.slideWidth / 2) * o.left) / 100,\n            width: ((this.slideWidth / 2) * o.width) / 100,\n            height: (this.slideHeight * o.height) / 100,\n            rotateAngle: 0,\n            transform: '',\n            zIndex: 100 + i + '',\n          }\n\n          if (leftObject) {\n            layoutObjects.push({\n              ...leftObject,\n              style,\n            })\n          } else {\n            layoutObjects.push(layoutPositionsToImage(style))\n          }\n        })\n\n        this.addLayout({\n          objects: [...rightObjects, ...layoutObjects],\n          layout: {\n            ...layout,\n            left: {\n              count,\n              index,\n            },\n          },\n        })\n        this.updateHistory(ADD_LAYOUT, {\n          objects,\n          layout,\n        })\n      } else {\n        const rightObjects = objects.filter((o: any) => o.style.left >= this.slideWidth / 2)\n        const leftObjects = objects.filter((o: any) => !rightObjects.includes(o))\n\n        const { count } = layout.right\n        let { index } = layout.right\n        index += 1\n\n        const [nextLayout] = layouts.filter((l: any) => l.count === count)\n        if (nextLayout.layouts.length === index) index = 0\n        const nextObjects = nextLayout.layouts[index]\n\n        const layoutObjects: any = []\n        nextObjects.objects?.forEach((o: any, i: number) => {\n          const rightObject: any = rightObjects[i]\n\n          const style = {\n            top: (this.slideHeight * o.top) / 100,\n            left: this.slideWidth / 2 + ((this.slideWidth / 2) * o.left) / 100,\n            width: ((this.slideWidth / 2) * o.width) / 100,\n            height: (this.slideHeight * o.height) / 100,\n            rotateAngle: 0,\n            transform: '',\n            zIndex: 100 + i + '',\n          }\n\n          if (rightObject) {\n            layoutObjects.push({\n              ...rightObject,\n              style,\n            })\n          } else {\n            layoutObjects.push(layoutPositionsToImage(style))\n          }\n        })\n\n        this.addLayout({\n          objects: [...leftObjects, ...layoutObjects],\n          layout: {\n            ...layout,\n            right: {\n              count,\n              index,\n            },\n          },\n        })\n        this.updateHistory(ADD_LAYOUT, {\n          objects,\n          layout,\n        })\n      }\n    }\n  }\n  public layoutDragOver = (e: any) => {\n    if (e.target.classList.contains('layout-drop')) {\n      e.target.style.border = '3px solid #333'\n    }\n  }\n  public layoutDragLeave = (e: any) => {\n    if (e.target.classList.contains('layout-drop')) {\n      e.target.style.border = 'none'\n    }\n  }\n  public layoutDragDrop = (e: any, objects: PObject[], layout: FullLayout) => {\n    e.preventDefault()\n\n    const layoutDrop = e.target\n    const _width = this.slideWidth - 20\n    const _height = this.slideHeight - 20\n    if (layoutDrop.classList.contains('layout-drop-left')) {\n      const layoutData = JSON.parse(e.dataTransfer.getData('layout'))\n      const { count, index } = layoutData\n      const layoutObjects: any = []\n\n      const leftObjects: any = objects.filter((o: any) => o.style.left < this.slideWidth / 2)\n\n      layoutData.objects.forEach((o: LayoutObject, i: number) => {\n        const leftObject: any = leftObjects[i]\n\n        const style = {\n          top: (_height * o.top) / 100,\n          left: ((_width / 2) * o.left) / 100,\n          width: ((_width / 2) * o.width) / 100,\n          height: (_height * o.height) / 100,\n          rotateAngle: 0,\n          transform: '',\n          zIndex: 100 + i + '',\n        }\n        if (leftObject && o.className === leftObject?.props?.className) {\n          layoutObjects.push({\n            ...leftObject,\n            style,\n          })\n        } else if (o.className && o.className.includes('text-container')) {\n          layoutObjects.push(layoutPositionsToText(style))\n        } else {\n          layoutObjects.push(layoutPositionsToImage(style))\n        }\n      })\n\n      this.addLayout({\n        objects: [...objects.filter((o: any) => o.style.left >= this.slideWidth / 2), ...layoutObjects],\n        layout: {\n          ...layout,\n          left: {\n            count,\n            index,\n          },\n        },\n      })\n      this.updateHistory(ADD_LAYOUT, { objects, layout })\n    } else if (layoutDrop.classList.contains('layout-drop-right')) {\n      const layoutData = JSON.parse(e.dataTransfer.getData('layout'))\n      const { count, index } = layoutData\n      const layoutObjects: any = []\n      layoutData.objects.forEach((o: any, i: number) => {\n        const style = {\n          top: (_height * o.top) / 100,\n          left: _width / 2 + ((_width / 2) * o.left) / 100,\n          width: ((_width / 2) * o.width) / 100,\n          height: (_height * o.height) / 100,\n          rotateAngle: 0,\n          transform: '',\n          zIndex: 100 + i + '',\n        }\n        if (o.className && o.className.includes('text-container')) {\n          layoutObjects.push(layoutPositionsToText(style))\n        } else {\n          layoutObjects.push(layoutPositionsToImage(style))\n        }\n      })\n\n      this.addLayout({\n        objects: [...objects.filter((o: any) => o.style.left < this.slideWidth / 2), ...layoutObjects],\n        layout: {\n          ...layout,\n          right: {\n            count,\n            index,\n          },\n        },\n      })\n      this.updateHistory(ADD_LAYOUT, { objects })\n    } else if (\n      layoutDrop.classList.contains('layout-drop-middle') ||\n      layoutDrop.classList.contains('layout-drop-full')\n    ) {\n      const layoutData = JSON.parse(e.dataTransfer.getData('layout'))\n      const { count, index } = layoutData\n      const layoutObjects: any = []\n\n      layoutData.objects.forEach((o: any, i: number) => {\n        const style = {\n          top: (_height * o.top) / 100,\n          left: (_width * o.left) / 100,\n          width: (_width * o.width) / 100,\n          height: (_height * o.height) / 100,\n          rotateAngle: 0,\n          transform: '',\n          zIndex: 100 + i + '',\n        }\n        if (o.className && o.className.includes('text-container')) {\n          layoutObjects.push(layoutPositionsToText(style))\n        } else {\n          layoutObjects.push(layoutPositionsToImage(style))\n        }\n      })\n\n      this.addLayout({\n        objects: layoutObjects,\n        layout: {\n          ...layout,\n          right: {\n            count,\n            index,\n          },\n        },\n      })\n      this.updateHistory(ADD_LAYOUT, { objects })\n    }\n  }\n  // #endregion [LayoutMethods]\n  // #region [TextMethods]\n  public getCurrentText = (textContainer: HTMLElement) => {\n    const text = textContainer.childNodes[2] as HTMLElement\n\n    const texts: any = []\n    text.childNodes.forEach((t: any) => {\n      if (t.textContent) texts.push(t.textContent)\n      else texts.push('\\n')\n    })\n\n    return texts\n  }\n  public createText = (objects: PObject[]) => {\n    this.hideToolbar()\n    const style = {\n      top: 100,\n      left: 100,\n      width: 300,\n      height: 80,\n      rotateAngle: 0,\n      transform: '',\n      zIndex: 100 + objects.length + '',\n    }\n\n    const textStyle = {\n      color: '#333',\n    }\n\n    const autogrowStyle = {\n      height: '80px',\n    }\n\n    this.addObject({\n      object: {\n        id: uuidv4(),\n        className: 'object',\n        style,\n        props: {\n          textStyle,\n          autogrowStyle,\n          className: 'text-container',\n          style: { transform: 'scaleX(1)' },\n          texts: ['Enter text here'],\n          placeholderStyle: { opacity: 1 },\n        },\n      },\n    })\n    this.setObjectType('text')\n  }\n  public updateTextObject = (objects: PObject[], _textObjectIndex: number) => {\n    const textContainer: any = this._object.firstChild\n    if (!textContainer.classList.contains('text-container')) return\n    const texts = this.getCurrentText(textContainer)\n\n    const autogrow = textContainer.childNodes[1] as HTMLElement\n    const { height: autogrowHeight } = getComputedStyle(autogrow)\n    const { style, props } = objects[_textObjectIndex]\n\n    if (arraysEqual(props.texts || [], texts)) {\n      this.setTextObjectIndex(-1)\n      return\n    }\n\n    this.updateObject({\n      object: {\n        ...[_textObjectIndex],\n        style: {\n          ...style,\n          height: parseFloat(autogrowHeight),\n        },\n        props: {\n          ...props,\n          autogrowStyle: {\n            ...props.autogrowStyle,\n            height: autogrowHeight,\n          },\n          texts,\n        },\n      },\n    })\n\n    this.updateHistory(UPDATE_OBJECT, { object: objects[_textObjectIndex] })\n\n    this.setTextObjectIndex(-1)\n  }\n  public updateText = (_index: number, objects: PObject[], e?: any) => {\n    if (_index === -1) return\n    // 8 is backspace\n    if (e && e.key && e.keyCode !== 8) {\n      if (e.keyCode === 16) {\n        this._isShiftDown = true\n        return\n      }\n      if (e.keyCode === 17) {\n        this._isCtrlDown = true\n        return\n      }\n      if (e.key.length > 1) return\n      if (!/[a-zA-Z0-9]/.test(e.key[0])) return\n      if (this._isShiftDown || this._isCtrlDown) return\n    }\n\n    const textContainer: any = this._object.firstChild\n    if (!textContainer.classList.contains('text-container')) return\n    const autogrow = textContainer.childNodes[1] // because 0 index is the border\n    const text = textContainer.childNodes[2] as HTMLElement\n\n    const { left, height } = getComputedStyle(text)\n    const { height: autogrowHeight } = getComputedStyle(autogrow)\n    const kPadding = parseFloat(left)\n    const textHeight = parseFloat(height)\n\n    if (textHeight !== parseFloat(autogrowHeight) - kPadding * 2) {\n      const newHeight = textHeight + kPadding * 2\n      const angle = objects[_index].style.rotateAngle\n\n      this._object.style.height = newHeight + 'px'\n      autogrow.style.height = newHeight + 'px'\n\n      this.moveResizers({ angle })\n    }\n  }\n  public updateCurrentTextObject = (_index: number, objects: PObject[]) => {\n    const textContainer: any = this._object.firstChild\n    if (!textContainer.classList.contains('text-container')) return\n    const texts = this.getCurrentText(textContainer)\n\n    const autogrow = textContainer.childNodes[1] as HTMLElement\n    const { height: autogrowHeight } = getComputedStyle(autogrow)\n    const { style, props } = objects[_index]\n\n    this.updateObject({\n      object: {\n        ...objects[_index],\n        style: {\n          ...style,\n          height: parseFloat(autogrowHeight),\n        },\n        props: {\n          ...props,\n          autogrowStyle: {\n            height: autogrowHeight,\n          },\n          texts,\n        },\n      },\n    })\n\n    this.updateHistory(UPDATE_OBJECT, {\n      object: objects[_index],\n    })\n  }\n  public rotateTextResizers = (rotateAngle: number) => {\n    const resizers: any = document.querySelectorAll('.resize')\n    resizers.forEach((r: HTMLElement) => {\n      r.style.transform = `rotateZ(${rotateAngle}deg)`\n    })\n  }\n  // #endregion [TextMethods]\n  // #region [ObjectMethods]\n  public onObjectDoubleClick = (e: any, o: any, index: any) => {\n    const child = e.target.firstChild\n    if (child && child.classList && child.classList.contains('text-container')) {\n      this.setIsTextEditing(true)\n      this.setObjectIndex(index)\n      child.style.pointerEvents = 'auto'\n      child.style.cursor = 'text'\n      child.childNodes[2].contentEditable = true\n    }\n  }\n  public onObjectDragOver = (e: any) => {\n    e.preventDefault()\n  }\n  public onDragObjectOver = (e: any) => {\n    e.stopPropagation()\n    e.preventDefault()\n    if (e.target.classList.contains('object') && e.target.childNodes[0].className === 'image-placeholder') {\n      e.target.style.border = '3px dashed #00d9e1'\n    }\n  }\n  public onDragObjectLeave = (e: any, _index: number) => {\n    if (_index && e.target.classList.contains('object') && e.target.childNodes[0].className === 'image-placeholder') {\n      e.target.style.border = 'none'\n    }\n  }\n  public objectHoverOff = (e: any, index: number, _index: number) => {\n    if (index !== _index && !this._isMouseDown) {\n      this.hideBorder(e.target)\n      this.setOverflow('hidden')\n    }\n  }\n  public objectHover = (e: any, index: number, _index: number) => {\n    if (index !== _index && !this._isMouseDown) {\n      this.showBorder(e.target)\n    }\n  }\n  public updateObjectStyle = (o: any, object?: any) => {\n    if (!object) object = document.getElementById(o.id)\n\n    const { top, left, width, height, zIndex } = getComputedStyle(object)\n    const { transform } = object.style\n    const rotateAngle = getRotationScaler(transform)\n\n    const newObject = {\n      ...o,\n      style: {\n        ...o.style,\n        top,\n        left,\n        width,\n        height,\n        zIndex,\n        rotateAngle,\n        transform,\n      },\n    }\n    if (JSON.stringify(newObject) !== JSON.stringify(o)) {\n      console.log('before')\n      console.log(o)\n\n      console.log('after')\n      console.log(newObject)\n\n      this.updateObject({ object: newObject })\n      this.updateHistory(UPDATE_OBJECT, { object: o })\n    }\n  }\n  public onRemoveImageFromObject = (_index: number, objects: PObject[], _objectType?: ObjectType) => {\n    if (_objectType !== 'image' || _index === -1) return\n\n    const newObject: PObject = {\n      ...objects[_index],\n      props: {\n        style: { transform: 'scaleX(1)' },\n        className: 'image-placeholder',\n        imageStyle: { display: 'none', top: 0, left: 0, width: '100%' },\n        placeholderStyle: { opacity: '0.5', backgroundColor: '#737373' },\n      },\n    }\n\n    this.updateObject({ object: newObject })\n    this.updateHistory(UPDATE_OBJECT, { object: objects[_index] })\n  }\n  public onRemoveObject = (containers: Container[], objects: PObject[], _index: number) => {\n    if (_index > -1) {\n      this.removeObject({\n        container: containers[_index],\n        object: objects[_index],\n      })\n      this.deSelectObject()\n    }\n  }\n  public deSelectObject = () => {\n    this.setObjectIndex(-1)\n    this.hideResizer()\n    this.hideToolbar()\n    this.hideActiveBorder()\n    this.hideGroupSelection()\n  }\n  public startDrag = (e: any, o: any, index: number, objects?: PObject[]) => {\n    if (objects) {\n      this.objects = objects\n    }\n    if (this._isTextEditing && e.target.nodeName === 'P') return\n    if (e.target.classList.contains('image-center')) return\n    const object = document.getElementById(o.id) as HTMLDivElement\n    this.magnetX = document.getElementById('magnetX')\n    this.magnetY = document.getElementById('magnetY')\n    if (this._object) this.hideImageCircle(this._object)\n    const objectType = this.getObjectType(e.target.firstChild?.classList)\n    this.setObjectType(objectType)\n    let startX = e.clientX / this.scale\n    let startY = e.clientY / this.scale\n    this.hideBorder(e.target)\n    this._object = object\n    this.setObjectIndex(index)\n    this._index = index\n    this.setObject(object)\n    this.showImageCircle(e.target, objectType)\n\n    this._isMouseDown = true\n    this._rotateAngle = o.style.rotateAngle || 0\n\n    if (objectType === 'text') this.rotateTextResizers(this._rotateAngle)\n\n    this.moveResizers({ object, angle: this._rotateAngle, objectType })\n    this._objectType = objectType\n\n    const onMouseMove = (sube: any) => {\n      if (!this._isMouseDown) return\n      sube.stopImmediatePropagation()\n      const clientX = sube.clientX / this.scale\n      const clientY = sube.clientY / this.scale\n      const deltaX = clientX - startX\n      const deltaY = clientY - startY\n      this.onDrag(deltaX, deltaY, object, objectType)\n      startX = clientX\n      startY = clientY\n    }\n\n    const onMouseUp = () => {\n      window.removeEventListener('mousemove', onMouseMove)\n      window.removeEventListener('mouseup', onMouseUp)\n      if (!this._isMouseDown) return\n      this._isMouseDown = false\n      const { top, left, width, height } = getComputedStyle(object)\n\n      const t = parseFloat(top)\n      const l = parseFloat(left)\n      const w = parseFloat(width)\n      const h = parseFloat(height)\n\n      this.moveCollisionObject(object, objectType, { t, l, w, h })\n      if (index > -1) {\n        this.updateObjectStyle(o, object)\n      }\n      setTimeout(() => {\n        this.magnetX.style.display = 'none'\n        this.magnetY.style.display = 'none'\n      }, 300)\n    }\n\n    window.addEventListener('mousemove', onMouseMove)\n    window.addEventListener('mouseup', onMouseUp)\n  }\n  public onDrag = (deltaX: number, deltaY: number, object: any, objectType: string) => {\n    const { top, left, width, height } = getComputedStyle(object)\n\n    const t = parseFloat(top)\n    const l = parseFloat(left)\n    const w = parseFloat(width)\n    const h = parseFloat(height)\n\n    object.style.top = t + deltaY + 'px'\n    object.style.left = l + deltaX + 'px'\n    this.moveResizers({ object, objectType })\n    this.collisionDetecter(object, objectType, { t, l, w, h })\n  }\n\n  public renderLine = (isHorizontal: boolean) => {\n    if (isHorizontal) {\n      this.magnetX.style.display = 'block'\n    } else {\n      this.magnetY.style.display = 'block'\n    }\n  }\n\n  public renderLines = (\n    object: HTMLElement,\n    objectType: string,\n    move: boolean,\n    elementX: CollisionObject,\n    elementY: CollisionObject\n  ) => {\n    if (\n      !this.objects ||\n      !elementX ||\n      !elementY ||\n      (elementX.size > this._threshhold && elementY.size > this._threshhold)\n    ) {\n      this.magnetY.style.display = 'none'\n      this.magnetX.style.display = 'none'\n      return\n    }\n    if (elementX.size > this._threshhold) {\n      this.magnetX.style.display = 'none'\n    }\n    if (elementY.size > this._threshhold) {\n      this.magnetY.style.display = 'none'\n    }\n\n    let size = 0\n    if (elementX.size <= this._threshhold) {\n      switch (elementX.key) {\n        case 'tt':\n          if (elementX.index !== -1) {\n            size = ParseNumber(this.objects[elementX.index].style.top)\n          } else {\n            size = -this._border\n          }\n          this.magnetX.style.top = `${size * this.scale}px`\n          if (move) {\n            object.style.top = `${size}px`\n          }\n          break\n        case 'ty':\n          if (elementX.index !== -1) {\n            size =\n              ParseNumber(this.objects[elementX.index].style.top) +\n              ParseNumber(this.objects[elementX.index].style.height) / 2\n          } else {\n            size = ParseNumber(this.slideHeight) / 2\n          }\n          this.magnetX.style.top = `${size * this.scale}px`\n          if (move) {\n            object.style.top = `${size}px`\n          }\n          break\n        case 'bb':\n          if (elementX.index !== -1) {\n            size =\n              ParseNumber(this.objects[elementX.index].style.top) +\n              ParseNumber(this.objects[elementX.index].style.height)\n          } else {\n            size = ParseNumber(this.slideHeight)\n          }\n          this.magnetX.style.top = `${size * this.scale}px`\n          if (this._index !== undefined && move) {\n            object.style.top = `${size - ParseNumber(this.objects[this._index].style.height)}px`\n          }\n          break\n        case 'by':\n          if (elementX.index !== -1) {\n            size =\n              ParseNumber(this.objects[elementX.index].style.top) +\n              ParseNumber(this.objects[elementX.index].style.height) / 2\n          } else {\n            size = ParseNumber(this.slideHeight) / 2\n          }\n          this.magnetX.style.top = `${size * this.scale}px`\n          if (this._index !== undefined && move) {\n            object.style.top = `${size - ParseNumber(this.objects[this._index].style.height)}px`\n          }\n          break\n        case 'tb':\n          if (elementX.index !== -1) {\n            size =\n              ParseNumber(this.objects[elementX.index].style.top) +\n              ParseNumber(this.objects[elementX.index].style.height)\n          } else {\n            size = ParseNumber(this.slideHeight / 2)\n          }\n          this.magnetX.style.top = `${size * this.scale}px`\n          if (move) {\n            object.style.top = `${size}px`\n          }\n          break\n        case 'bt':\n          if (elementX.index !== -1) {\n            size = ParseNumber(this.objects[elementX.index].style.top)\n          } else {\n            size = ParseNumber(this.slideHeight / 2)\n          }\n          this.magnetX.style.top = `${size * this.scale}px`\n          if (this._index !== undefined && move) {\n            object.style.top = `${size - ParseNumber(this.objects[this._index].style.height)}px`\n          }\n          break\n        case 'yy':\n          if (elementX.index !== -1) {\n            size =\n              ParseNumber(this.objects[elementX.index].style.top) +\n              ParseNumber(this.objects[elementX.index].style.height) / 2\n          } else {\n            size = ParseNumber(this.slideHeight / 2)\n          }\n          this.magnetX.style.top = `${size * this.scale}px`\n          if (this._index !== undefined && move) {\n            object.style.top = `${size - ParseNumber(this.objects[this._index].style.height) / 2}px`\n          }\n          break\n        default:\n          break\n      }\n      this.renderLine(true)\n    }\n    if (elementY.size <= this._threshhold) {\n      switch (elementY.key) {\n        case 'rr':\n          if (elementY.index !== -1) {\n            size =\n              ParseNumber(this.objects[elementY.index].style.left) +\n              ParseNumber(this.objects[elementY.index].style.width)\n          } else {\n            size = ParseNumber(this.slideWidth) + this._border\n          }\n          this.magnetY.style.left = `${size * this.scale}px`\n          if (this._index !== undefined && move) {\n            object.style.left = `${size - ParseNumber(this.objects[this._index].style.width)}px`\n          }\n          break\n        case 'rx':\n          if (elementY.index !== -1) {\n            size =\n              ParseNumber(this.objects[elementY.index].style.left) +\n              ParseNumber(this.objects[elementY.index].style.width) / 2\n          } else {\n            size = ParseNumber(this.slideWidth) / 2 + this._border\n          }\n          this.magnetY.style.left = `${size * this.scale}px`\n          if (this._index !== undefined && move) {\n            object.style.left = `${size - ParseNumber(this.objects[this._index].style.width)}px`\n          }\n          break\n        case 'll':\n          if (elementY.index !== -1) {\n            size = ParseNumber(this.objects[elementY.index].style.left)\n          } else {\n            size = -this._border\n          }\n          this.magnetY.style.left = `${size * this.scale}px`\n          if (move) {\n            object.style.left = `${size}px`\n          }\n          break\n        case 'lx':\n          if (elementY.index !== -1) {\n            size = ParseNumber(this.objects[elementY.index].style.left) / 2\n          } else {\n            size = ParseNumber(this.slideWidth / 2)\n          }\n          this.magnetY.style.left = `${size * this.scale}px`\n          if (move) {\n            object.style.left = `${size}px`\n          }\n          break\n        case 'rl':\n          if (elementY.index !== -1) {\n            size = ParseNumber(this.objects[elementY.index].style.left)\n          } else {\n            size = ParseNumber(this.slideHeight / 2)\n          }\n          this.magnetY.style.left = `${size * this.scale}px`\n          if (this._index !== undefined && move) {\n            object.style.left = `${size - ParseNumber(this.objects[this._index].style.width)}px`\n          }\n          break\n        case 'lr':\n          if (elementY.index !== -1) {\n            size =\n              ParseNumber(this.objects[elementY.index].style.left) +\n              ParseNumber(this.objects[elementY.index].style.width)\n          } else {\n            size = ParseNumber(this.slideHeight / 2)\n          }\n          this.magnetY.style.left = `${size * this.scale}px`\n          if (move) {\n            object.style.left = `${size}px`\n          }\n          break\n        case 'xx':\n          if (elementY.index !== -1) {\n            size =\n              ParseNumber(this.objects[elementY.index].style.left) +\n              ParseNumber(this.objects[elementY.index].style.width) / 2\n          } else {\n            size = ParseNumber(this.slideHeight / 2)\n          }\n          this.magnetY.style.left = `${size * this.scale}px`\n          if (this._index !== undefined && move) {\n            object.style.left = `${size - ParseNumber(this.objects[this._index].style.width) / 2}px`\n          }\n          break\n        default:\n          break\n      }\n      this.renderLine(false)\n    }\n\n    this.moveResizers({ object, objectType })\n  }\n  public moveCollisionObject = (object: any, objectType: string, element: OElement) => {\n    if (this.objects && this._index !== undefined) {\n      const minSizes = this.objects.reduce<any[]>((asn, obj, i) => {\n        if (i === this._index) return asn\n        const { width = 0, left = 0, top = 0, height = 0 } = obj.style\n        asn.push(\n          diffRect(\n            element,\n            {\n              l: ParseNumber(left),\n              h: ParseNumber(height),\n              w: ParseNumber(width),\n              t: ParseNumber(top),\n            },\n            i\n          )\n        )\n        return asn\n      }, [])\n      minSizes.push(\n        diffRect(\n          element,\n          {\n            l: ParseNumber(this._border),\n            h: ParseNumber(this.slideHeight) - this._border,\n            w: this.double ? ParseNumber(this.slideWidth / 2 - 30) : ParseNumber(this.slideWidth) - this._border,\n            t: this._border,\n          },\n          -1\n        )\n      )\n      const [x, y] = lodash(minSizes.flat(1))\n        .groupBy('vertical')\n        .map((group) => lodash.minBy(group, 'size'))\n        .value()\n      this.renderLines(object, objectType, true, x, y)\n    }\n  }\n  public collisionDetecter = lodash.throttle((object: any, objectType: string, element: OElement) => {\n    if (this.objects && this._index !== undefined) {\n      const minSizes = this.objects.reduce<any[]>((asn, obj, i) => {\n        if (i === this._index) return asn\n        const { width = 0, left = 0, top = 0, height = 0 } = obj.style\n        asn.push(\n          diffRect(\n            element,\n            {\n              l: ParseNumber(left),\n              h: ParseNumber(height),\n              w: ParseNumber(width),\n              t: ParseNumber(top),\n            },\n            i\n          )\n        )\n        return asn\n      }, [])\n      minSizes.push(\n        diffRect(\n          element,\n          {\n            l: ParseNumber(this._border),\n            h: ParseNumber(this.slideHeight) - this._border,\n            w: this.double ? ParseNumber(this.slideWidth / 2 - 30) : ParseNumber(this.slideWidth) - this._border,\n            t: this._border,\n          },\n          -1\n        )\n      )\n      const [x, y] = lodash(minSizes.flat(1))\n        .groupBy('vertical')\n        .map((group) => lodash.minBy(group, 'size'))\n        .value()\n      console.log('aaaavaaaa', x, y)\n      this.renderLines(object, objectType, true, x, y)\n    }\n  }, 500)\n  public getObjectType = (classList: any): ObjectType => {\n    let objectType: ObjectType = ''\n    if (!classList) return 'text'\n    if (classList.contains('image-placeholder')) {\n      objectType = 'image'\n    } else if (classList.contains('shape')) {\n      objectType = 'shape'\n    } else if (classList.contains('text-container')) {\n      objectType = 'text'\n    }\n\n    return objectType\n  }\n  public createEclipse = (objects: PObject[]) => {\n    this.hideToolbar()\n    const style = {\n      top: 100,\n      left: 100,\n      width: 300,\n      height: 300,\n      rotateAngle: 0,\n      transform: '',\n      zIndex: 100 + objects.length + '',\n    }\n\n    this.addObject({\n      object: {\n        id: uuidv4(),\n        className: 'object',\n        style,\n        props: {\n          className: 'shape',\n          style: { transform: 'scaleX(1)' },\n          shapeClass: 'eclipse',\n          shapeStyle: { background: 'cyan' },\n        },\n      },\n    })\n\n    this.setObjectType('shape')\n  }\n  public createSquare = (objects: PObject[]) => {\n    this.hideToolbar()\n    const style = {\n      top: 100,\n      left: 100,\n      width: 300,\n      height: 300,\n      rotateAngle: 0,\n      transform: '',\n      zIndex: 100 + objects.length + '',\n    }\n\n    this.addObject({\n      object: {\n        id: uuidv4(),\n        className: 'object',\n        style,\n        props: {\n          className: 'shape',\n          style: { transform: 'scaleX(1)' },\n          shapeClass: 'square',\n          shapeStyle: { background: 'cyan' },\n        },\n      },\n    })\n\n    this.setObjectType('shape')\n  }\n  public createImage = (e: any, objects: PObject[]) => {\n    this.hideToolbar()\n    if (e.dataTransfer) {\n      const tempUrl = e.dataTransfer.getData('tempUrl')\n      const imageUrl: any = e.dataTransfer.getData('imageUrl')\n\n      const { x, y } = this.canvasRef.current.getBoundingClientRect()\n      const x1 = e.clientX - x\n      const y1 = e.clientY - y\n\n      const style = {\n        top: y1,\n        left: x1,\n        width: 500,\n        height: 300,\n        rotateAngle: 0,\n        transform: '',\n        zIndex: 100 + objects.length + '',\n      }\n\n      this.addObject({\n        object: {\n          id: uuidv4(),\n          className: 'object',\n          style,\n          props: {\n            imageUrl,\n            tempUrl,\n            className: 'image-placeholder',\n            imageStyle: { display: 'block', top: 0, left: 0, width: '100%' },\n            style: { transform: 'scaleX(1)' },\n            placeholderStyle: { opacity: 1 },\n          },\n        },\n      })\n    } else {\n      const style = {\n        top: 100,\n        left: 100,\n        width: 500,\n        height: 300,\n        rotateAngle: 0,\n        transform: '',\n        zIndex: 100 + objects.length + '',\n      }\n\n      this.addObject({\n        object: layoutPositionsToImage(style),\n      })\n    }\n    this.setObjectType('image')\n  }\n  public createImages = (e: any, objects: PObject[]) => {\n    this.hideToolbar()\n    if (e.dataTransfer) {\n      JSON.parse(e.dataTransfer.getData('images')).forEach((image: Image) => {\n        const { x, y } = this.canvasRef.current.getBoundingClientRect()\n        const x1 = e.clientX - x\n        const y1 = e.clientY - y\n\n        const style = {\n          top: y1,\n          left: x1,\n          width: 500,\n          height: 300,\n          rotateAngle: 0,\n          transform: '',\n          zIndex: 100 + objects.length + '',\n        }\n\n        this.addObject({\n          object: {\n            id: uuidv4(),\n            className: 'object',\n            style,\n            props: {\n              imageUrl: image.imageUrl,\n              tempUrl: image.tempUrl,\n              className: 'image-placeholder',\n              imageStyle: { display: 'block', top: 0, left: 0, width: '100%' },\n              style: { transform: 'scaleX(1)' },\n              placeholderStyle: { opacity: 1 },\n            },\n          },\n        })\n      })\n    } else {\n      const style = {\n        top: 100,\n        left: 100,\n        width: 500,\n        height: 300,\n        rotateAngle: 0,\n        transform: '',\n        zIndex: 100 + objects.length + '',\n      }\n\n      this.addObject({\n        object: layoutPositionsToImage(style),\n      })\n    }\n    this.setObjectType('image')\n  }\n  public onObjectDrop = (e: any, type: FeatureType, objects: PObject[], _index: number) => {\n    this.hideToolbar()\n    e.preventDefault()\n    if (!'images,cliparts,frames,masks'.includes(type) || this._isTextEditing) return\n\n    if (\n      e.target.classList.contains('object') &&\n      e.target.childNodes[0].className === 'image-placeholder' &&\n      !'cliparts'.includes(type)\n    ) {\n      if (_index > -1) {\n        const { top, left, width, height } = getComputedStyle(this._object)\n        const {\n          options,\n          rect: { w, h },\n        } = this.calculateCenter({ top, left, width, height }, this._rotateAngle)\n\n        const activeBorder = document.querySelector('.active-border')\n        this.showActiveBorder(activeBorder, options, w, h, this._rotateAngle)\n      }\n      if (type === 'frames') {\n        e.target.style.border = 'none'\n        const index = objects.findIndex((o: any) => o.id === e.target.id)\n\n        const newObject = {\n          ...objects[index],\n          props: {\n            ...objects[index].props,\n            frameImage: e.dataTransfer.getData('imageUrl'),\n            frameStyle: {\n              borderImageSource: `url(${e.dataTransfer.getData('tempUrl')})`,\n              borderImageSlice: 200,\n              borderImageRepeat: 'stretch',\n              borderColor: 'transparent',\n              borderWidth: '50px',\n            },\n            placeholderStyle: { opacity: '1' },\n          },\n        }\n\n        this.updateObject({ object: newObject })\n        this.updateHistory(UPDATE_OBJECT, { object: objects[index] })\n      } else if (type === 'masks') {\n        e.target.style.border = 'none'\n        const index = objects.findIndex((o: any) => o.id === e.target.id)\n\n        const newObject = {\n          ...objects[index],\n          props: {\n            ...objects[index].props,\n            maskImage: e.dataTransfer.getData('imageUrl'),\n            maskStyle: {\n              maskImage: `url(${e.dataTransfer.getData('tempUrl').replace('https', 'http')})`,\n              WebkitMaskImage: `url(${e.dataTransfer.getData('tempUrl').replace('https', 'http')})`,\n            },\n            placeholderStyle: { opacity: '1' },\n          },\n        }\n\n        this.updateObject({ object: newObject })\n        this.updateHistory(UPDATE_OBJECT, { object: objects[index] })\n      } else {\n        e.target.style.border = 'none'\n        const index = objects.findIndex((o: any) => o.id === e.target.id)\n        const images = JSON.parse(e.dataTransfer.getData('images')) as Image[]\n        const newObject = {\n          ...objects[index],\n          props: {\n            ...objects[index].props,\n            imageUrl: images[0].imageUrl,\n            tempUrl: images[0].tempUrl,\n            imageStyle: { display: 'block', top: 0, left: 0, width: '100%' },\n            placeholderStyle: { opacity: '1' },\n          },\n        }\n\n        this.updateObject({ object: newObject })\n        this.updateHistory(UPDATE_OBJECT, { object: objects[index] })\n      }\n    } else if ('cliparts'.includes(type)) {\n      this.createImage(e, objects)\n    } else if ('images'.includes(type)) {\n      this.createImages(e, objects)\n    }\n  }\n  // #endregion [ObjectMethods]\n  // #region [GroupMethods]\n  public selectionDragStart = (e: any, containers: Container[]) => {\n    let startX = e.clientX / this.scale\n    let startY = e.clientY / this.scale\n\n    this._isMouseDown = true\n\n    const onMouseMove = (sube: any) => {\n      if (!this._isMouseDown) return\n      sube.stopImmediatePropagation()\n      const clientX = sube.clientX / this.scale\n      const clientY = sube.clientY / this.scale\n      const deltaX = clientX - startX\n      const deltaY = clientY - startY\n\n      let minLeft = 0\n      let minTop = 0\n\n      Object.keys(this._groupObjects).forEach((k: string, i: number) => {\n        const { top, left } = getComputedStyle(this._groupObjects[k])\n        const t = parseFloat(top)\n        const l = parseFloat(left)\n        if (i === 0) {\n          minLeft = l\n          minTop = t\n        } else {\n          if (t < minTop) minTop = t\n          if (l < minLeft) minLeft = l\n        }\n      })\n\n      Object.keys(this._groupObjects).forEach((k: string) => {\n        const { top, left } = getComputedStyle(this._groupObjects[k])\n        const t = parseFloat(top)\n        const l = parseFloat(left)\n        this._groupObjects[k].style.top = t + deltaY + 'px'\n        this._groupObjects[k].style.left = l + deltaX + 'px'\n        this.moveResizers({\n          object: this._groupObjects[k],\n          objectType: 'group',\n          styles: {\n            ...this._groupStyles,\n            top: minTop + deltaY,\n            left: minLeft + deltaX,\n          },\n        })\n\n        this.groupRef.current.style.top = (minTop + deltaY) * this.scale + 'px'\n        this.groupRef.current.style.left = (minLeft + deltaX) * this.scale + 'px'\n      })\n\n      startX = clientX\n      startY = clientY\n    }\n\n    const onMouseUp = () => {\n      window.removeEventListener('mousemove', onMouseMove)\n      window.removeEventListener('mouseup', onMouseUp)\n      if (!this._isMouseDown) return\n      this._isMouseDown = false\n\n      const _objects = Object.keys(this._groupObjects).map((k: string) => {\n        const { top, left, width, height } = getComputedStyle(this._groupObjects[k])\n        const newContainer = {\n          ...containers[parseFloat(k)],\n          style: {\n            ...containers[parseFloat(k)].style,\n            top: parseFloat(top),\n            left: parseFloat(left),\n            width: parseFloat(width),\n            height: parseFloat(height),\n            // rotateAngle: _rotateAngle,\n            // transform: `rotateZ(${_rotateAngle}deg)`,\n          },\n        }\n        return newContainer\n      })\n\n      this.updateGroupContainer({ containers: _objects })\n      this.updateHistory(UPDATE_GROUP_CONTAINER, {\n        containers: containers.filter((c: Container) => _objects.find((x) => x.id === c.id)),\n      })\n    }\n\n    window.addEventListener('mousemove', onMouseMove)\n    window.addEventListener('mouseup', onMouseUp)\n  }\n  public hideGroupSelection = () => {\n    const groupSelection = document.querySelector('.group-selection') as HTMLElement\n\n    if (groupSelection) {\n      groupSelection.style.display = 'none'\n      groupSelection.style.top = '0'\n      groupSelection.style.left = '0'\n      groupSelection.style.width = '0'\n      groupSelection.style.height = '0'\n    }\n  }\n  public showGroupSelection = () => {\n    const groupSelection = document.querySelector('.group-selection') as HTMLElement\n    groupSelection.style.display = 'block'\n  }\n  // #endregion [GroupMethods]\n  // #region [ToolbarMethods]\n  public rotate = (angle: number) => {\n    const transform = this._object.style.transform.replace(/rotate\\(([^)]+)\\)/, `rotate(${angle}deg)`)\n    // initilly container doesn't have transform property\n    this._object.style.transform = transform || 'rotate(0deg)'\n    this._rotateAngle = angle\n    this.moveResizers()\n  }\n  public onRotate = (angle: number, startAngle: number) => {\n    let rotateAngle = Math.round(startAngle + angle)\n\n    if (rotateAngle >= 360) {\n      rotateAngle -= 360\n    } else if (rotateAngle < 0) {\n      rotateAngle += 360\n    }\n    if (rotateAngle > 356 || rotateAngle < 4) {\n      rotateAngle = 0\n    } else if (rotateAngle > 86 && rotateAngle < 94) {\n      rotateAngle = 90\n    } else if (rotateAngle > 176 && rotateAngle < 184) {\n      rotateAngle = 180\n    } else if (rotateAngle > 266 && rotateAngle < 274) {\n      rotateAngle = 270\n    }\n\n    this.rotate(rotateAngle)\n    this.rotateTextResizers(rotateAngle)\n  }\n  public startRotate = (e: any, objects: PObject[], _index: number) => {\n    if (e.button !== 0 || !this._object) return\n    const clientX = e.clientX / this.scale\n    const clientY = e.clientY / this.scale\n\n    const rect = this._object.getBoundingClientRect()\n    const { rotateAngle } = objects[_index].style\n    this._isMouseDown = true\n\n    const center = {\n      x: rect.left + rect.width / 2,\n      y: rect.top + rect.height / 2,\n    }\n    const startVector = {\n      x: clientX - center.x / this.scale,\n      y: clientY - center.y / this.scale,\n    }\n\n    const onMouseMove = (sube: any) => {\n      if (!this._isMouseDown) return\n      sube.stopImmediatePropagation()\n      const rotateVector = {\n        x: sube.clientX - center.x,\n        y: sube.clientY - center.y,\n      }\n      const angle = getAngle(startVector, rotateVector)\n      this.onRotate(angle, rotateAngle || 0)\n    }\n    const onMouseUp = () => {\n      document.removeEventListener('mousemove', onMouseMove)\n      document.removeEventListener('mouseup', onMouseUp)\n      if (!this._isMouseDown) return\n      this._isMouseDown = false\n      if (_index > -1) {\n        this.updateObjectStyle(objects[_index])\n      }\n    }\n\n    document.addEventListener('mousemove', onMouseMove)\n    document.addEventListener('mouseup', onMouseUp)\n  }\n  public getRotatedPosition = ({\n    x,\n    y,\n    cx,\n    cy,\n    theta,\n  }: {\n    x: number\n    y: number\n    cx: number\n    cy: number\n    theta: number\n  }) => {\n    if (!theta) theta = 0\n\n    // translate point to origin\n    const tempX = x - cx\n    const tempY = y - cy\n\n    // applying rotation\n    const rotatedX = tempX * Math.cos(theta) - tempY * Math.sin(theta)\n    const rotatedY = tempX * Math.sin(theta) + tempY * Math.cos(theta)\n\n    // translated back\n    x = rotatedX + cx\n    y = rotatedY + cy\n\n    return { x: x * this.scale, y: y * this.scale }\n  }\n  public onRotateLeftObject = (_index: number, objects: PObject[]) => {\n    if (_index > -1) {\n      const rotateAngle = (objects[_index]?.style.rotateAngle || 0) - 90\n      this._object.style.transform = `rotate(${rotateAngle}deg)`\n      this._rotateAngle = rotateAngle\n      this.updateObjectStyle(objects[_index])\n      this.moveResizers()\n    }\n  }\n  public onRotateRightObject = (_index: number, objects: PObject[]) => {\n    if (_index > -1) {\n      const rotateAngle = (objects[_index]?.style.rotateAngle || 0) + 90\n      this._object.style.transform = `rotate(${rotateAngle}deg)`\n      this._rotateAngle = rotateAngle\n      this.updateObjectStyle(objects[_index])\n      this.moveResizers()\n    }\n  }\n  public onFlipObject = (_index: number, objects: PObject[]) => {\n    if (_index > -1) {\n      const { props } = objects[_index]\n      let { transform = '' } = props.style\n\n      const scaleX = transform.match(/scaleX\\(([^)]+)\\)/)\n      if (scaleX && scaleX[0] === 'scaleX(1)') {\n        transform = transform.replace(/scaleX\\(([^)]+)\\)/, 'scaleX(-1)')\n      } else {\n        transform = transform.replace(/scaleX\\(([^)]+)\\)/, 'scaleX(1)')\n      }\n\n      this.updateObject({\n        object: {\n          ...objects[_index],\n          props: {\n            ...props,\n            style: {\n              ...props.style,\n              transform,\n            },\n          },\n        },\n      })\n\n      this.updateHistory(UPDATE_OBJECT, { object: objects[_index] })\n    }\n  }\n  public onSendForward = (_index: number, objects: PObject[]) => {\n    if (_index > -1) {\n      const objs: any = document.querySelectorAll('.object')\n      if (!objs[_index]?.style) {\n        return\n      }\n      const current = parseInt(objs[_index].style.zIndex, 10)\n\n      if (current - 100 < objs.length - 1) {\n        for (let i = 0; i < objs.length; i += 1) {\n          if (parseInt(objs[i].style.zIndex, 10) === current + 1) {\n            objs[i].style.zIndex = current\n            break\n          }\n        }\n        objs[_index].style.zIndex = current + 1\n\n        this.updateObject({\n          object: {\n            ...objects[_index],\n            style: {\n              ...objects[_index].style,\n              zIndex: current + 1 + '',\n            },\n          },\n        })\n\n        this.updateHistory(UPDATE_OBJECT, { object: objects[_index] })\n      }\n    }\n  }\n  public onSendBackward = (_index: number, objects: PObject[]) => {\n    const objs: any = document.querySelectorAll('.object')\n    if (!objs[_index]?.style) {\n      return\n    }\n    const current = parseInt(objs[_index].style.zIndex, 10)\n\n    if (current > 100) {\n      for (let i = 0; i < objs.length; i += 1) {\n        if (parseInt(objs[i].style.zIndex, 10) === current - 1) {\n          objs[i].style.zIndex = current\n          break\n        }\n      }\n      objs[_index].style.zIndex = current - 1\n\n      this.updateObject({\n        object: {\n          ...objects[_index],\n          style: {\n            ...objects[_index].style,\n            zIndex: current - 1 + '',\n          },\n        },\n      })\n\n      this.updateHistory(UPDATE_OBJECT, { object: objects[_index] })\n    }\n  }\n  public imageFit = debounce(\n    (height: number, width: number, newSize: Size, oldSize: Size, type: string, _index: number, objects: PObject[]) => {\n      const _obj = objects[_index]\n      if (_obj?.props.className === 'image-placeholder') {\n        const placeholder = this._object.firstChild as HTMLElement\n        const image = placeholder.childNodes[2] as HTMLImageElement\n        const _height = image.height - Math.abs(Number(_obj.props.imageStyle.top))\n\n        if (\n          height - _height > 0 &&\n          't b bl br tl tr l r'.split(' ').includes(type) &&\n          (newSize.height > oldSize.height || newSize.width < oldSize.width || newSize.width > oldSize.width)\n        ) {\n          const _width = Number(`${image.style.width}`.replace('%', ''))\n          if (width >= 100) {\n            image.style.width = `${((_width || 100) * height) / _height}%`\n            image.style.top = '0'\n            image.style.left = '0'\n          }\n        } else if (width >= 100 && 'r l br bl tr tl'.split(' ').includes(type)) {\n          image.style.width = '100%'\n        }\n      }\n    },\n    100\n  )\n  public moveToolbar = (\n    toolbar: any,\n    options: any,\n    {\n      t,\n      l,\n      w,\n      h,\n      maxY,\n    }: {\n      t: number\n      l: number\n      w: number\n      h: number\n      maxY: number\n    }\n  ) => {\n    if (!this.slideViewRef.current) return\n\n    const { x } = this.getRotatedPosition({\n      ...options,\n      x: l + w / 2,\n      y: t + h / 2,\n    })\n\n    const { width } = getComputedStyle(toolbar)\n\n    const slideViewRect: any = this.slideViewRef.current.getBoundingClientRect()\n    const scaledContainerRect: any = this.scaledContainerRef.current.getBoundingClientRect()\n\n    const leftSpace = scaledContainerRect.x - slideViewRect.x\n    const topSpace = scaledContainerRect.y - slideViewRect.y\n\n    toolbar.style.left = x + leftSpace - parseFloat(width) / 2 + 'px'\n    const toolbarDistance = this._rotaterDistance + 20 // 20 is rotater width\n    if (scaledContainerRect.bottom - maxY - topSpace - toolbarDistance <= 100) {\n      toolbar.style.top = t * this.scale + 'px'\n    } else {\n      toolbar.style.top = maxY + topSpace + toolbarDistance + 'px'\n    }\n  }\n  public hideToolbar = () => {\n    const toolbar: any = document.querySelector('.toolbar')\n    if (toolbar) {\n      toolbar.style.display = 'none'\n    }\n  }\n  // #endregion [ToolbarMethods]\n  // #region [ResizeMethods]\n  public hideResizer = () => {\n    const resizers: any = document.querySelectorAll('.resize')\n    if (resizers) {\n      resizers.forEach((r: any) => {\n        r.style.display = 'none'\n        return r\n      })\n    }\n\n    const rotate: any = document.querySelector('.rotate')\n    if (rotate) {\n      rotate.style.display = 'none'\n    }\n  }\n  public moveResizers = (props?: any) => {\n    let { object, angle, objectType, styles } = props || {}\n\n    if (!angle) {\n      if (this._object) angle = getRotationScaler(this._object.style.transform)\n      else angle = props._rotateAngle || 0\n    }\n    if (!object) object = this._object\n    if (!objectType) objectType = this._objectType\n    if (!styles) {\n      const { top, left, width, height } = getComputedStyle(object)\n      styles = {\n        top,\n        left,\n        width,\n        height,\n      }\n    }\n\n    const {\n      options,\n      rect: { t, l, w, h },\n    } = this.calculateCenter(styles, angle)\n\n    // ---\n\n    const rotater: DomType = document.querySelector('.rotate') || ({} as DomType)\n    if (rotater) rotater.style.display = 'block'\n\n    const toolbar: DomType = document.querySelector('.toolbar') || ({} as DomType)\n    if (toolbar) toolbar.style.display = 'flex'\n\n    const activeBorder = document.querySelector('.active-border')\n    this.showActiveBorder(activeBorder, options, w, h, angle)\n\n    if (objectType === 'group') {\n      this.hideResizer()\n      this.hideToolbar()\n      return\n    }\n\n    const { x, y } = this.getRotatedPosition({\n      ...options,\n      x: l + w / 2,\n      y: t - this._rotaterDistance / this.scale,\n    })\n\n    const scaledDimensions = 20\n\n    const midpoint = scaledDimensions / 2\n\n    rotater.style.top = y - midpoint + 'px'\n    rotater.style.left = x - midpoint + 'px'\n    rotater.style.width = scaledDimensions + 'px'\n    rotater.style.height = scaledDimensions + 'px'\n\n    let maxY = 0\n\n    const resizers: any = document.querySelectorAll('.resize')\n    resizers.forEach((r: any) => {\n      r.style.width = scaledDimensions + 'px'\n      r.style.height = scaledDimensions + 'px'\n\n      if (r.classList.contains('tl')) {\n        const _position = this.getRotatedPosition({ ...options })\n        r.style.left = _position.x - midpoint + 'px'\n        r.style.top = _position.y - midpoint + 'px'\n        r.style.display = objectType === 'text' ? 'none' : 'block'\n        if (_position.y > maxY) maxY = _position.y\n      } else if (r.classList.contains('tr')) {\n        const _position = this.getRotatedPosition({ ...options, x: l + w })\n        r.style.left = _position.x - midpoint + 'px'\n        r.style.top = _position.y - midpoint + 'px'\n        r.style.display = objectType === 'text' ? 'none' : 'block'\n        if (_position.y > maxY) maxY = _position.y\n      } else if (r.classList.contains('bl')) {\n        const _position = this.getRotatedPosition({ ...options, y: t + h })\n        r.style.left = _position.x - midpoint + 'px'\n        r.style.top = _position.y - midpoint + 'px'\n        r.style.display = objectType === 'text' ? 'none' : 'block'\n        if (_position.y > maxY) maxY = _position.y\n      } else if (r.classList.contains('br')) {\n        const _position = this.getRotatedPosition({ ...options, x: l + w, y: t + h })\n        r.style.left = _position.x - midpoint + 'px'\n        r.style.top = _position.y - midpoint + 'px'\n        r.style.display = objectType === 'text' ? 'none' : 'block'\n        if (_position.y > maxY) maxY = _position.y\n      } else if (r.classList.contains('t')) {\n        const _position = this.getRotatedPosition({ ...options, x: l + w / 2 })\n        r.style.left = _position.x - midpoint + 'px'\n        r.style.top = _position.y - midpoint + 'px'\n        r.style.display = objectType === 'text' ? 'none' : 'block'\n        if (_position.y > maxY) maxY = _position.y\n      } else if (r.classList.contains('b')) {\n        const _position = this.getRotatedPosition({\n          ...options,\n          x: l + w / 2,\n          y: t + h,\n        })\n        r.style.left = _position.x - midpoint + 'px'\n        r.style.top = _position.y - midpoint + 'px'\n        r.style.display = objectType === 'text' ? 'none' : 'block'\n        if (_position.y > maxY) maxY = _position.y\n      } else if (r.classList.contains('l')) {\n        const _position = this.getRotatedPosition({ ...options, y: t + h / 2 })\n\n        if (objectType === 'text') {\n          r.style.width = 4 + 'px'\n          r.style.left = _position.x - midpoint + 9 + 'px'\n          r.style.top = _position.y - midpoint + 'px'\n        } else {\n          r.style.left = _position.x - midpoint + 'px'\n          r.style.top = _position.y - midpoint + 'px'\n        }\n\n        r.style.display = 'block'\n        if (_position.y > maxY) maxY = _position.y\n      } else if (r.classList.contains('r')) {\n        const _position = this.getRotatedPosition({\n          ...options,\n          x: l + w,\n          y: t + h / 2,\n        })\n\n        if (objectType === 'text') {\n          r.style.width = 4 + 'px'\n          r.style.left = _position.x - midpoint + 6 + 'px'\n          r.style.top = _position.y - midpoint + 'px'\n        } else {\n          r.style.left = _position.x - midpoint + 'px'\n          r.style.top = _position.y - midpoint + 'px'\n        }\n        r.style.display = 'block'\n        if (_position.y > maxY) maxY = _position.y\n      }\n    })\n\n    setTimeout(() => {\n      this.moveToolbar(toolbar, options, { t, l, w, h, maxY })\n    }, 0)\n  }\n  public startResize = (e: any, cursor: string, type: string, _index: number, objects: PObject[]) => {\n    if (e.button !== 0 || _index === -1 || !this._object) return\n\n    document.body.style.cursor = cursor\n    const startX = e.clientX / this.scale\n    const startY = e.clientY / this.scale\n    const { top: t, left: l, width: w, height: h } = getComputedStyle(this._object)\n\n    const { rotateAngle } = objects[_index].style\n\n    const {\n      position: { centerX, centerY },\n      size: { width, height },\n    } = tLToCenter({\n      top: parseFloat(t),\n      left: parseFloat(l),\n      width: parseFloat(w),\n      height: parseFloat(h),\n    })\n\n    const rect = { width, height, centerX, centerY, rotateAngle: rotateAngle || 0 }\n\n    this._isMouseDown = true\n    const onMouseMove = (sube: any) => {\n      if (!this._isMouseDown) return\n      sube.stopImmediatePropagation()\n\n      const clientX = sube.clientX / this.scale\n      const clientY = sube.clientY / this.scale\n      const deltaX = clientX - startX\n      const deltaY = clientY - startY\n      const alpha = Math.atan2(deltaY, deltaX)\n      const deltaL = getLength(deltaX, deltaY)\n      const isShiftKey = sube.shiftKey\n      this.onResize(deltaL, alpha, rect, type, isShiftKey, _index, objects)\n    }\n\n    const onMouseUp = () => {\n      document.body.style.cursor = 'auto'\n      document.removeEventListener('mousemove', onMouseMove)\n      document.removeEventListener('mouseup', onMouseUp)\n      if (!this._isMouseDown) return\n      this._isMouseDown = false\n\n      if (_index > -1) {\n        this.updateObjectStyle(objects[_index])\n      }\n    }\n\n    document.addEventListener('mousemove', onMouseMove)\n    document.addEventListener('mouseup', onMouseUp)\n  }\n  public resizeObject = (\n    {\n      top,\n      left,\n      width,\n      height,\n      rotateAngle,\n    }: {\n      top: number\n      left: number\n      width: number\n      height: number\n      rotateAngle: number\n    },\n    type: string,\n    _index: number,\n    objects: PObject[]\n  ) => {\n    const oldSize = {\n      width: Number(this._object.style.width.replace('px', '')),\n      height: Number(this._object.style.height.replace('px', '')),\n    }\n    const newSize = {\n      width,\n      height,\n    }\n    this.imageFit(height, width, newSize, oldSize, type, _index, objects)\n    this._object.style.top = top + 'px'\n    this._object.style.left = left + 'px'\n    this._object.style.width = width + 'px'\n    this._object.style.height = height + 'px'\n    this.moveResizers({ angle: rotateAngle, width, height, type })\n  }\n  public onResize = (\n    length: number,\n    alpha: number,\n    rect: {\n      width: number\n      height: number\n      centerX: number\n      centerY: number\n      rotateAngle: number\n    },\n    type: string,\n    isShiftKey: boolean,\n    _index: number,\n    objects: PObject[]\n  ) => {\n    const minWidth = 20 / this.scale\n    const minHeight = 20 / this.scale\n\n    const beta = alpha - degToRadian(rect.rotateAngle)\n    const deltaW = length * Math.cos(beta)\n    const deltaH = length * Math.sin(beta)\n    const ratio = isShiftKey ? rect.width / rect.height : undefined\n    const {\n      position: { centerX, centerY },\n      size: { width, height },\n    } = getNewStyle(type, { ...rect, rotateAngle: rect.rotateAngle }, deltaW, deltaH, ratio, minWidth, minHeight)\n\n    this.resizeObject(\n      centerToTL({\n        centerX,\n        centerY,\n        width,\n        height,\n        rotateAngle: rect.rotateAngle,\n      }),\n      type,\n      _index,\n      objects\n    )\n  }\n  // #endregion [ResizeMethods]\n  // #region [Border]\n  public showActiveBorder = (border: any, options: any, w: number, h: number, angle?: number) => {\n    const { x, y } = this.getRotatedPosition({ ...options })\n    if (border) {\n      border.style.left = x + 'px'\n      border.style.top = y + 'px'\n      border.style.width = w * this.scale + 'px'\n      border.style.height = h * this.scale + 'px'\n      border.style.display = 'block'\n      border.style.transform = `rotate(${angle || this._rotateAngle}deg)`\n    }\n    this.setOverflow('unset')\n  }\n  public hideActiveBorder = () => {\n    const activeBorder: any = document.querySelector('.active-border')\n    if (activeBorder) {\n      activeBorder.style.display = 'none'\n      this.setOverflow('hidden')\n      // hideResizer();\n      this.hideToolbar()\n      if (this._object) this.hideImageCircle(this._object)\n    }\n  }\n  public showBorder = (object: HTMLElement) => {\n    if (!object.classList.contains('object')) return\n    const child = object.firstChild as HTMLElement\n    const border = child.firstChild as HTMLElement\n    border.style.borderWidth = 3 / this.scale + 'px'\n    border.style.display = 'block'\n    this.showGroupSelection()\n  }\n  public hideBorder = (object: HTMLElement) => {\n    if (!object.classList.contains('object')) return\n    const child = object.firstChild as HTMLElement\n    const border = child.firstChild as HTMLElement\n    border.style.display = 'none'\n    this.hideGroupSelection()\n  }\n  public showImageCircle = (object: HTMLElement, objectType: ObjectType) => {\n    if (objectType !== 'image' || !object.classList.contains('object')) return\n    const child = object.firstChild as HTMLElement\n    const circle = child.lastChild as HTMLElement\n    circle.style.display = 'flex'\n\n    this.showGroupSelection()\n  }\n  public hideImageCircle = (object: HTMLElement) => {\n    if (this._objectType !== 'image' || !object?.classList.contains('object')) return\n    const child = object.firstChild as HTMLElement\n    const circle = child.lastChild as HTMLElement\n    circle.style.display = 'none'\n\n    this.hideGroupSelection()\n  }\n  // #endregion [Border]\n  // #region [backgroundMethods]\n  public onBackgroundDropDragOver = (e: any) => {\n    if (e.target.classList.contains('background-drop-left')) {\n      e.target.style.border = '3px solid #333'\n    } else if (e.target.classList.contains('background-drop-middle')) {\n      e.target.style.border = '3px solid #333'\n    }\n    if (e.target.classList.contains('background-drop-right')) {\n      e.target.style.border = '3px solid #333'\n    }\n  }\n  public onBackgroundDropDragLeave = (e: any) => {\n    if (e.target.classList.contains('background-drop-left')) {\n      e.target.style.border = 'none'\n    } else if (e.target.classList.contains('background-drop-middle')) {\n      e.target.style.border = 'none'\n    }\n    if (e.target.classList.contains('background-drop-right')) {\n      e.target.style.border = 'none'\n    }\n  }\n  // #endregion [backgroundMethods]\n  // #region [Methods]\n  public calculateCenter = (styles: { top: any; left: any; width: any; height: any }, angle: any) => {\n    const t = parseFloat(styles.top)\n    const l = parseFloat(styles.left)\n    const w = parseFloat(styles.width)\n    const h = parseFloat(styles.height)\n\n    const theta = degToRadian(angle)\n\n    // center of square coordinates\n    const cx = l + w / 2\n    const cy = t + h / 2\n\n    return {\n      options: { x: l, y: t, cx, cy, theta },\n      rect: {\n        t,\n        l,\n        w,\n        h,\n      },\n    }\n  }\n  public onSlideMouseDown = (e: any, _index: number, containers: Container[]) => {\n    if (e.target.classList.contains('image-center')) return\n\n    if (e.target.id === 'scaled_container' || e.target.id === 'canvas_container') {\n      this.hideImageCircle(this._object)\n      if (_index > -1 && this._isTextEditing) {\n        this.setTextObjectIndex(_index)\n        this._object.classList.remove('selected')\n        this._object.firstChild.style.cursor = 'default'\n        this._object.firstChild.style.pointerEvents = 'none'\n        this._object.firstChild.childNodes[2].contentEditable = false\n        this.setIsTextEditing(false)\n        window.getSelection()?.removeAllRanges()\n      }\n      this.deSelectObject()\n    }\n\n    if (this._isTextEditing) return\n\n    const rect = this.slideContainerRef.current.getBoundingClientRect()\n\n    const startX = e.clientX - rect.x\n    const startY = e.clientY - rect.y\n\n    const selectedObjects: { [k: number]: HTMLElement } = {}\n\n    this._isMouseDown = true\n\n    const onMouseMove = (sube: any) => {\n      if (!this._isMouseDown) return\n      sube.stopImmediatePropagation()\n      this.selectionRef.current.hidden = false\n      const clientY = sube.clientY - rect.y\n      const clientX = sube.clientX - rect.x\n\n      const x3 = Math.min(startX, clientX)\n      const x4 = Math.max(startX, clientX)\n      const y3 = Math.min(startY, clientY)\n      const y4 = Math.max(startY, clientY)\n\n      this.selectionRef.current.style.left = x3 + 'px'\n      this.selectionRef.current.style.top = y3 + 'px'\n      this.selectionRef.current.style.width = x4 - x3 + 'px'\n      this.selectionRef.current.style.height = y4 - y3 + 'px'\n\n      const s = this.selectionRef.current.getBoundingClientRect()\n\n      containers.forEach((c: Container, i: number) => {\n        if (!c.id) return\n        const object = document.getElementById(c.id) as HTMLElement\n        const o = object.getBoundingClientRect()\n\n        if (\n          o.left < s.left + s.width &&\n          o.left + o.width > s.left &&\n          o.top < s.top + s.height &&\n          o.top + o.height > s.top\n        ) {\n          selectedObjects[i] = object\n          this.showBorder(object)\n        } else {\n          delete selectedObjects[i]\n          this.hideBorder(object)\n        }\n      })\n    }\n\n    const onMouseUp = () => {\n      window.removeEventListener('mousemove', onMouseMove)\n      window.removeEventListener('mouseup', onMouseUp)\n      if (!this._isMouseDown) return\n      if (this.selectionRef.current) {\n        this.selectionRef.current.hidden = true\n        this.selectionRef.current.style.width = 0\n        this.selectionRef.current.style.height = 0\n      }\n      this._isMouseDown = false\n\n      const selectedStyle = {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0,\n      }\n\n      Object.keys(selectedObjects).forEach((k: string, i: number) => {\n        const { left, top, width, height } = selectedObjects[parseInt(k, 10)].style\n        // for now just hide, later calculate angles\n        this.hideBorder(selectedObjects[parseInt(k, 10)])\n\n        const l = parseFloat(left)\n        const t = parseFloat(top)\n        const h = parseFloat(height)\n        const w = parseFloat(width)\n\n        if (i === 0) {\n          selectedStyle.left = l\n          selectedStyle.top = t\n          selectedStyle.width = w\n          selectedStyle.height = h\n        } else {\n          if (selectedStyle.width < Math.abs(l - selectedStyle.left) + w) {\n            selectedStyle.width = Math.abs(l - selectedStyle.left) + w\n          }\n          if (selectedStyle.height < Math.abs(t - selectedStyle.top) + h) {\n            selectedStyle.height = Math.abs(t - selectedStyle.top) + h\n          }\n          if (selectedStyle.left > l) {\n            selectedStyle.left = l\n          }\n          if (selectedStyle.top > t) {\n            selectedStyle.top = t\n          }\n        }\n      })\n\n      if (Object.keys(selectedObjects).length === 1) {\n        const key: number = parseFloat(Object.keys(selectedObjects)[0])\n        const object: any = selectedObjects[key]\n        const objectType = this.getObjectType(object.firstChild.classList)\n        this.moveResizers({ object, objectType })\n        this.setObjectType(objectType)\n        this.setObjectIndex(key)\n        this.setObject(object)\n        this._object = object\n      } else if (Object.keys(selectedObjects).length > 1) {\n        this.showGroupSelection()\n        this.setGroupObjects(selectedObjects)\n        this.setGroupStyles(selectedStyle)\n        this.groupRef.current.style.left = selectedStyle.left * this.scale + 'px'\n        this.groupRef.current.style.top = selectedStyle.top * this.scale + 'px'\n        this.groupRef.current.style.width = selectedStyle.width * this.scale + 'px'\n        this.groupRef.current.style.height = selectedStyle.height * this.scale + 'px'\n        this.moveResizers({ styles: selectedStyle, objectType: 'group' })\n      }\n    }\n\n    window.addEventListener('mousemove', onMouseMove)\n    window.addEventListener('mouseup', onMouseUp)\n  }\n  // #endregion [Methods]\n}\n","/home/project/photobook/photobook_front/src/pages/editor/components/layout/editor-panel/index.ts",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/objects/index.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/header/index.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/utils/render/index.ts",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/footer/index.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/sidebar/index.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/objects/image.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/objects/shape.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/objects/text.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/editor-panel/side-buttons.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/editor-panel/background-images-single.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/editor-panel/background-images.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/editor-panel/photoprint.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/sidebar/tabs/frames.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/sidebar/tabs/backgrounds.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/sidebar/tabs/masks.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/sidebar/tabs/layouts.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/footer/slide.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/sidebar/tabs/cliparts.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/utils/render/render-background.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/utils/render/background.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/utils/render/render-object.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/upload-modal/upload-photos-group.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/sidebar/tabs/images.tsx",[],"/home/project/photobook/photobook_front/src/redux/reducers/auth.ts",[],"/home/project/photobook/photobook_front/src/redux/reducers/image.ts",[],"/home/project/photobook/photobook_front/src/redux/reducers/editor.ts",[],"/home/project/photobook/photobook_front/src/redux/reducers/project.ts",[],"/home/project/photobook/photobook_front/src/redux/actions/image.ts",[],"/home/project/photobook/photobook_front/src/redux/actions/editor.ts",[],"/home/project/photobook/photobook_front/src/utils/dnd.ts",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/editor-panel/toolbar/index.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/editor-panel/settings.tsx",[],"/home/project/photobook/photobook_front/src/redux/reducers/handlers.ts",["668","669","670","671","672","673","674","675","676","677","678","679","680","681","682"],"import { BackgroundImage, Container, HistoryInterface, ProjectInterface, Slide } from 'interfaces'\nimport { Insert } from 'utils'\nimport {\n  ADD_LAYOUT,\n  ADD_OBJECT,\n  REMOVE_OBJECT,\n  SET_BACKGROUNDS,\n  UPDATE_BACKGROUND,\n  UPDATE_GROUP_CONTAINER,\n  UPDATE_OBJECT,\n} from '../actions/types'\n\nconst setSlideDimensionHandler = (state: ProjectInterface, action: any) => {\n  const { payload } = action\n\n  const { bgStyles, slideWidth, slideHeight } = payload\n  return {\n    ...state,\n    bgStyles,\n    slideWidth,\n    slideHeight,\n    loading: false,\n  }\n}\n\n// #region [ProjectHandlers]\nconst updateProjectsHandler = (state: ProjectInterface, action: any) => {\n  const { payload } = action\n\n  return {\n    ...state,\n    currentProject: {\n      ...state.currentProject,\n      ...payload,\n    },\n    fetching: false,\n  }\n}\n\nconst setCurrentProjectHandler = (state: ProjectInterface, action: any) => {\n  return {\n    ...state,\n    currentProject: action.payload,\n    loading: false,\n    fetching: false,\n  }\n}\n\nconst saveProjectHandler = (state: ProjectInterface, action: any) => {\n  const { payload } = action\n\n  state.currentProject.slides.map((s: Slide) => {\n    if (s.slideId === payload.slideId) {\n      return payload\n    }\n    return s\n  })\n  return {\n    ...state,\n    loading: false,\n  }\n}\n\nconst saveProjectAttHandler = (state: ProjectInterface, action: any) => {\n  const { payload } = action\n  state.currentProject = { ...state.currentProject, ...payload }\n  return {\n    ...state,\n    loading: false,\n  }\n}\n\nconst newSlideHandler = (state: ProjectInterface, action: any) => {\n  const { payload } = action\n  Insert(state.currentProject.slides, payload.slideIndex, payload.slide)\n  return {\n    ...state,\n    loading: false,\n  }\n}\n\nconst reOrderSlideHandler = (state: ProjectInterface, action: any) => {\n  const {\n    payload: { slides },\n  } = action\n  console.log('SDAVE', action)\n\n  state.currentProject.slides = slides\n  return {\n    ...state,\n    loading: false,\n  }\n}\n\nconst duplicateSlideHandler = (state: ProjectInterface, action: any) => {\n  const { payload } = action\n  console.log('SDAVE', action)\n  state.currentProject.slides = [...state.currentProject.slides, state.currentProject.slides[payload]]\n  return {\n    ...state,\n    loading: false,\n  }\n}\n\nconst deleteSlideHandler = (state: ProjectInterface, action: any) => {\n  const { payload } = action\n  state.currentProject.slides.splice(payload, 1)\n  return {\n    ...state,\n    loading: false,\n  }\n}\n// #region [ProjectHandlers]\n\n// #region [ObjectHandler]\nconst loadObjectsHandler = (state: ProjectInterface, action: any) => {\n  const { payload } = action\n\n  return {\n    ...state,\n    objects: payload,\n  }\n}\n// #endregion [ObjectHandler]\n\nconst loadContainersHandler = (state: ProjectInterface, action: any) => {\n  const { payload } = action\n\n  return {\n    ...state,\n    containers: payload,\n  }\n}\nconst clearProject = (state: ProjectInterface) => {\n  return {\n    ...state,\n    fetching: true,\n  }\n}\nconst loadBackgroundsHandler = (state: ProjectInterface, action: any) => {\n  const { payload } = action\n\n  return {\n    ...state,\n    backgrounds: payload,\n  }\n}\n\nconst loadErrorHandler = (state: ProjectInterface, action: any) => {\n  const { payload } = action\n\n  console.log('load error')\n  console.log(payload)\n  return {\n    ...state,\n    loading: false,\n  }\n}\n\nconst updateHistoryHandler = (state: ProjectInterface, action: { payload: HistoryInterface }) => {\n  const { payload } = action\n  return {\n    ...state,\n    undoHistory: [...state.undoHistory, payload],\n    loading: false,\n  }\n}\n\nconst updateContainerHandler = (state: ProjectInterface, action: any) => {\n  const { payload } = action\n\n  const { container } = payload\n\n  console.log('update container')\n  console.log('container')\n  console.log(container)\n\n  return {\n    ...state,\n    containers: state.containers.map((x: any) => {\n      if (x.id === container.id) return container\n      return x\n    }),\n    loading: false,\n  }\n}\n\nconst updateGroupContainerHandler = (state: ProjectInterface, action: any) => {\n  const { payload } = action\n\n  const { containers }: { containers: Container[] } = payload\n\n  return {\n    ...state,\n    containers: state.containers.map((c: Container) => {\n      const updated = containers.find((x: Container) => c.id === x.id)\n      if (updated) return updated\n      return c\n    }),\n    loading: false,\n  }\n}\n\nconst updateObjectHandler = (state: ProjectInterface, action: any) => {\n  const { payload } = action\n\n  const { object } = payload\n\n  console.log('update object')\n  console.log('object')\n  console.log(object)\n\n  return {\n    ...state,\n    objects: state.objects.map((x: any) => {\n      if (x.id === object.id) return object\n      return x\n    }),\n    loading: false,\n  }\n}\n\nconst updateBackgroundHandler = (state: ProjectInterface, action: any) => {\n  const { payload } = action\n\n  const { background }: { background: BackgroundImage } = payload\n\n  return {\n    ...state,\n    backgrounds: state.backgrounds.map((x: BackgroundImage) => {\n      if (x.className === background.className) return { ...x, ...background }\n      return x\n    }),\n    loading: false,\n  }\n}\n\nconst setBackgroundsHandler = (state: ProjectInterface, action: any) => {\n  const { payload } = action\n\n  const { backgrounds }: { backgrounds: BackgroundImage[] } = payload\n\n  return {\n    ...state,\n    backgrounds: state.backgrounds.map((x: BackgroundImage) => {\n      const [bg] = backgrounds.filter((b: BackgroundImage) => x.className === b.className)\n      if (bg) return bg\n      return x\n    }),\n    loading: false,\n  }\n}\n\nconst addLayoutHandler = (state: ProjectInterface, action: any) => {\n  const { payload } = action\n\n  const { objects, layout } = payload\n\n  console.log('layout')\n  console.log(layout)\n\n  return {\n    ...state,\n    objects,\n    layout,\n    loading: false,\n  }\n}\n\nconst addObjectHandler = (state: ProjectInterface, action: any) => {\n  const { payload } = action\n\n  const { object } = payload\n\n  return {\n    ...state,\n    objects: [...state.objects, object],\n    loading: false,\n  }\n}\n\nconst removeObjectHandler = (state: ProjectInterface, action: any) => {\n  const { payload } = action\n\n  const { object, container } = payload\n\n  return {\n    ...state,\n    objects: state.objects.filter((x: any) => x.id !== object.id),\n    containers: state.containers.filter((x: any) => x.id !== container.id),\n    loading: false,\n  }\n}\n\nconst undoHandler = (state: ProjectInterface) => {\n  const undo = state.undoHistory.pop()\n  if (undo) {\n    const { historyType, props } = undo\n\n    if (historyType === ADD_OBJECT) {\n      const { object } = props\n      return {\n        ...state,\n        objects: state.objects.filter((x: any) => x.id !== object?.id),\n        redoHistory: [...state.redoHistory, undo],\n        loading: false,\n      }\n    } else if (historyType === ADD_LAYOUT) {\n      const { objects, layout } = props\n      return {\n        ...state,\n        objects,\n        layout,\n        redoHistory: [\n          ...state.redoHistory,\n          {\n            historyType: ADD_LAYOUT,\n            props: { objects: state.objects, layout: state.layout },\n          },\n        ],\n        loading: false,\n      }\n    } else if (historyType === REMOVE_OBJECT) {\n      const { object, container } = props\n      return {\n        ...state,\n        objects: [...state.objects, object],\n        containers: [...state.containers, container],\n        redoHistory: [...state.redoHistory, undo],\n        loading: false,\n      }\n    } else if (historyType === SET_BACKGROUNDS) {\n      const { backgrounds } = props\n      return {\n        ...state,\n        backgrounds,\n        redoHistory: [\n          ...state.redoHistory,\n          {\n            historyType: SET_BACKGROUNDS,\n            props: { backgrounds: state.backgrounds },\n          },\n        ],\n        loading: false,\n      }\n    } else if (historyType === UPDATE_BACKGROUND) {\n      const { background } = props\n\n      const [currentBackground] = state.backgrounds.filter(\n        (b: BackgroundImage) => b.className === background?.className\n      )\n\n      return {\n        ...state,\n        backgrounds: state.backgrounds.map((b: BackgroundImage) => {\n          if (b.className === background?.className) {\n            return {\n              ...b,\n              ...background,\n            }\n          }\n          return b\n        }),\n        redoHistory: [\n          ...state.redoHistory,\n          {\n            historyType: UPDATE_BACKGROUND,\n            props: { background: currentBackground },\n          },\n        ],\n        loading: false,\n      }\n    } else if (historyType === UPDATE_GROUP_CONTAINER) {\n      const { containers } = props\n\n      const currentContainers: Container[] = state.containers.filter((x: any) =>\n        containers?.find((c: Container) => c.id === x.id)\n      )\n\n      return {\n        ...state,\n        containers: state.containers.map((c: Container) => {\n          const updated = containers?.find((x: Container) => c.id === x.id)\n          if (updated) return updated\n          return c\n        }),\n        redoHistory: [\n          ...state.redoHistory,\n          {\n            historyType: UPDATE_GROUP_CONTAINER,\n            props: { containers: currentContainers },\n          },\n        ],\n        loading: false,\n      }\n    } else if (historyType === UPDATE_OBJECT) {\n      const { object } = props\n\n      const [currentObject] = state.objects.filter((o: any) => o.id === object?.id)\n\n      return {\n        ...state,\n        objects: state.objects.map((x: any) => {\n          if (x.id === object?.id) return object\n          return x\n        }),\n        redoHistory: [\n          ...state.redoHistory,\n          {\n            historyType: UPDATE_OBJECT,\n            props: { object: currentObject },\n          },\n        ],\n        loading: false,\n      }\n    }\n  }\n\n  return false\n}\n\nconst redoHandler = (state: ProjectInterface) => {\n  console.log(state)\n  const redo = state.redoHistory.pop()\n  if (redo) {\n    const { historyType, props } = redo\n    if (historyType === ADD_OBJECT) {\n      const { object, container } = props\n      return {\n        ...state,\n        objects: [...state.objects, object],\n        containers: [...state.containers, container],\n        undoHistory: [...state.undoHistory, redo],\n        loading: false,\n      }\n    } else if (historyType === ADD_LAYOUT) {\n      const { objects, layout } = props\n\n      return {\n        ...state,\n        objects,\n        layout,\n        undoHistory: [\n          ...state.undoHistory,\n          {\n            historyType: ADD_LAYOUT,\n            props: { objects: state.objects, layout: state.layout },\n          },\n        ],\n        loading: false,\n      }\n    } else if (historyType === REMOVE_OBJECT) {\n      const { object, container } = props\n      return {\n        ...state,\n        objects: state.objects.filter((x: any) => x.id !== object?.id),\n        containers: state.containers.filter((x: any) => x.id !== container?.id),\n        undoHistory: [...state.undoHistory, redo],\n        loading: false,\n      }\n    } else if (historyType === SET_BACKGROUNDS) {\n      const { backgrounds } = props\n      return {\n        ...state,\n        backgrounds,\n        undoHistory: [\n          ...state.undoHistory,\n          {\n            historyType: SET_BACKGROUNDS,\n            props: { backgrounds: state.backgrounds },\n          },\n        ],\n        loading: false,\n      }\n    } else if (historyType === UPDATE_BACKGROUND) {\n      const { background } = props\n\n      const [currentBackground] = state.backgrounds.filter(\n        (b: BackgroundImage) => b.className === background?.className\n      )\n\n      return {\n        ...state,\n        backgrounds: state.backgrounds.map((b: BackgroundImage) => {\n          if (b.className === background?.className) {\n            return {\n              ...b,\n              ...background,\n            }\n          }\n          return b\n        }),\n        undoHistory: [\n          ...state.undoHistory,\n          {\n            historyType: UPDATE_BACKGROUND,\n            props: { background: currentBackground },\n          },\n        ],\n        loading: false,\n      }\n    } else if (historyType === UPDATE_GROUP_CONTAINER) {\n      const { containers } = props\n\n      const currentContainers: Container[] = state.containers.filter((x: any) =>\n        containers?.find((c: Container) => c.id === x.id)\n      )\n\n      return {\n        ...state,\n        containers: state.containers.map((c: Container) => {\n          const updated = containers?.find((x: Container) => c.id === x.id)\n          if (updated) return updated\n          return c\n        }),\n        undoHistory: [\n          ...state.undoHistory,\n          {\n            historyType: UPDATE_GROUP_CONTAINER,\n            props: { containers: currentContainers },\n          },\n        ],\n        loading: false,\n      }\n    } else if (historyType === UPDATE_OBJECT) {\n      const { object } = props\n\n      const [currentObject] = state.objects.filter((o: any) => o.id === object?.id)\n\n      return {\n        ...state,\n        objects: state.objects.map((x: any) => {\n          if (x.id === object?.id) return object\n          return x\n        }),\n        undoHistory: [\n          ...state.undoHistory,\n          {\n            historyType: UPDATE_OBJECT,\n            props: { object: currentObject },\n          },\n        ],\n        loading: false,\n      }\n    }\n  }\n  return false\n}\n\nconst slidesErrorHandler = (state: ProjectInterface, action: any) => {\n  const { payload } = action\n\n  console.error('SLIDES_ERROR: ' + payload)\n  return {\n    ...state,\n    loading: false,\n  }\n}\n\nconst projectsErrorHandler = (state: ProjectInterface, action: any) => {\n  const { payload } = action\n\n  console.error('PROJECTS_ERROR: ' + payload)\n  return {\n    ...state,\n    loading: false,\n  }\n}\n\nexport default {\n  updateProjectsHandler,\n  setCurrentProjectHandler,\n  setSlideDimensionHandler,\n  saveProjectHandler,\n  saveProjectAttHandler,\n  newSlideHandler,\n  deleteSlideHandler,\n  loadObjectsHandler,\n  loadContainersHandler,\n  loadBackgroundsHandler,\n  clearProject,\n  loadErrorHandler,\n  updateContainerHandler,\n  updateGroupContainerHandler,\n  updateBackgroundHandler,\n  updateObjectHandler,\n  setBackgroundsHandler,\n  updateHistoryHandler,\n  addLayoutHandler,\n  addObjectHandler,\n  removeObjectHandler,\n  undoHandler,\n  redoHandler,\n  slidesErrorHandler,\n  reOrderSlideHandler,\n  duplicateSlideHandler,\n  projectsErrorHandler,\n}\n","/home/project/photobook/photobook_front/src/components/input/index.tsx",[],"/home/project/photobook/photobook_front/src/hooks/index.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/editor-panel/toolbar/shape-toolbar.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/editor-panel/toolbar/image-toolbar.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/upload-modal/index.tsx",["683","684"],"/* eslint @typescript-eslint/no-explicit-any: off */\nimport { Button, Grid, Modal, Spin } from 'antd'\nimport { ModalProps } from 'antd/lib/modal'\nimport { UploadablePicture } from 'interfaces'\nimport React, { useState } from 'react'\nimport { useIntl } from 'react-intl'\nimport Facebook from './facebook'\nimport Google from './google'\nimport Photos from './photos'\n\ninterface Props extends ModalProps {\n  type?: 'wide' | 'default' | 'full' | 'fwide'\n  name: 'facebook' | 'google' | 'photos'\n  loading: boolean\n  okDisable?: boolean\n  cancelDisable?: boolean\n  onUpload: (images: any) => void\n  onLink: (images: any) => void\n}\n\nconst UploadModal: React.FC<Props> = ({\n  name,\n  children,\n  loading,\n  okText,\n  cancelText,\n  onCancel,\n  onUpload,\n  onLink,\n  type = 'default',\n  okDisable = false,\n  cancelDisable = false,\n  ...props\n}) => {\n  const [selectedImages, setSelectedImages] = useState<any[]>()\n  const intl = useIntl()\n  const screens = Grid.useBreakpoint()\n\n  const calcWidth = () => {\n    switch (type) {\n      case 'wide':\n        if (screens.xl) {\n          return '60%'\n        }\n        if (screens.md) {\n          return '80%'\n        }\n        return '100%'\n      case 'fwide':\n        if (screens.xl) {\n          return '85%'\n        }\n        if (screens.md) {\n          return '90%'\n        }\n        return '100%'\n      case 'full':\n        return '100%'\n      default:\n        return undefined\n    }\n  }\n\n  return (\n    <Modal\n      {...props}\n      style={{ top: '1rem' }}\n      width={calcWidth()}\n      closable={false}\n      maskClosable={false}\n      onCancel={onCancel}\n      footer={[\n        <Button\n          key=\"submit\"\n          disabled={okDisable}\n          type=\"primary\"\n          onClick={(e) => {\n            if (name === 'photos') {\n              onLink(selectedImages?.map((each) => each.id))\n            } else {\n              onUpload(selectedImages)\n            }\n            if (onCancel) onCancel(e)\n          }}\n          loading={loading}\n        >\n          {okText || intl.formatMessage({ id: 'upload' })}\n        </Button>,\n        <Button key=\"close\" disabled={cancelDisable} onClick={onCancel}>\n          {cancelText || intl.formatMessage({ id: 'close' })}\n        </Button>,\n      ]}\n    >\n      {loading ? (\n        <Spin spinning>\n          <div style={{ height: 150 }} />\n        </Spin>\n      ) : (\n        <>\n          {name === 'facebook' && <Facebook name={name} setSelectedImages={setSelectedImages} onCancel={onCancel} />}\n          {name === 'google' && <Google name={name} setSelectedImages={setSelectedImages} onCancel={onCancel} />}\n          {name === 'photos' && <Photos name={name} setSelectedImages={setSelectedImages} />}\n        </>\n      )}\n    </Modal>\n  )\n}\n\nexport default UploadModal\n","/home/project/photobook/photobook_front/src/pages/editor/components/layout/editor-panel/toolbar/text-toolbar.tsx",[],"/home/project/photobook/photobook_front/src/hooks/useQuery.tsx",[],"/home/project/photobook/photobook_front/src/hooks/useWindow.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/upload-modal/photos.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/upload-modal/google.tsx",["685"],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/upload-modal/facebook.tsx",[],"/home/project/photobook/photobook_front/src/layouts/index.tsx",[],"/home/project/photobook/photobook_front/src/pages/not-found/index.tsx",[],"/home/project/photobook/photobook_front/src/pages/product/photobook/template/index.tsx",[],"/home/project/photobook/photobook_front/src/pages/errors/index.tsx",[],"/home/project/photobook/photobook_front/src/pages/profile/index.tsx",[],"/home/project/photobook/photobook_front/src/layouts/main/index.tsx",[],"/home/project/photobook/photobook_front/src/layouts/public/index.tsx",[],"/home/project/photobook/photobook_front/src/layouts/main/footer.tsx",[],"/home/project/photobook/photobook_front/src/layouts/main/header.tsx",[],"/home/project/photobook/photobook_front/src/pages/errors/403.tsx",[],"/home/project/photobook/photobook_front/src/pages/errors/404.tsx",[],"/home/project/photobook/photobook_front/src/layouts/main/components/index.tsx",[],"/home/project/photobook/photobook_front/src/layouts/main/components/HeaderMenu/index.tsx",[],"/home/project/photobook/photobook_front/src/page-components/profile/my-cart/index.tsx",[],"/home/project/photobook/photobook_front/src/page-components/profile/my-info/index.tsx",[],"/home/project/photobook/photobook_front/src/page-components/profile/my-projects/index.tsx",[],"/home/project/photobook/photobook_front/src/page-components/profile/order-history/index.tsx",[],"/home/project/photobook/photobook_front/src/layouts/main/components/user-info/index.tsx",[],"/home/project/photobook/photobook_front/src/layouts/main/components/language-switch/index.tsx",[],"/home/project/photobook/photobook_front/src/layouts/main/components/HeaderMenu/canvas/index.tsx",[],"/home/project/photobook/photobook_front/src/layouts/main/components/HeaderMenu/photobook/index.tsx",[],"/home/project/photobook/photobook_front/src/page-components/profile/my-info/shipping-address-modal/index.tsx",["686"],"/home/project/photobook/photobook_front/src/page-components/profile/order-history/order-status/index.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/photoprint.tsx",["687","688","689","690","691","692","693","694","695","696"],"/home/project/photobook/photobook_front/src/layouts/main/components/HeaderMenu/photoprint/index.tsx",[],"/home/project/photobook/photobook_front/src/pages/product/photoprint/index.tsx",[],"/home/project/photobook/photobook_front/src/components/photoprint-layout-options/index.tsx",[],"/home/project/photobook/photobook_front/src/pages/product/photoprint/template/index.tsx",[],"/home/project/photobook/photobook_front/src/pages/editor/print.tsx",["697","698","699"],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/print-panel/index.tsx",["700"],"/home/project/photobook/photobook_front/src/pages/editor/components/layout/print-panel/images.tsx",[],"/home/project/photobook/photobook_front/src/components/image-modal/index.tsx",["701","702","703","704","705"],{"ruleId":"706","replacedBy":"707"},{"ruleId":"708","replacedBy":"709"},{"ruleId":"710","replacedBy":"711"},{"ruleId":"712","replacedBy":"713"},{"ruleId":"714","replacedBy":"715"},{"ruleId":"716","severity":1,"message":"717","line":22,"column":5,"nodeType":"718","messageId":"719","endLine":22,"endColumn":16},{"ruleId":"716","severity":1,"message":"717","line":23,"column":5,"nodeType":"718","messageId":"719","endLine":23,"endColumn":16},{"ruleId":"716","severity":1,"message":"717","line":55,"column":9,"nodeType":"718","messageId":"719","endLine":55,"endColumn":20},{"ruleId":"716","severity":1,"message":"717","line":56,"column":9,"nodeType":"718","messageId":"719","endLine":56,"endColumn":20},{"ruleId":"716","severity":1,"message":"717","line":85,"column":7,"nodeType":"718","messageId":"719","endLine":85,"endColumn":18},{"ruleId":"716","severity":1,"message":"717","line":86,"column":7,"nodeType":"718","messageId":"719","endLine":86,"endColumn":18},{"ruleId":"716","severity":1,"message":"717","line":107,"column":5,"nodeType":"718","messageId":"719","endLine":107,"endColumn":16},{"ruleId":"716","severity":1,"message":"717","line":900,"column":3,"nodeType":"718","messageId":"719","endLine":900,"endColumn":14},{"ruleId":"720","severity":1,"message":"721","line":110,"column":5,"nodeType":"722","messageId":"723","endLine":110,"endColumn":11},{"ruleId":"720","severity":1,"message":"724","line":128,"column":10,"nodeType":"722","messageId":"723","endLine":128,"endColumn":20},{"ruleId":"720","severity":1,"message":"725","line":214,"column":9,"nodeType":"722","messageId":"723","endLine":214,"endColumn":18},{"ruleId":"720","severity":1,"message":"726","line":220,"column":9,"nodeType":"722","messageId":"723","endLine":220,"endColumn":19},{"ruleId":"720","severity":1,"message":"727","line":228,"column":9,"nodeType":"722","messageId":"723","endLine":228,"endColumn":25},{"ruleId":"720","severity":1,"message":"728","line":236,"column":9,"nodeType":"722","messageId":"723","endLine":236,"endColumn":23},{"ruleId":"720","severity":1,"message":"729","line":245,"column":9,"nodeType":"722","messageId":"723","endLine":245,"endColumn":22},{"ruleId":"720","severity":1,"message":"730","line":256,"column":9,"nodeType":"722","messageId":"723","endLine":256,"endColumn":18},{"ruleId":"720","severity":1,"message":"731","line":268,"column":9,"nodeType":"722","messageId":"723","endLine":268,"endColumn":16},{"ruleId":"720","severity":1,"message":"732","line":272,"column":9,"nodeType":"722","messageId":"723","endLine":272,"endColumn":20},{"ruleId":"720","severity":1,"message":"733","line":109,"column":20,"nodeType":"722","messageId":"723","endLine":109,"endColumn":31},{"ruleId":"720","severity":1,"message":"734","line":110,"column":10,"nodeType":"722","messageId":"723","endLine":110,"endColumn":19},{"ruleId":"720","severity":1,"message":"735","line":110,"column":21,"nodeType":"722","messageId":"723","endLine":110,"endColumn":33},{"ruleId":"720","severity":1,"message":"736","line":111,"column":21,"nodeType":"722","messageId":"723","endLine":111,"endColumn":33},{"ruleId":"720","severity":1,"message":"737","line":112,"column":10,"nodeType":"722","messageId":"723","endLine":112,"endColumn":21},{"ruleId":"720","severity":1,"message":"738","line":112,"column":23,"nodeType":"722","messageId":"723","endLine":112,"endColumn":37},{"ruleId":"720","severity":1,"message":"739","line":113,"column":10,"nodeType":"722","messageId":"723","endLine":113,"endColumn":18},{"ruleId":"720","severity":1,"message":"740","line":113,"column":20,"nodeType":"722","messageId":"723","endLine":113,"endColumn":31},{"ruleId":"720","severity":1,"message":"741","line":114,"column":10,"nodeType":"722","messageId":"723","endLine":114,"endColumn":15},{"ruleId":"720","severity":1,"message":"742","line":114,"column":17,"nodeType":"722","messageId":"723","endLine":114,"endColumn":25},{"ruleId":"743","severity":1,"message":"744","line":33,"column":6,"nodeType":"745","endLine":33,"endColumn":8,"suggestions":"746"},{"ruleId":"720","severity":1,"message":"747","line":3,"column":23,"nodeType":"722","messageId":"723","endLine":3,"endColumn":29},{"ruleId":"720","severity":1,"message":"747","line":2,"column":23,"nodeType":"722","messageId":"723","endLine":2,"endColumn":29},{"ruleId":"716","severity":1,"message":"717","line":38,"column":3,"nodeType":"718","messageId":"719","endLine":38,"endColumn":14},{"ruleId":"716","severity":1,"message":"717","line":9,"column":1,"nodeType":"718","messageId":"719","endLine":9,"endColumn":12},{"ruleId":"720","severity":1,"message":"748","line":1,"column":10,"nodeType":"722","messageId":"723","endLine":1,"endColumn":17},{"ruleId":"716","severity":1,"message":"717","line":115,"column":5,"nodeType":"718","messageId":"719","endLine":115,"endColumn":16},{"ruleId":"716","severity":1,"message":"717","line":178,"column":5,"nodeType":"718","messageId":"719","endLine":178,"endColumn":16},{"ruleId":"716","severity":1,"message":"717","line":187,"column":7,"nodeType":"718","messageId":"719","endLine":187,"endColumn":18},{"ruleId":"716","severity":1,"message":"717","line":212,"column":7,"nodeType":"718","messageId":"719","endLine":212,"endColumn":20},{"ruleId":"716","severity":1,"message":"717","line":228,"column":5,"nodeType":"718","messageId":"719","endLine":228,"endColumn":18},{"ruleId":"716","severity":1,"message":"717","line":244,"column":5,"nodeType":"718","messageId":"719","endLine":244,"endColumn":18},{"ruleId":"716","severity":1,"message":"717","line":260,"column":5,"nodeType":"718","messageId":"719","endLine":260,"endColumn":18},{"ruleId":"716","severity":1,"message":"717","line":369,"column":5,"nodeType":"718","messageId":"719","endLine":369,"endColumn":18},{"ruleId":"716","severity":1,"message":"717","line":385,"column":5,"nodeType":"718","messageId":"719","endLine":385,"endColumn":18},{"ruleId":"716","severity":1,"message":"717","line":401,"column":5,"nodeType":"718","messageId":"719","endLine":401,"endColumn":18},{"ruleId":"716","severity":1,"message":"717","line":417,"column":5,"nodeType":"718","messageId":"719","endLine":417,"endColumn":18},{"ruleId":"716","severity":1,"message":"717","line":433,"column":5,"nodeType":"718","messageId":"719","endLine":433,"endColumn":18},{"ruleId":"716","severity":1,"message":"717","line":466,"column":5,"nodeType":"718","messageId":"719","endLine":466,"endColumn":18},{"ruleId":"716","severity":1,"message":"717","line":484,"column":5,"nodeType":"718","messageId":"719","endLine":484,"endColumn":18},{"ruleId":"716","severity":1,"message":"717","line":499,"column":5,"nodeType":"718","messageId":"719","endLine":499,"endColumn":18},{"ruleId":"716","severity":1,"message":"717","line":514,"column":5,"nodeType":"718","messageId":"719","endLine":514,"endColumn":18},{"ruleId":"716","severity":1,"message":"717","line":17,"column":7,"nodeType":"718","messageId":"719","endLine":17,"endColumn":18},{"ruleId":"716","severity":1,"message":"717","line":63,"column":11,"nodeType":"718","messageId":"719","endLine":63,"endColumn":22},{"ruleId":"716","severity":1,"message":"717","line":85,"column":11,"nodeType":"718","messageId":"719","endLine":85,"endColumn":22},{"ruleId":"716","severity":1,"message":"717","line":1060,"column":7,"nodeType":"718","messageId":"719","endLine":1060,"endColumn":18},{"ruleId":"716","severity":1,"message":"717","line":1061,"column":7,"nodeType":"718","messageId":"719","endLine":1061,"endColumn":18},{"ruleId":"716","severity":1,"message":"717","line":1063,"column":7,"nodeType":"718","messageId":"719","endLine":1063,"endColumn":18},{"ruleId":"716","severity":1,"message":"717","line":1064,"column":7,"nodeType":"718","messageId":"719","endLine":1064,"endColumn":18},{"ruleId":"716","severity":1,"message":"717","line":1477,"column":7,"nodeType":"718","messageId":"719","endLine":1477,"endColumn":18},{"ruleId":"716","severity":1,"message":"717","line":86,"column":3,"nodeType":"718","messageId":"719","endLine":86,"endColumn":14},{"ruleId":"716","severity":1,"message":"717","line":97,"column":3,"nodeType":"718","messageId":"719","endLine":97,"endColumn":14},{"ruleId":"716","severity":1,"message":"717","line":152,"column":3,"nodeType":"718","messageId":"719","endLine":152,"endColumn":14},{"ruleId":"716","severity":1,"message":"717","line":153,"column":3,"nodeType":"718","messageId":"719","endLine":153,"endColumn":14},{"ruleId":"716","severity":1,"message":"717","line":174,"column":3,"nodeType":"718","messageId":"719","endLine":174,"endColumn":14},{"ruleId":"716","severity":1,"message":"717","line":175,"column":3,"nodeType":"718","messageId":"719","endLine":175,"endColumn":14},{"ruleId":"716","severity":1,"message":"717","line":176,"column":3,"nodeType":"718","messageId":"719","endLine":176,"endColumn":14},{"ruleId":"716","severity":1,"message":"717","line":209,"column":3,"nodeType":"718","messageId":"719","endLine":209,"endColumn":14},{"ruleId":"716","severity":1,"message":"717","line":210,"column":3,"nodeType":"718","messageId":"719","endLine":210,"endColumn":14},{"ruleId":"716","severity":1,"message":"717","line":211,"column":3,"nodeType":"718","messageId":"719","endLine":211,"endColumn":14},{"ruleId":"716","severity":1,"message":"717","line":259,"column":3,"nodeType":"718","messageId":"719","endLine":259,"endColumn":14},{"ruleId":"716","severity":1,"message":"717","line":260,"column":3,"nodeType":"718","messageId":"719","endLine":260,"endColumn":14},{"ruleId":"716","severity":1,"message":"717","line":423,"column":3,"nodeType":"718","messageId":"719","endLine":423,"endColumn":14},{"ruleId":"716","severity":1,"message":"717","line":553,"column":3,"nodeType":"718","messageId":"719","endLine":553,"endColumn":16},{"ruleId":"716","severity":1,"message":"717","line":563,"column":3,"nodeType":"718","messageId":"719","endLine":563,"endColumn":16},{"ruleId":"720","severity":1,"message":"749","line":4,"column":10,"nodeType":"722","messageId":"723","endLine":4,"endColumn":27},{"ruleId":"720","severity":1,"message":"750","line":23,"column":3,"nodeType":"722","messageId":"723","endLine":23,"endColumn":11},{"ruleId":"720","severity":1,"message":"751","line":5,"column":40,"nodeType":"722","messageId":"723","endLine":5,"endColumn":54},{"ruleId":"743","severity":1,"message":"752","line":27,"column":6,"nodeType":"745","endLine":27,"endColumn":16,"suggestions":"753"},{"ruleId":"720","severity":1,"message":"721","line":110,"column":5,"nodeType":"722","messageId":"723","endLine":110,"endColumn":11},{"ruleId":"720","severity":1,"message":"724","line":128,"column":10,"nodeType":"722","messageId":"723","endLine":128,"endColumn":20},{"ruleId":"720","severity":1,"message":"725","line":214,"column":9,"nodeType":"722","messageId":"723","endLine":214,"endColumn":18},{"ruleId":"720","severity":1,"message":"726","line":220,"column":9,"nodeType":"722","messageId":"723","endLine":220,"endColumn":19},{"ruleId":"720","severity":1,"message":"727","line":228,"column":9,"nodeType":"722","messageId":"723","endLine":228,"endColumn":25},{"ruleId":"720","severity":1,"message":"728","line":236,"column":9,"nodeType":"722","messageId":"723","endLine":236,"endColumn":23},{"ruleId":"720","severity":1,"message":"729","line":245,"column":9,"nodeType":"722","messageId":"723","endLine":245,"endColumn":22},{"ruleId":"720","severity":1,"message":"730","line":256,"column":9,"nodeType":"722","messageId":"723","endLine":256,"endColumn":18},{"ruleId":"720","severity":1,"message":"731","line":268,"column":9,"nodeType":"722","messageId":"723","endLine":268,"endColumn":16},{"ruleId":"720","severity":1,"message":"732","line":272,"column":9,"nodeType":"722","messageId":"723","endLine":272,"endColumn":20},{"ruleId":"720","severity":1,"message":"754","line":94,"column":5,"nodeType":"722","messageId":"723","endLine":94,"endColumn":12},{"ruleId":"720","severity":1,"message":"755","line":116,"column":10,"nodeType":"722","messageId":"723","endLine":116,"endColumn":18},{"ruleId":"720","severity":1,"message":"756","line":338,"column":9,"nodeType":"722","messageId":"723","endLine":338,"endColumn":21},{"ruleId":"720","severity":1,"message":"757","line":2,"column":17,"nodeType":"722","messageId":"723","endLine":2,"endColumn":25},{"ruleId":"720","severity":1,"message":"758","line":15,"column":3,"nodeType":"722","messageId":"723","endLine":15,"endColumn":10},{"ruleId":"720","severity":1,"message":"759","line":16,"column":3,"nodeType":"722","messageId":"723","endLine":16,"endColumn":9},{"ruleId":"720","severity":1,"message":"760","line":17,"column":3,"nodeType":"722","messageId":"723","endLine":17,"endColumn":13},{"ruleId":"720","severity":1,"message":"761","line":20,"column":3,"nodeType":"722","messageId":"723","endLine":20,"endColumn":12},{"ruleId":"720","severity":1,"message":"762","line":21,"column":3,"nodeType":"722","messageId":"723","endLine":21,"endColumn":16},"lines-around-directive",["763"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/no-unused-vars","'layout' is defined but never used.","Identifier","unusedVar","'refreshing' is assigned a value but never used.","'nextSlide' is assigned a value but never used.","'onAddSlide' is assigned a value but never used.","'onDuplicateSlide' is assigned a value but never used.","'onReOrderSlide' is assigned a value but never used.","'onDeleteSlide' is assigned a value but never used.","'prevSlide' is assigned a value but never used.","'hasNext' is assigned a value but never used.","'hasPrevious' is assigned a value but never used.","'setTemplate' is assigned a value but never used.","'coverType' is assigned a value but never used.","'setCoverType' is assigned a value but never used.","'setPaperSize' is assigned a value but never used.","'bindingType' is assigned a value but never used.","'setBindingType' is assigned a value but never used.","'material' is assigned a value but never used.","'setMaterial' is assigned a value but never used.","'color' is assigned a value but never used.","'setColor' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'router.query.email' and 'router.query.token'. Either include them or remove the dependency array.","ArrayExpression",["764"],"'Button' is defined but never used.","'Storage' is defined but never used.","'UploadablePicture' is defined but never used.","'children' is defined but never used.","'GoogleResponse' is defined but never used.","React Hook useEffect has a missing dependency: 'shippingAddress'. Either include it or remove the dependency array.",["765"],"'layouts' is defined but never used.","'fitScale' is assigned a value but never used.","'renderEditor' is assigned a value but never used.","'useState' is defined but never used.","'loading' is defined but never used.","'okText' is defined but never used.","'cancelText' is defined but never used.","'okDisable' is assigned a value but never used.","'cancelDisable' is assigned a value but never used.","padding-line-between-statements",{"desc":"766","fix":"767"},{"desc":"768","fix":"769"},"Update the dependencies array to be: [router.query.email, router.query.token]",{"range":"770","text":"771"},"Update the dependencies array to be: [id, shippingAddress, type]",{"range":"772","text":"773"},[937,939],"[router.query.email, router.query.token]",[869,879],"[id, shippingAddress, type]"]